
#=======================================
#  Field PIN_FLD_ACCOUNT_OBJ
#=======================================

POID PIN_FLD_ACCOUNT_OBJ {

	ID = 40;
}


#=======================================
#  Field PIN_FLD_CHANNEL_OBJ
#=======================================

POID PIN_FLD_CHANNEL_OBJ {

	ID = 1408;
}


#=======================================
#  Field PIN_FLD_CREATED_T
#=======================================

TIMESTAMP PIN_FLD_CREATED_T {

	ID = 19;
}


#=======================================
#  Field PIN_FLD_MOD_T
#=======================================

TIMESTAMP PIN_FLD_MOD_T {

	ID = 20;
}


#=======================================
#  Field PIN_FLD_POID
#=======================================

POID PIN_FLD_POID {

	ID = 16;
}


#=======================================
#  Field PIN_FLD_READ_ACCESS
#=======================================

STRING PIN_FLD_READ_ACCESS {

	ID = 1903;
}


#=======================================
#  Field PIN_FLD_SOURCE_OBJ
#=======================================

POID PIN_FLD_SOURCE_OBJ {

	ID = 36;
}


#=======================================
#  Field PIN_FLD_STATUS
#=======================================

ENUM PIN_FLD_STATUS {

	ID = 145;
}


#=======================================
#  Field PIN_FLD_SUPPLIER_OBJ
#=======================================

POID PIN_FLD_SUPPLIER_OBJ {

	ID = 1406;
}


#=======================================
#  Field PIN_FLD_WRITE_ACCESS
#=======================================

STRING PIN_FLD_WRITE_ACCESS {

	ID = 1904;
}


#=======================================
#  Storable Class /channel_event
#=======================================

STORABLE CLASS /channel_event {

	SEQ_START = "1";
	READ_ACCESS = "Global";
	WRITE_ACCESS = "Global";
	DESCR = "To work with directory servers which lack transactional semantics, and also to avoid compromising performance of a normal Infranet system operation, Infranet propagates changes to the directory server asynchronously using channeland channel_event objects. Channels events are used to track changes to infranet objects individually. A channel_event object is created for each tracked change and is pushed into the the channel_event table by the PCM_OP_CHANNEL_PUSH opcode. These entries are consumed by the PCM_OP_CHANNEL_SYNC opcode in the LDAP manager.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	POID PIN_FLD_ACCOUNT_OBJ {

		DESCR = "Link to the /account object which is responsible for creating this event.";
		ORDER = 0;
		CREATE = Required;
		MODIFY = Not_Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	POID PIN_FLD_CHANNEL_OBJ {

		DESCR = "Portal object id of the channel for this event.The channel object contains information about who theconsumer for the change the channel_event objectrepresents. The consummer information is used by thePCM_OP_REPL_POL_PUSH ";
		ORDER = 0;
		CREATE = Required;
		MODIFY = Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	TIMESTAMP PIN_FLD_CREATED_T {

		ORDER = 0;
		CREATE = System;
		MODIFY = System;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	TIMESTAMP PIN_FLD_MOD_T {

		ORDER = 0;
		CREATE = System;
		MODIFY = System;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	POID PIN_FLD_POID {

		ORDER = 0;
		CREATE = System;
		MODIFY = System;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	STRING PIN_FLD_READ_ACCESS {

		ORDER = 0;
		LENGTH = 1;
		CREATE = System;
		MODIFY = System;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	POID PIN_FLD_SOURCE_OBJ {

		DESCR = "Portal object id of the actual object that changed. This is the poid of the object that contains the changed information  that needs to be pushed. ";
		ORDER = 0;
		CREATE = Required;
		MODIFY = Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	ENUM PIN_FLD_STATUS {

		DESCR = "Current status of this object.The status indicates whether the data in this event have been pushed(PIN_STATUS_PUSHED/ (PIN_STATUS_NOT_PUSHED) or not.";
		ORDER = 0;
		CREATE = Optional;
		MODIFY = Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	POID PIN_FLD_SUPPLIER_OBJ {

		DESCR = "Portal object id of the supplier of this event.The supplier object contains information aboutthe event that caused the source objectto change.";
		ORDER = 0;
		CREATE = Required;
		MODIFY = Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	STRING PIN_FLD_WRITE_ACCESS {

		ORDER = 0;
		LENGTH = 1;
		CREATE = System;
		MODIFY = System;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

}


#=======================================
#  Storable Class /channel_event
#=======================================

STORABLE CLASS /channel_event IMPLEMENTATION ORACLE7 {

	SQL_TABLE = "channel_event_t";
	SQL_STORAGE = "tablespace pin00 storage (initial 200k next 200k maxextents unlimited pctincrease 0 ) ";

	#===================
	#  Fields 
	#===================

	POID PIN_FLD_ACCOUNT_OBJ {

		SQL_COLUMN = "account_obj";
	}

	POID PIN_FLD_CHANNEL_OBJ {

		SQL_COLUMN = "channel";
	}

	TIMESTAMP PIN_FLD_CREATED_T {

		SQL_COLUMN = "created_t";
	}

	TIMESTAMP PIN_FLD_MOD_T {

		SQL_COLUMN = "mod_t";
	}

	POID PIN_FLD_POID {

		SQL_COLUMN = "poid";
	}

	STRING PIN_FLD_READ_ACCESS {

		SQL_COLUMN = "read_access";
	}

	POID PIN_FLD_SOURCE_OBJ {

		SQL_COLUMN = "source_obj";
	}

	ENUM PIN_FLD_STATUS {

		SQL_COLUMN = "status";
	}

	POID PIN_FLD_SUPPLIER_OBJ {

		SQL_COLUMN = "supplier_obj";
	}

	STRING PIN_FLD_WRITE_ACCESS {

		SQL_COLUMN = "write_access";
	}

}

