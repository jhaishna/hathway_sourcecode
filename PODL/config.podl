
#=======================================
#  Field PIN_FLD_ACCOUNT_OBJ
#=======================================

POID PIN_FLD_ACCOUNT_OBJ {

	ID = 40;
}


#=======================================
#  Field PIN_FLD_CREATED_T
#=======================================

TIMESTAMP PIN_FLD_CREATED_T {

	ID = 19;
}


#=======================================
#  Field PIN_FLD_DESCR
#=======================================

STRING PIN_FLD_DESCR {

	ID = 54;
}


#=======================================
#  Field PIN_FLD_HOSTNAME
#=======================================

STRING PIN_FLD_HOSTNAME {

	ID = 337;
}


#=======================================
#  Field PIN_FLD_MOD_T
#=======================================

TIMESTAMP PIN_FLD_MOD_T {

	ID = 20;
}


#=======================================
#  Field PIN_FLD_NAME
#=======================================

STRING PIN_FLD_NAME {

	ID = 17;
}


#=======================================
#  Field PIN_FLD_POID
#=======================================

POID PIN_FLD_POID {

	ID = 16;
}


#=======================================
#  Field PIN_FLD_PROGRAM_NAME
#=======================================

STRING PIN_FLD_PROGRAM_NAME {

	ID = 67;
}


#=======================================
#  Field PIN_FLD_READ_ACCESS
#=======================================

STRING PIN_FLD_READ_ACCESS {

	ID = 1903;
}


#=======================================
#  Field PIN_FLD_VALUE
#=======================================

STRING PIN_FLD_VALUE {

	ID = 502;
}


#=======================================
#  Field PIN_FLD_VERSION
#=======================================

STRING PIN_FLD_VERSION {

	ID = 339;
}


#=======================================
#  Field PIN_FLD_WRITE_ACCESS
#=======================================

STRING PIN_FLD_WRITE_ACCESS {

	ID = 1904;
}


#=======================================
#  Field PIN_FLD_DROPPED_CALL_TERMINATE_CAUSE_ARRAY
#=======================================

ARRAY PIN_FLD_DROPPED_CALL_TERMINATE_CAUSE_ARRAY {

	ID = 8019;
}


#=======================================
#  Field PIN_FLD_DROPPED_CALL_TERMINATE_CAUSE
#=======================================

ENUM PIN_FLD_DROPPED_CALL_TERMINATE_CAUSE {

	ID = 8020;
}


#=======================================
#  Field PIN_FLD_SCALED_DELAY_INFO
#=======================================

ARRAY PIN_FLD_SCALED_DELAY_INFO {

	ID = 8035;
}


#=======================================
#  Field PIN_FLD_MAX_DELAY_TIME
#=======================================

INT PIN_FLD_MAX_DELAY_TIME {

	ID = 9544;
}


#=======================================
#  Field PIN_FLD_TELCO_INFO
#=======================================

SUBSTRUCT PIN_FLD_TELCO_INFO {

	ID = 8002;
}


#=======================================
#  Field PIN_FLD_DELETED_FLAG
#=======================================

INT PIN_FLD_DELETED_FLAG {

	ID = 960;
}


#=======================================
#  Field PIN_FLD_DUPLICATE_CHECK_TYPE
#=======================================

ENUM PIN_FLD_DUPLICATE_CHECK_TYPE {

	ID = 8013;
}


#=======================================
#  Field PIN_FLD_EXPIRATION_T
#=======================================

TIMESTAMP PIN_FLD_EXPIRATION_T {

	ID = 5601;
}


#=======================================
#  Field PIN_FLD_SUBSESSION_MODE
#=======================================

ENUM PIN_FLD_SUBSESSION_MODE {

	ID = 3041;
}


#=======================================
#  Field PIN_FLD_EXT_RA
#=======================================

ARRAY PIN_FLD_EXT_RA {

	ID = 6410;
}


#=======================================
#  Field PIN_FLD_LOCALE_DESC_ID
#=======================================

INT PIN_FLD_LOCALE_DESC_ID {

	ID = 2391;
}


#=======================================
#  Field PIN_FLD_STRING_ID
#=======================================

INT PIN_FLD_STRING_ID {

	ID = 1891;
}


#=======================================
#  Field PIN_FLD_ACH_INFO
#=======================================

ARRAY PIN_FLD_ACH_INFO {

	ID = 7853;
}


#=======================================
#  Field PIN_FLD_CHANNEL_ID
#=======================================

INT PIN_FLD_CHANNEL_ID {

	ID = 944;
}


#=======================================
#  Field PIN_FLD_MERCHANT
#=======================================

STRING PIN_FLD_MERCHANT {

	ID = 90;
}


#=======================================
#  Field PIN_FLD_POID_VAL
#=======================================

POID PIN_FLD_POID_VAL {

	ID = 1125;
}


#=======================================
#  Field PIN_FLD_EVENTS
#=======================================

ARRAY PIN_FLD_EVENTS {

	ID = 503;
}


#=======================================
#  Field PIN_FLD_TYPE_STR
#=======================================

STRING PIN_FLD_TYPE_STR {

	ID = 499;
}


#=======================================
#  Field PIN_FLD_PARAMS
#=======================================

ARRAY PIN_FLD_PARAMS {

	ID = 5775;
}


#=======================================
#  Field PIN_FLD_EVENT_TYPE
#=======================================

STRING PIN_FLD_EVENT_TYPE {

	ID = 904;
}


#=======================================
#  Field PIN_FLD_TAX_CODE
#=======================================

STRING PIN_FLD_TAX_CODE {

	ID = 536;
}


#=======================================
#  Field PIN_FLD_AUTH_REAUTH_INFO
#=======================================

ARRAY PIN_FLD_AUTH_REAUTH_INFO {

	ID = 9542;
}


#=======================================
#  Field PIN_FLD_ALLOW_QUICK_REJECT
#=======================================

ENUM PIN_FLD_ALLOW_QUICK_REJECT {

	ID = 9546;
}


#=======================================
#  Field PIN_FLD_REAUTH_FLAG
#=======================================

ENUM PIN_FLD_REAUTH_FLAG {

	ID = 9545;
}


#=======================================
#  Field PIN_FLD_RESOURCE_INFO
#=======================================

ARRAY PIN_FLD_RESOURCE_INFO {

	ID = 9543;
}


#=======================================
#  Field PIN_FLD_AMOUNT
#=======================================

DECIMAL PIN_FLD_AMOUNT {

	ID = 57;
}


#=======================================
#  Field PIN_FLD_THRESHOLD_LOWER
#=======================================

DECIMAL PIN_FLD_THRESHOLD_LOWER {

	ID = 9548;
}


#=======================================
#  Field PIN_FLD_THRESHOLD_UPPER
#=======================================

DECIMAL PIN_FLD_THRESHOLD_UPPER {

	ID = 9547;
}


#=======================================
#  Field PIN_FLD_SERVICE_TYPE
#=======================================

STRING PIN_FLD_SERVICE_TYPE {

	ID = 1454;
}


#=======================================
#  Field PIN_FLD_BALANCES
#=======================================

ARRAY PIN_FLD_BALANCES {

	ID = 198;
}


#=======================================
#  Field PIN_FLD_APPLY_MODE
#=======================================

ENUM PIN_FLD_APPLY_MODE {

	ID = 9578;
}


#=======================================
#  Field PIN_FLD_BEID_STR_CODE
#=======================================

STRING PIN_FLD_BEID_STR_CODE {

	ID = 1600;
}


#=======================================
#  Field PIN_FLD_CONSUMPTION_RULE
#=======================================

ENUM PIN_FLD_CONSUMPTION_RULE {

	ID = 7770;
}


#=======================================
#  Field PIN_FLD_RULES
#=======================================

ARRAY PIN_FLD_RULES {

	ID = 5779;
}


#=======================================
#  Field PIN_FLD_PROCESSING_STAGE
#=======================================

ENUM PIN_FLD_PROCESSING_STAGE {

	ID = 7452;
}


#=======================================
#  Field PIN_FLD_ROUNDING
#=======================================

INT PIN_FLD_ROUNDING {

	ID = 72;
}


#=======================================
#  Field PIN_FLD_ROUNDING_MODE
#=======================================

ENUM PIN_FLD_ROUNDING_MODE {

	ID = 1627;
}


#=======================================
#  Field PIN_FLD_TOLERANCE_AMOUNT_MAX
#=======================================

DECIMAL PIN_FLD_TOLERANCE_AMOUNT_MAX {

	ID = 1602;
}


#=======================================
#  Field PIN_FLD_TOLERANCE_AMOUNT_MIN
#=======================================

DECIMAL PIN_FLD_TOLERANCE_AMOUNT_MIN {

	ID = 1601;
}


#=======================================
#  Field PIN_FLD_TOLERANCE_PERCENT
#=======================================

DECIMAL PIN_FLD_TOLERANCE_PERCENT {

	ID = 1603;
}


#=======================================
#  Field PIN_FLD_STATUS
#=======================================

ENUM PIN_FLD_STATUS {

	ID = 145;
}


#=======================================
#  Field PIN_FLD_SYMBOL
#=======================================

STRING PIN_FLD_SYMBOL {

	ID = 1606;
}


#=======================================
#  Field PIN_FLD_VALIDITY_IN_DAYS
#=======================================

INT PIN_FLD_VALIDITY_IN_DAYS {

	ID = 1630;
}


#=======================================
#  Field PIN_FLD_BILLING_SEGMENTS
#=======================================

ARRAY PIN_FLD_BILLING_SEGMENTS {

	ID = 8307;
}


#=======================================
#  Field PIN_FLD_MAP
#=======================================

ARRAY PIN_FLD_MAP {

	ID = 8300;
}


#=======================================
#  Field PIN_FLD_ACTG_CYCLE_DOM
#=======================================

INT PIN_FLD_ACTG_CYCLE_DOM {

	ID = 752;
}


#=======================================
#  Field PIN_FLD_BILLING_SEGMENT
#=======================================

ENUM PIN_FLD_BILLING_SEGMENT {

	ID = 8301;
}


#=======================================
#  Field PIN_FLD_MAX_ACCOUNTS
#=======================================

INT PIN_FLD_MAX_ACCOUNTS {

	ID = 8303;
}


#=======================================
#  Field PIN_FLD_MAX_SERVICES
#=======================================

INT PIN_FLD_MAX_SERVICES {

	ID = 8305;
}


#=======================================
#  Field PIN_FLD_NUM_ACCOUNTS
#=======================================

INT PIN_FLD_NUM_ACCOUNTS {

	ID = 8302;
}


#=======================================
#  Field PIN_FLD_NUM_SERVICES
#=======================================

INT PIN_FLD_NUM_SERVICES {

	ID = 8304;
}


#=======================================
#  Field PIN_FLD_TOTAL_PROCESS_T
#=======================================

TIMESTAMP PIN_FLD_TOTAL_PROCESS_T {

	ID = 8306;
}


#=======================================
#  Field PIN_FLD_PARAM_NAME
#=======================================

STRING PIN_FLD_PARAM_NAME {

	ID = 5776;
}


#=======================================
#  Field PIN_FLD_PARAM_TYPE
#=======================================

INT PIN_FLD_PARAM_TYPE {

	ID = 5777;
}


#=======================================
#  Field PIN_FLD_PARAM_VALUE
#=======================================

STRING PIN_FLD_PARAM_VALUE {

	ID = 5778;
}


#=======================================
#  Field PIN_FLD_PAIR
#=======================================

ARRAY PIN_FLD_PAIR {

	ID = 432;
}


#=======================================
#  Field PIN_FLD_PAIR_KEY
#=======================================

STRING PIN_FLD_PAIR_KEY {

	ID = 433;
}


#=======================================
#  Field PIN_FLD_PAIR_VALUE
#=======================================

STRING PIN_FLD_PAIR_VALUE {

	ID = 9352;
}


#=======================================
#  Field PIN_FLD_TEMPLATE_ARRAY
#=======================================

ARRAY PIN_FLD_TEMPLATE_ARRAY {

	ID = 9351;
}


#=======================================
#  Field PIN_FLD_TEMPLATE_OBJ
#=======================================

POID PIN_FLD_TEMPLATE_OBJ {

	ID = 7705;
}


#=======================================
#  Field PIN_FLD_BUSINESS_TYPE_ARRAY
#=======================================

ARRAY PIN_FLD_BUSINESS_TYPE_ARRAY {

	ID = 284;
}


#=======================================
#  Field PIN_FLD_CALENDAR_DATE
#=======================================

ARRAY PIN_FLD_CALENDAR_DATE {

	ID = 1326;
}


#=======================================
#  Field PIN_FLD_CALENDAR_DOM
#=======================================

INT PIN_FLD_CALENDAR_DOM {

	ID = 1327;
}


#=======================================
#  Field PIN_FLD_CALENDAR_MOY
#=======================================

INT PIN_FLD_CALENDAR_MOY {

	ID = 1328;
}


#=======================================
#  Field PIN_FLD_CALENDAR_YEAR
#=======================================

INT PIN_FLD_CALENDAR_YEAR {

	ID = 1329;
}


#=======================================
#  Field PIN_FLD_CONFIG_ACTION_INFO
#=======================================

SUBSTRUCT PIN_FLD_CONFIG_ACTION_INFO {

	ID = 7735;
}


#=======================================
#  Field PIN_FLD_ACTION_DESCR
#=======================================

STRING PIN_FLD_ACTION_DESCR {

	ID = 7736;
}


#=======================================
#  Field PIN_FLD_ACTION_NAME
#=======================================

STRING PIN_FLD_ACTION_NAME {

	ID = 1852;
}


#=======================================
#  Field PIN_FLD_ACTION_TYPE
#=======================================

STRING PIN_FLD_ACTION_TYPE {

	ID = 7704;
}


#=======================================
#  Field PIN_FLD_OPCODE
#=======================================

INT PIN_FLD_OPCODE {

	ID = 368;
}


#=======================================
#  Field PIN_FLD_TARGET_ACTION
#=======================================

ENUM PIN_FLD_TARGET_ACTION {

	ID = 7749;
}


#=======================================
#  Field PIN_FLD_FINANCE_CHARGE_INFO
#=======================================

SUBSTRUCT PIN_FLD_FINANCE_CHARGE_INFO {

	ID = 7734;
}


#=======================================
#  Field PIN_FLD_PERCENT
#=======================================

DECIMAL PIN_FLD_PERCENT {

	ID = 531;
}


#=======================================
#  Field PIN_FLD_LATE_FEE_INFO
#=======================================

SUBSTRUCT PIN_FLD_LATE_FEE_INFO {

	ID = 7732;
}


#=======================================
#  Field PIN_FLD_CURRENCY
#=======================================

INT PIN_FLD_CURRENCY {

	ID = 128;
}


#=======================================
#  Field PIN_FLD_OPTIONS
#=======================================

ENUM PIN_FLD_OPTIONS {

	ID = 7733;
}


#=======================================
#  Field PIN_FLD_BUCKETS
#=======================================

ARRAY PIN_FLD_BUCKETS {

	ID = 7706;
}


#=======================================
#  Field PIN_FLD_DAYS
#=======================================

INT PIN_FLD_DAYS {

	ID = 6204;
}


#=======================================
#  Field PIN_FLD_PROFILE_INFO
#=======================================

SUBSTRUCT PIN_FLD_PROFILE_INFO {

	ID = 7707;
}


#=======================================
#  Field PIN_FLD_PROFILE_DESCR
#=======================================

STRING PIN_FLD_PROFILE_DESCR {

	ID = 7709;
}


#=======================================
#  Field PIN_FLD_PROFILE_NAME
#=======================================

STRING PIN_FLD_PROFILE_NAME {

	ID = 7708;
}


#=======================================
#  Field PIN_FLD_ACTIONS
#=======================================

ARRAY PIN_FLD_ACTIONS {

	ID = 7717;
}


#=======================================
#  Field PIN_FLD_ACTION_MODE
#=======================================

ENUM PIN_FLD_ACTION_MODE {

	ID = 7737;
}


#=======================================
#  Field PIN_FLD_CONFIG_ACTION_OBJ
#=======================================

POID PIN_FLD_CONFIG_ACTION_OBJ {

	ID = 7718;
}


#=======================================
#  Field PIN_FLD_DUE_DAY
#=======================================

INT PIN_FLD_DUE_DAY {

	ID = 7719;
}


#=======================================
#  Field PIN_FLD_PROFILE_DATA_ARRAY
#=======================================

ARRAY PIN_FLD_PROFILE_DATA_ARRAY {

	ID = 7790;
}


#=======================================
#  Field PIN_FLD_SCENARIO_INFO
#=======================================

SUBSTRUCT PIN_FLD_SCENARIO_INFO {

	ID = 7710;
}


#=======================================
#  Field PIN_FLD_CONFIG_PROFILE_OBJ
#=======================================

POID PIN_FLD_CONFIG_PROFILE_OBJ {

	ID = 7713;
}


#=======================================
#  Field PIN_FLD_ENTRY_AMOUNT
#=======================================

DECIMAL PIN_FLD_ENTRY_AMOUNT {

	ID = 7714;
}


#=======================================
#  Field PIN_FLD_ENTRY_DAYS
#=======================================

INT PIN_FLD_ENTRY_DAYS {

	ID = 7716;
}


#=======================================
#  Field PIN_FLD_EXIT_AMOUNT
#=======================================

DECIMAL PIN_FLD_EXIT_AMOUNT {

	ID = 7715;
}


#=======================================
#  Field PIN_FLD_SCENARIO_DESCR
#=======================================

STRING PIN_FLD_SCENARIO_DESCR {

	ID = 7712;
}


#=======================================
#  Field PIN_FLD_SCENARIO_NAME
#=======================================

STRING PIN_FLD_SCENARIO_NAME {

	ID = 7711;
}


#=======================================
#  Field PIN_FLD_SEVERITY
#=======================================

INT PIN_FLD_SEVERITY {

	ID = 7745;
}


#=======================================
#  Field PIN_FLD_CLASS_NAME
#=======================================

STRING PIN_FLD_CLASS_NAME {

	ID = 9885;
}


#=======================================
#  Field PIN_FLD_FIELD_NAME
#=======================================

STRING PIN_FLD_FIELD_NAME {

	ID = 508;
}


#=======================================
#  Field PIN_FLD_STR_VERSION
#=======================================

INT PIN_FLD_STR_VERSION {

	ID = 1892;
}


#=======================================
#  Field PIN_FLD_TYPE
#=======================================

ENUM PIN_FLD_TYPE {

	ID = 53;
}


#=======================================
#  Field PIN_FLD_VALUES
#=======================================

ARRAY PIN_FLD_VALUES {

	ID = 9501;
}


#=======================================
#  Field PIN_FLD_COUNTRIES
#=======================================

ARRAY PIN_FLD_COUNTRIES {

	ID = 2003;
}


#=======================================
#  Field PIN_FLD_CANON_COUNTRY
#=======================================

STRING PIN_FLD_CANON_COUNTRY {

	ID = 1501;
}


#=======================================
#  Field PIN_FLD_CURRENCIES
#=======================================

ARRAY PIN_FLD_CURRENCIES {

	ID = 1622;
}


#=======================================
#  Field PIN_FLD_TERMINATE_CAUSES
#=======================================

ARRAY PIN_FLD_TERMINATE_CAUSES {

	ID = 2000;
}


#=======================================
#  Field PIN_FLD_CREDIT_AMOUNT
#=======================================

DECIMAL PIN_FLD_CREDIT_AMOUNT {

	ID = 2001;
}


#=======================================
#  Field PIN_FLD_TERMINATE_CAUSE
#=======================================

ENUM PIN_FLD_TERMINATE_CAUSE {

	ID = 427;
}


#=======================================
#  Field PIN_FLD_TERMINATE_CAUSE_STR
#=======================================

STRING PIN_FLD_TERMINATE_CAUSE_STR {

	ID = 2002;
}


#=======================================
#  Field PIN_FLD_PROFILES
#=======================================

ARRAY PIN_FLD_PROFILES {

	ID = 110;
}


#=======================================
#  Field PIN_FLD_CREDIT_FLOOR
#=======================================

DECIMAL PIN_FLD_CREDIT_FLOOR {

	ID = 833;
}


#=======================================
#  Field PIN_FLD_CREDIT_LIMIT
#=======================================

DECIMAL PIN_FLD_CREDIT_LIMIT {

	ID = 200;
}


#=======================================
#  Field PIN_FLD_CREDIT_THRESHOLDS
#=======================================

INT PIN_FLD_CREDIT_THRESHOLDS {

	ID = 832;
}


#=======================================
#  Field PIN_FLD_CREDIT_THRESHOLDS_FIXED
#=======================================

STRING PIN_FLD_CREDIT_THRESHOLDS_FIXED {

	ID = 871;
}


#=======================================
#  Field PIN_FLD_CUR_RATES_TIMEFRAMES
#=======================================

ARRAY PIN_FLD_CUR_RATES_TIMEFRAMES {

	ID = 1607;
}


#=======================================
#  Field PIN_FLD_CUR_CONV_RATES
#=======================================

ARRAY PIN_FLD_CUR_CONV_RATES {

	ID = 1608;
}


#=======================================
#  Field PIN_FLD_CURRENCY_DST
#=======================================

INT PIN_FLD_CURRENCY_DST {

	ID = 1610;
}


#=======================================
#  Field PIN_FLD_CURRENCY_OPERATOR
#=======================================

ENUM PIN_FLD_CURRENCY_OPERATOR {

	ID = 1612;
}


#=======================================
#  Field PIN_FLD_CURRENCY_RATE
#=======================================

DECIMAL PIN_FLD_CURRENCY_RATE {

	ID = 1611;
}


#=======================================
#  Field PIN_FLD_CURRENCY_SRC
#=======================================

INT PIN_FLD_CURRENCY_SRC {

	ID = 1609;
}


#=======================================
#  Field PIN_FLD_END_T
#=======================================

TIMESTAMP PIN_FLD_END_T {

	ID = 62;
}


#=======================================
#  Field PIN_FLD_START_T
#=======================================

TIMESTAMP PIN_FLD_START_T {

	ID = 61;
}


#=======================================
#  Field PIN_FLD_CURRENCY_EMU_MEMBERS
#=======================================

ARRAY PIN_FLD_CURRENCY_EMU_MEMBERS {

	ID = 1617;
}


#=======================================
#  Field PIN_FLD_CUR_SUPPORTED_COMB
#=======================================

ARRAY PIN_FLD_CUR_SUPPORTED_COMB {

	ID = 1613;
}


#=======================================
#  Field PIN_FLD_CUR_SECONDARY_REQ
#=======================================

ENUM PIN_FLD_CUR_SECONDARY_REQ {

	ID = 1614;
}


#=======================================
#  Field PIN_FLD_CUR_SUPPORTED_SEC_CUR
#=======================================

ARRAY PIN_FLD_CUR_SUPPORTED_SEC_CUR {

	ID = 1615;
}


#=======================================
#  Field PIN_FLD_CURRENCY_SECONDARY
#=======================================

INT PIN_FLD_CURRENCY_SECONDARY {

	ID = 1616;
}


#=======================================
#  Field PIN_FLD_CUSTOMER_SEGMENTS
#=======================================

ARRAY PIN_FLD_CUSTOMER_SEGMENTS {

	ID = 8326;
}


#=======================================
#  Field PIN_FLD_DEALERS
#=======================================

ARRAY PIN_FLD_DEALERS {

	ID = 7616;
}


#=======================================
#  Field PIN_FLD_DEALER_CODE
#=======================================

STRING PIN_FLD_DEALER_CODE {

	ID = 7602;
}


#=======================================
#  Field PIN_FLD_DEALER_NAME
#=======================================

STRING PIN_FLD_DEALER_NAME {

	ID = 7601;
}


#=======================================
#  Field PIN_FLD_DEVICES
#=======================================

ARRAY PIN_FLD_DEVICES {

	ID = 5558;
}


#=======================================
#  Field PIN_FLD_DEVICE_TYPE
#=======================================

STRING PIN_FLD_DEVICE_TYPE {

	ID = 5553;
}


#=======================================
#  Field PIN_FLD_PERMITTEDS
#=======================================

ARRAY PIN_FLD_PERMITTEDS {

	ID = 241;
}


#=======================================
#  Field PIN_FLD_PERMITTED
#=======================================

STRING PIN_FLD_PERMITTED {

	ID = 249;
}


#=======================================
#  Field PIN_FLD_DEVICE_STATES
#=======================================

ARRAY PIN_FLD_DEVICE_STATES {

	ID = 5554;
}


#=======================================
#  Field PIN_FLD_FLAGS
#=======================================

INT PIN_FLD_FLAGS {

	ID = 52;
}


#=======================================
#  Field PIN_FLD_NEXT_STATES
#=======================================

ARRAY PIN_FLD_NEXT_STATES {

	ID = 5556;
}


#=======================================
#  Field PIN_FLD_STATE_ID
#=======================================

INT PIN_FLD_STATE_ID {

	ID = 5552;
}


#=======================================
#  Field PIN_FLD_STATE_TYPE
#=======================================

ENUM PIN_FLD_STATE_TYPE {

	ID = 5555;
}


#=======================================
#  Field PIN_FLD_TYPE_INFO
#=======================================

SUBSTRUCT PIN_FLD_TYPE_INFO {

	ID = 5569;
}


#=======================================
#  Field PIN_FLD_DISTRIBUTION
#=======================================

ARRAY PIN_FLD_DISTRIBUTION {

	ID = 2307;
}


#=======================================
#  Field PIN_FLD_CRITERION
#=======================================

STRING PIN_FLD_CRITERION {

	ID = 2301;
}


#=======================================
#  Field PIN_FLD_CURR_ACCOUNT_SIZE
#=======================================

INT PIN_FLD_CURR_ACCOUNT_SIZE {

	ID = 2305;
}


#=======================================
#  Field PIN_FLD_DB_NO
#=======================================

INT PIN_FLD_DB_NO {

	ID = 2302;
}


#=======================================
#  Field PIN_FLD_DB_PRIORITY
#=======================================

INT PIN_FLD_DB_PRIORITY {

	ID = 2303;
}


#=======================================
#  Field PIN_FLD_DB_STATUS
#=======================================

ENUM PIN_FLD_DB_STATUS {

	ID = 2306;
}


#=======================================
#  Field PIN_FLD_MAX_ACCOUNT_SIZE
#=======================================

INT PIN_FLD_MAX_ACCOUNT_SIZE {

	ID = 2304;
}


#=======================================
#  Field PIN_FLD_EVENT_MAP
#=======================================

ARRAY PIN_FLD_EVENT_MAP {

	ID = 2248;
}


#=======================================
#  Field PIN_FLD_COUNT
#=======================================

INT PIN_FLD_COUNT {

	ID = 496;
}


#=======================================
#  Field PIN_FLD_EVENT_DESCR
#=======================================

STRING PIN_FLD_EVENT_DESCR {

	ID = 56;
}


#=======================================
#  Field PIN_FLD_INDICATOR
#=======================================

INT PIN_FLD_INDICATOR {

	ID = 958;
}


#=======================================
#  Field PIN_FLD_UNIT
#=======================================

ENUM PIN_FLD_UNIT {

	ID = 2235;
}


#=======================================
#  Field PIN_FLD_CRITERIA
#=======================================

ARRAY PIN_FLD_CRITERIA {

	ID = 1025;
}


#=======================================
#  Field PIN_FLD_CRITERIA_NAME
#=======================================

STRING PIN_FLD_CRITERIA_NAME {

	ID = 9522;
}


#=======================================
#  Field PIN_FLD_CRITERIA_TYPES
#=======================================

ARRAY PIN_FLD_CRITERIA_TYPES {

	ID = 9521;
}


#=======================================
#  Field PIN_FLD_CONFIG_INFO
#=======================================

SUBSTRUCT PIN_FLD_CONFIG_INFO {

	ID = 7440;
}


#=======================================
#  Field PIN_FLD_DIRECTORY
#=======================================

STRING PIN_FLD_DIRECTORY {

	ID = 501;
}


#=======================================
#  Field PIN_FLD_FILENAME_PREFIX
#=======================================

STRING PIN_FLD_FILENAME_PREFIX {

	ID = 976;
}


#=======================================
#  Field PIN_FLD_SOURCE
#=======================================

STRING PIN_FLD_SOURCE {

	ID = 5562;
}


#=======================================
#  Field PIN_FLD_GL_SEGMENTS
#=======================================

ARRAY PIN_FLD_GL_SEGMENTS {

	ID = 1828;
}


#=======================================
#  Field PIN_FLD_DAY
#=======================================

ENUM PIN_FLD_DAY {

	ID = 9031;
}


#=======================================
#  Field PIN_FLD_GL_NON_MONETARY_FLAG
#=======================================

ENUM PIN_FLD_GL_NON_MONETARY_FLAG {

	ID = 9805;
}


#=======================================
#  Field PIN_FLD_GL_REPORT_FREQUENCY_TYPE
#=======================================

ENUM PIN_FLD_GL_REPORT_FREQUENCY_TYPE {

	ID = 9803;
}


#=======================================
#  Field PIN_FLD_GL_REPORT_TYPE
#=======================================

INT PIN_FLD_GL_REPORT_TYPE {

	ID = 516;
}


#=======================================
#  Field PIN_FLD_GL_RESOURCE_CATEGORY
#=======================================

ENUM PIN_FLD_GL_RESOURCE_CATEGORY {

	ID = 9804;
}


#=======================================
#  Field PIN_FLD_GL_SEGMENT
#=======================================

STRING PIN_FLD_GL_SEGMENT {

	ID = 517;
}


#=======================================
#  Field PIN_FLD_RESOURCE_ID_LIST
#=======================================

STRING PIN_FLD_RESOURCE_ID_LIST {

	ID = 975;
}


#=======================================
#  Field PIN_FLD_REVENUES
#=======================================

ARRAY PIN_FLD_REVENUES {

	ID = 8229;
}


#=======================================
#  Field PIN_FLD_START_DATES
#=======================================

ARRAY PIN_FLD_START_DATES {

	ID = 977;
}


#=======================================
#  Field PIN_FLD_EFFECTIVE_START_T
#=======================================

TIMESTAMP PIN_FLD_EFFECTIVE_START_T {

	ID = 867;
}


#=======================================
#  Field PIN_FLD_DOMAINS
#=======================================

ARRAY PIN_FLD_DOMAINS {

	ID = 1120;
}


#=======================================
#  Field PIN_FLD_BINSTR_VAL
#=======================================

BINSTR PIN_FLD_BINSTR_VAL {

	ID = 1121;
}


#=======================================
#  Field PIN_FLD_ENUM_VAL
#=======================================

ENUM PIN_FLD_ENUM_VAL {

	ID = 1122;
}


#=======================================
#  Field PIN_FLD_INT_VAL
#=======================================

INT PIN_FLD_INT_VAL {

	ID = 1123;
}


#=======================================
#  Field PIN_FLD_NUM_VAL
#=======================================

DECIMAL PIN_FLD_NUM_VAL {

	ID = 1124;
}


#=======================================
#  Field PIN_FLD_STR_VAL
#=======================================

STRING PIN_FLD_STR_VAL {

	ID = 1126;
}


#=======================================
#  Field PIN_FLD_TSTAMP_VAL
#=======================================

TIMESTAMP PIN_FLD_TSTAMP_VAL {

	ID = 1127;
}


#=======================================
#  Field PIN_FLD_UINT_VAL
#=======================================

INT PIN_FLD_UINT_VAL {

	ID = 1128;
}


#=======================================
#  Field PIN_FLD_FORMATS
#=======================================

ARRAY PIN_FLD_FORMATS {

	ID = 1129;
}


#=======================================
#  Field PIN_FLD_FORMAT_STR
#=======================================

STRING PIN_FLD_FORMAT_STR {

	ID = 1130;
}


#=======================================
#  Field PIN_FLD_VALIDATION
#=======================================

SUBSTRUCT PIN_FLD_VALIDATION {

	ID = 902;
}


#=======================================
#  Field PIN_FLD_FIELD_TYPE
#=======================================

INT PIN_FLD_FIELD_TYPE {

	ID = 509;
}


#=======================================
#  Field PIN_FLD_MAXIMUM
#=======================================

DECIMAL PIN_FLD_MAXIMUM {

	ID = 87;
}


#=======================================
#  Field PIN_FLD_MAX_LENGTH
#=======================================

INT PIN_FLD_MAX_LENGTH {

	ID = 1132;
}


#=======================================
#  Field PIN_FLD_MINIMUM
#=======================================

DECIMAL PIN_FLD_MINIMUM {

	ID = 86;
}


#=======================================
#  Field PIN_FLD_MIN_LENGTH
#=======================================

INT PIN_FLD_MIN_LENGTH {

	ID = 1133;
}


#=======================================
#  Field PIN_FLD_GEL_TEMPLATE_INFO
#=======================================

SUBSTRUCT PIN_FLD_GEL_TEMPLATE_INFO {

	ID = 2350;
}


#=======================================
#  Field PIN_FLD_GEL_TEMPLATE
#=======================================

BUF PIN_FLD_GEL_TEMPLATE {

	ID = 2351;
}


#=======================================
#  Field PIN_FLD_GL_CHARTACCTS
#=======================================

ARRAY PIN_FLD_GL_CHARTACCTS {

	ID = 1834;
}


#=======================================
#  Field PIN_FLD_COA_ID
#=======================================

STRING PIN_FLD_COA_ID {

	ID = 1833;
}


#=======================================
#  Field PIN_FLD_COA_NAME
#=======================================

STRING PIN_FLD_COA_NAME {

	ID = 1835;
}


#=======================================
#  Field PIN_FLD_GL_COA_ACCTS
#=======================================

ARRAY PIN_FLD_GL_COA_ACCTS {

	ID = 1836;
}


#=======================================
#  Field PIN_FLD_ACCOUNT_CODE
#=======================================

STRING PIN_FLD_ACCOUNT_CODE {

	ID = 1837;
}


#=======================================
#  Field PIN_FLD_BRAND_NAME
#=======================================

STRING PIN_FLD_BRAND_NAME {

	ID = 1832;
}


#=======================================
#  Field PIN_FLD_PARENT_SEGMENT
#=======================================

STRING PIN_FLD_PARENT_SEGMENT {

	ID = 1830;
}


#=======================================
#  Field PIN_FLD_ROLL_UP
#=======================================

STRING PIN_FLD_ROLL_UP {

	ID = 1831;
}


#=======================================
#  Field PIN_FLD_SEGMENT_NAME
#=======================================

STRING PIN_FLD_SEGMENT_NAME {

	ID = 1829;
}


#=======================================
#  Field PIN_FLD_GL_IDS
#=======================================

ARRAY PIN_FLD_GL_IDS {

	ID = 839;
}


#=======================================
#  Field PIN_FLD_GL_ACCTS
#=======================================

ARRAY PIN_FLD_GL_ACCTS {

	ID = 837;
}


#=======================================
#  Field PIN_FLD_ATTRIBUTE
#=======================================

INT PIN_FLD_ATTRIBUTE {

	ID = 513;
}


#=======================================
#  Field PIN_FLD_GL_AR_ACCT
#=======================================

STRING PIN_FLD_GL_AR_ACCT {

	ID = 835;
}


#=======================================
#  Field PIN_FLD_GL_OFFSET_ACCT
#=======================================

STRING PIN_FLD_GL_OFFSET_ACCT {

	ID = 836;
}


#=======================================
#  Field PIN_FLD_IMPACT_CATEGORIES
#=======================================

ARRAY PIN_FLD_IMPACT_CATEGORIES {

	ID = 1451;
}


#=======================================
#  Field PIN_FLD_IMPACT_CATEGORY
#=======================================

STRING PIN_FLD_IMPACT_CATEGORY {

	ID = 1452;
}


#=======================================
#  Field PIN_FLD_RATE_CATEGORY
#=======================================

STRING PIN_FLD_RATE_CATEGORY {

	ID = 1453;
}


#=======================================
#  Field PIN_FLD_INVENTORY_INFO
#=======================================

SUBSTRUCT PIN_FLD_INVENTORY_INFO {

	ID = 7614;
}


#=======================================
#  Field PIN_FLD_INVENTORY_TEMPLATE
#=======================================

BUF PIN_FLD_INVENTORY_TEMPLATE {

	ID = 7615;
}


#=======================================
#  Field PIN_FLD_CYCLE_TYPE
#=======================================

ENUM PIN_FLD_CYCLE_TYPE {

	ID = 505;
}


#=======================================
#  Field PIN_FLD_DETAIL_TYPE
#=======================================

ENUM PIN_FLD_DETAIL_TYPE {

	ID = 504;
}


#=======================================
#  Field PIN_FLD_GROUP_TYPE
#=======================================

ENUM PIN_FLD_GROUP_TYPE {

	ID = 506;
}


#=======================================
#  Field PIN_FLD_FIELD
#=======================================

ARRAY PIN_FLD_FIELD {

	ID = 88;
}


#=======================================
#  Field PIN_FLD_FIELD_NUM
#=======================================

ENUM PIN_FLD_FIELD_NUM {

	ID = 89;
}


#=======================================
#  Field PIN_FLD_INHERITED_INFO
#=======================================

SUBSTRUCT PIN_FLD_INHERITED_INFO {

	ID = 66;
}


#=======================================
#  Field PIN_FLD_TEMPLATE_NAME
#=======================================

STRING PIN_FLD_TEMPLATE_NAME {

	ID = 2365;
}


#=======================================
#  Field PIN_FLD_INV_INFO
#=======================================

ARRAY PIN_FLD_INV_INFO {

	ID = 898;
}


#=======================================
#  Field PIN_FLD_BUFFER
#=======================================

BUF PIN_FLD_BUFFER {

	ID = 34;
}


#=======================================
#  Field PIN_FLD_FILENAME
#=======================================

STRING PIN_FLD_FILENAME {

	ID = 500;
}


#=======================================
#  Field PIN_FLD_LOCALE
#=======================================

STRING PIN_FLD_LOCALE {

	ID = 109;
}


#=======================================
#  Field PIN_FLD_ITEM_TAGS
#=======================================

ARRAY PIN_FLD_ITEM_TAGS {

	ID = 2004;
}


#=======================================
#  Field PIN_FLD_ITEM_TAG
#=======================================

STRING PIN_FLD_ITEM_TAG {

	ID = 2005;
}


#=======================================
#  Field PIN_FLD_ITEM_TYPES
#=======================================

ARRAY PIN_FLD_ITEM_TYPES {

	ID = 2007;
}


#=======================================
#  Field PIN_FLD_ITEM_SUB_TYPE
#=======================================

STRING PIN_FLD_ITEM_SUB_TYPE {

	ID = 2009;
}


#=======================================
#  Field PIN_FLD_ITEM_TYPE
#=======================================

STRING PIN_FLD_ITEM_TYPE {

	ID = 2008;
}


#=======================================
#  Field PIN_FLD_PRECREATE
#=======================================

INT PIN_FLD_PRECREATE {

	ID = 2006;
}


#=======================================
#  Field PIN_FLD_PERMITTED_SERVICE_TYPES
#=======================================

ARRAY PIN_FLD_PERMITTED_SERVICE_TYPES {

	ID = 8027;
}


#=======================================
#  Field PIN_FLD_STATES
#=======================================

ARRAY PIN_FLD_STATES {

	ID = 8047;
}


#=======================================
#  Field PIN_FLD_INITIAL_STATE
#=======================================

INT PIN_FLD_INITIAL_STATE {

	ID = 8054;
}


#=======================================
#  Field PIN_FLD_MODULE
#=======================================

STRING PIN_FLD_MODULE {

	ID = 8048;
}


#=======================================
#  Field PIN_FLD_SERVICE_STATE_EXPIRATION_T
#=======================================

TIMESTAMP PIN_FLD_SERVICE_STATE_EXPIRATION_T {

	ID = 8053;
}


#=======================================
#  Field PIN_FLD_STATE_NAME
#=======================================

STRING PIN_FLD_STATE_NAME {

	ID = 8046;
}


#=======================================
#  Field PIN_FLD_TRANSITIONS
#=======================================

ARRAY PIN_FLD_TRANSITIONS {

	ID = 8258;
}


#=======================================
#  Field PIN_FLD_DEFAULT_FLAG
#=======================================

INT PIN_FLD_DEFAULT_FLAG {

	ID = 1523;
}


#=======================================
#  Field PIN_FLD_NEXT_STATE
#=======================================

INT PIN_FLD_NEXT_STATE {

	ID = 8049;
}


#=======================================
#  Field PIN_FLD_POST_OPCODE
#=======================================

INT PIN_FLD_POST_OPCODE {

	ID = 8051;
}


#=======================================
#  Field PIN_FLD_PRE_OPCODE
#=======================================

INT PIN_FLD_PRE_OPCODE {

	ID = 8050;
}


#=======================================
#  Field PIN_FLD_BATCHSTAT_LINKS
#=======================================

ARRAY PIN_FLD_BATCHSTAT_LINKS {

	ID = 9024;
}


#=======================================
#  Field PIN_FLD_CONTROL_POINT
#=======================================

STRING PIN_FLD_CONTROL_POINT {

	ID = 9021;
}


#=======================================
#  Field PIN_FLD_LINK_LEVEL
#=======================================

INT PIN_FLD_LINK_LEVEL {

	ID = 9023;
}


#=======================================
#  Field PIN_FLD_OBJECT_TYPE
#=======================================

STRING PIN_FLD_OBJECT_TYPE {

	ID = 9019;
}


#=======================================
#  Field PIN_FLD_PARENT_CONTROL_POINT
#=======================================

STRING PIN_FLD_PARENT_CONTROL_POINT {

	ID = 9022;
}


#=======================================
#  Field PIN_FLD_PARENT_OBJECT_TYPE
#=======================================

STRING PIN_FLD_PARENT_OBJECT_TYPE {

	ID = 9020;
}


#=======================================
#  Field PIN_FLD_CONTROLPOINT_LINKS
#=======================================

ARRAY PIN_FLD_CONTROLPOINT_LINKS {

	ID = 9034;
}


#=======================================
#  Field PIN_FLD_USAGE
#=======================================

INT PIN_FLD_USAGE {

	ID = 9035;
}


#=======================================
#  Field PIN_FLD_LOCALES_MAP
#=======================================

ARRAY PIN_FLD_LOCALES_MAP {

	ID = 2392;
}


#=======================================
#  Field PIN_FLD_CODESETS
#=======================================

ARRAY PIN_FLD_CODESETS {

	ID = 2390;
}


#=======================================
#  Field PIN_FLD_PLATFORM
#=======================================

INT PIN_FLD_PLATFORM {

	ID = 2388;
}


#=======================================
#  Field PIN_FLD_SRC_CODESET
#=======================================

STRING PIN_FLD_SRC_CODESET {

	ID = 2386;
}


#=======================================
#  Field PIN_FLD_TARGET_CODESET
#=======================================

STRING PIN_FLD_TARGET_CODESET {

	ID = 2387;
}


#=======================================
#  Field PIN_FLD_HP_LOCALE
#=======================================

STRING PIN_FLD_HP_LOCALE {

	ID = 2383;
}


#=======================================
#  Field PIN_FLD_INFRANET_LOCALE
#=======================================

STRING PIN_FLD_INFRANET_LOCALE {

	ID = 2381;
}


#=======================================
#  Field PIN_FLD_JAVA_LOCALE
#=======================================

STRING PIN_FLD_JAVA_LOCALE {

	ID = 2385;
}


#=======================================
#  Field PIN_FLD_SOLARIS_LOCALE
#=======================================

STRING PIN_FLD_SOLARIS_LOCALE {

	ID = 2382;
}


#=======================================
#  Field PIN_FLD_WINDOWS_LOCALE
#=======================================

STRING PIN_FLD_WINDOWS_LOCALE {

	ID = 2384;
}


#=======================================
#  Field PIN_FLD_LOCALES
#=======================================

ARRAY PIN_FLD_LOCALES {

	ID = 124;
}


#=======================================
#  Field PIN_FLD_COUNTRY
#=======================================

STRING PIN_FLD_COUNTRY {

	ID = 170;
}


#=======================================
#  Field PIN_FLD_VALIDATION_SPECIFICS
#=======================================

ARRAY PIN_FLD_VALIDATION_SPECIFICS {

	ID = 897;
}


#=======================================
#  Field PIN_FLD_SERVICES
#=======================================

ARRAY PIN_FLD_SERVICES {

	ID = 122;
}


#=======================================
#  Field PIN_FLD_CHOICES
#=======================================

ARRAY PIN_FLD_CHOICES {

	ID = 85;
}


#=======================================
#  Field PIN_FLD_GL_ID
#=======================================

INT PIN_FLD_GL_ID {

	ID = 840;
}


#=======================================
#  Field PIN_FLD_CONFIG_MTA
#=======================================

ARRAY PIN_FLD_CONFIG_MTA {

	ID = 1370;
}


#=======================================
#  Field PIN_FLD_FUNCTION_MAP
#=======================================

ARRAY PIN_FLD_FUNCTION_MAP {

	ID = 1380;
}


#=======================================
#  Field PIN_FLD_FUNCTION
#=======================================

STRING PIN_FLD_FUNCTION {

	ID = 1381;
}


#=======================================
#  Field PIN_FLD_LIBRARY
#=======================================

STRING PIN_FLD_LIBRARY {

	ID = 1379;
}


#=======================================
#  Field PIN_FLD_OPCODE_MAP
#=======================================

ARRAY PIN_FLD_OPCODE_MAP {

	ID = 7451;
}


#=======================================
#  Field PIN_FLD_NETWORK_ELEMENT_INFO
#=======================================

ARRAY PIN_FLD_NETWORK_ELEMENT_INFO {

	ID = 5719;
}


#=======================================
#  Field PIN_FLD_NETWORK_ELEMENT
#=======================================

STRING PIN_FLD_NETWORK_ELEMENT {

	ID = 5701;
}


#=======================================
#  Field PIN_FLD_OPCODES
#=======================================

ARRAY PIN_FLD_OPCODES {

	ID = 886;
}


#=======================================
#  Field PIN_FLD_ORDER_STATES
#=======================================

ARRAY PIN_FLD_ORDER_STATES {

	ID = 7504;
}


#=======================================
#  Field PIN_FLD_ORDER_TYPE
#=======================================

STRING PIN_FLD_ORDER_TYPE {

	ID = 7506;
}


#=======================================
#  Field PIN_FLD_PAY_TYPES
#=======================================

ARRAY PIN_FLD_PAY_TYPES {

	ID = 7859;
}


#=======================================
#  Field PIN_FLD_PAYINFO_TYPE
#=======================================

STRING PIN_FLD_PAYINFO_TYPE {

	ID = 903;
}


#=======================================
#  Field PIN_FLD_PAYMENT_EVENT_TYPE
#=======================================

STRING PIN_FLD_PAYMENT_EVENT_TYPE {

	ID = 906;
}


#=======================================
#  Field PIN_FLD_REFUND_EVENT_TYPE
#=======================================

STRING PIN_FLD_REFUND_EVENT_TYPE {

	ID = 910;
}


#=======================================
#  Field PIN_FLD_PAYMENT_TERMS
#=======================================

ARRAY PIN_FLD_PAYMENT_TERMS {

	ID = 1330;
}


#=======================================
#  Field PIN_FLD_PAYMENTTOOL_FIELDS
#=======================================

ARRAY PIN_FLD_PAYMENTTOOL_FIELDS {

	ID = 1351;
}


#=======================================
#  Field PIN_FLD_BATCH_TYPE
#=======================================

INT PIN_FLD_BATCH_TYPE {

	ID = 1354;
}


#=======================================
#  Field PIN_FLD_COLUMN_NAME
#=======================================

STRING PIN_FLD_COLUMN_NAME {

	ID = 1352;
}


#=======================================
#  Field PIN_FLD_PURPOSE
#=======================================

INT PIN_FLD_PURPOSE {

	ID = 1353;
}


#=======================================
#  Field PIN_FLD_ARCHIVABLE_OBJ_TYPES
#=======================================

ARRAY PIN_FLD_ARCHIVABLE_OBJ_TYPES {

	ID = 1751;
}


#=======================================
#  Field PIN_FLD_ARCHIVE_AGING
#=======================================

INT PIN_FLD_ARCHIVE_AGING {

	ID = 1752;
}


#=======================================
#  Field PIN_FLD_ARCHIVE_OPERATION
#=======================================

ENUM PIN_FLD_ARCHIVE_OPERATION {

	ID = 1753;
}


#=======================================
#  Field PIN_FLD_ARCHIVE_TABLEMAP
#=======================================

ARRAY PIN_FLD_ARCHIVE_TABLEMAP {

	ID = 1754;
}


#=======================================
#  Field PIN_FLD_LOGIN
#=======================================

STRING PIN_FLD_LOGIN {

	ID = 92;
}


#=======================================
#  Field PIN_FLD_PASSWD
#=======================================

STRING PIN_FLD_PASSWD {

	ID = 93;
}


#=======================================
#  Field PIN_FLD_PORT
#=======================================

INT PIN_FLD_PORT {

	ID = 336;
}


#=======================================
#  Field PIN_FLD_SERVER_TYPE
#=======================================

STRING PIN_FLD_SERVER_TYPE {

	ID = 6419;
}


#=======================================
#  Field PIN_FLD_AUDIT_CONFIG
#=======================================

ARRAY PIN_FLD_AUDIT_CONFIG {

	ID = 8225;
}


#=======================================
#  Field PIN_FLD_AUDIT_PROCESS
#=======================================

STRING PIN_FLD_AUDIT_PROCESS {

	ID = 8226;
}


#=======================================
#  Field PIN_FLD_FIELD_NAMES
#=======================================

ARRAY PIN_FLD_FIELD_NAMES {

	ID = 8227;
}


#=======================================
#  Field PIN_FLD_THRESHOLD
#=======================================

INT PIN_FLD_THRESHOLD {

	ID = 2423;
}


#=======================================
#  Field PIN_FLD_MODE
#=======================================

ENUM PIN_FLD_MODE {

	ID = 1576;
}


#=======================================
#  Field PIN_FLD_ACCOUNTS
#=======================================

ARRAY PIN_FLD_ACCOUNTS {

	ID = 2704;
}


#=======================================
#  Field PIN_FLD_THRESHOLDS
#=======================================

ARRAY PIN_FLD_THRESHOLDS {

	ID = 9030;
}


#=======================================
#  Field PIN_FLD_RECIPIENTS
#=======================================

ARRAY PIN_FLD_RECIPIENTS {

	ID = 481;
}


#=======================================
#  Field PIN_FLD_EMAIL_ADDR
#=======================================

STRING PIN_FLD_EMAIL_ADDR {

	ID = 171;
}


#=======================================
#  Field PIN_FLD_SENDER
#=======================================

STRING PIN_FLD_SENDER {

	ID = 480;
}


#=======================================
#  Field PIN_FLD_RA_FLOWS
#=======================================

ARRAY PIN_FLD_RA_FLOWS {

	ID = 9029;
}


#=======================================
#  Field PIN_FLD_CONTROL_POINTS
#=======================================

ARRAY PIN_FLD_CONTROL_POINTS {

	ID = 9028;
}


#=======================================
#  Field PIN_FLD_DATE_RANGE_TYPE
#=======================================

ENUM PIN_FLD_DATE_RANGE_TYPE {

	ID = 2225;
}


#=======================================
#  Field PIN_FLD_FILTER_DETAILS
#=======================================

ARRAY PIN_FLD_FILTER_DETAILS {

	ID = 1577;
}


#=======================================
#  Field PIN_FLD_LENGTH
#=======================================

INT PIN_FLD_LENGTH {

	ID = 507;
}


#=======================================
#  Field PIN_FLD_NUM_UNITS
#=======================================

INT PIN_FLD_NUM_UNITS {

	ID = 9032;
}


#=======================================
#  Field PIN_FLD_START_OFFSET
#=======================================

INT PIN_FLD_START_OFFSET {

	ID = 2233;
}


#=======================================
#  Field PIN_FLD_VALUE_RANGES
#=======================================

ARRAY PIN_FLD_VALUE_RANGES {

	ID = 2244;
}


#=======================================
#  Field PIN_FLD_FILTER_LIST
#=======================================

ARRAY PIN_FLD_FILTER_LIST {

	ID = 1570;
}


#=======================================
#  Field PIN_FLD_RECHARGE_CARDS
#=======================================

ARRAY PIN_FLD_RECHARGE_CARDS {

	ID = 7618;
}


#=======================================
#  Field PIN_FLD_RECHARGE_CARD_CODE
#=======================================

STRING PIN_FLD_RECHARGE_CARD_CODE {

	ID = 7610;
}


#=======================================
#  Field PIN_FLD_RECHARGE_CARD_TYPE
#=======================================

STRING PIN_FLD_RECHARGE_CARD_TYPE {

	ID = 7609;
}


#=======================================
#  Field PIN_FLD_REMIT_FLDS
#=======================================

ARRAY PIN_FLD_REMIT_FLDS {

	ID = 1020;
}


#=======================================
#  Field PIN_FLD_REMIT_BASE_TYPE
#=======================================

STRING PIN_FLD_REMIT_BASE_TYPE {

	ID = 1024;
}


#=======================================
#  Field PIN_FLD_REMIT_CRITERIA
#=======================================

STRING PIN_FLD_REMIT_CRITERIA {

	ID = 1021;
}


#=======================================
#  Field PIN_FLD_REMIT_FLD_NO
#=======================================

INT PIN_FLD_REMIT_FLD_NO {

	ID = 1032;
}


#=======================================
#  Field PIN_FLD_REMIT_SUBSTRUCT_NO
#=======================================

INT PIN_FLD_REMIT_SUBSTRUCT_NO {

	ID = 1031;
}


#=======================================
#  Field PIN_FLD_REMIT_ACCOUNTS
#=======================================

ARRAY PIN_FLD_REMIT_ACCOUNTS {

	ID = 1027;
}


#=======================================
#  Field PIN_FLD_ACCOUNT_NO
#=======================================

STRING PIN_FLD_ACCOUNT_NO {

	ID = 106;
}


#=======================================
#  Field PIN_FLD_REMIT_OP
#=======================================

STRING PIN_FLD_REMIT_OP {

	ID = 1030;
}


#=======================================
#  Field PIN_FLD_REMIT_ACCOUNT_OBJ
#=======================================

POID PIN_FLD_REMIT_ACCOUNT_OBJ {

	ID = 1028;
}


#=======================================
#  Field PIN_FLD_REMIT_PRODUCT_OBJ
#=======================================

POID PIN_FLD_REMIT_PRODUCT_OBJ {

	ID = 1029;
}


#=======================================
#  Field PIN_FLD_REMIT_TYPE
#=======================================

STRING PIN_FLD_REMIT_TYPE {

	ID = 1008;
}


#=======================================
#  Field PIN_FLD_RUM_NAME
#=======================================

STRING PIN_FLD_RUM_NAME {

	ID = 2211;
}


#=======================================
#  Field PIN_FLD_RERATE_FIELDS
#=======================================

ARRAY PIN_FLD_RERATE_FIELDS {

	ID = 9205;
}


#=======================================
#  Field PIN_FLD_RERATE_EXTRACTION_KEY
#=======================================

STRING PIN_FLD_RERATE_EXTRACTION_KEY {

	ID = 9204;
}


#=======================================
#  Field PIN_FLD_RESERVATION_INFO
#=======================================

ARRAY PIN_FLD_RESERVATION_INFO {

	ID = 5615;
}


#=======================================
#  Field PIN_FLD_INCR_QUANTITY
#=======================================

DECIMAL PIN_FLD_INCR_QUANTITY {

	ID = 2207;
}


#=======================================
#  Field PIN_FLD_IS_PRIMARY_RUM
#=======================================

ENUM PIN_FLD_IS_PRIMARY_RUM {

	ID = 8014;
}


#=======================================
#  Field PIN_FLD_MIN_QUANTITY
#=======================================

DECIMAL PIN_FLD_MIN_QUANTITY {

	ID = 2205;
}


#=======================================
#  Field PIN_FLD_QUANTITY
#=======================================

DECIMAL PIN_FLD_QUANTITY {

	ID = 58;
}


#=======================================
#  Field PIN_FLD_RATIO
#=======================================

INT PIN_FLD_RATIO {

	ID = 8015;
}


#=======================================
#  Field PIN_FLD_REQ_MODE
#=======================================

ENUM PIN_FLD_REQ_MODE {

	ID = 8010;
}


#=======================================
#  Field PIN_FLD_REQUIRED_FIELDS
#=======================================

ARRAY PIN_FLD_REQUIRED_FIELDS {

	ID = 6089;
}


#=======================================
#  Field PIN_FLD_RUM_MAP
#=======================================

ARRAY PIN_FLD_RUM_MAP {

	ID = 2243;
}


#=======================================
#  Field PIN_FLD_CANDIDATE_RUMS
#=======================================

ARRAY PIN_FLD_CANDIDATE_RUMS {

	ID = 2241;
}


#=======================================
#  Field PIN_FLD_QUANTITY_EXPR
#=======================================

STRING PIN_FLD_QUANTITY_EXPR {

	ID = 2242;
}


#=======================================
#  Field PIN_FLD_CONFIG_TYPE_PROV_DTLS
#=======================================

STRING PIN_FLD_CONFIG_TYPE_PROV_DTLS {

	ID = 8029;
}


#=======================================
#  Field PIN_FLD_CONFIG_TYPE_SVC_ORDER_STATE
#=======================================

STRING PIN_FLD_CONFIG_TYPE_SVC_ORDER_STATE {

	ID = 8030;
}


#=======================================
#  Field PIN_FLD_PROVISIONING_MODE
#=======================================

ENUM PIN_FLD_PROVISIONING_MODE {

	ID = 8031;
}


#=======================================
#  Field PIN_FLD_LIFECYCLE_STATE
#=======================================

INT PIN_FLD_LIFECYCLE_STATE {

	ID = 8052;
}


#=======================================
#  Field PIN_FLD_STATUS_FLAGS
#=======================================

INT PIN_FLD_STATUS_FLAGS {

	ID = 146;
}


#=======================================
#  Field PIN_FLD_DISCOUNT_OBJ
#=======================================

POID PIN_FLD_DISCOUNT_OBJ {

	ID = 7780;
}


#=======================================
#  Field PIN_FLD_RESOURCE_ID
#=======================================

INT PIN_FLD_RESOURCE_ID {

	ID = 834;
}


#=======================================
#  Field PIN_FLD_RATES
#=======================================

ARRAY PIN_FLD_RATES {

	ID = 230;
}


#=======================================
#  Field PIN_FLD_RETRIEVE_EDR_FIELD
#=======================================

STRING PIN_FLD_RETRIEVE_EDR_FIELD {

	ID = 7763;
}


#=======================================
#  Field PIN_FLD_RETRIEVE_FIELD
#=======================================

STRING PIN_FLD_RETRIEVE_FIELD {

	ID = 7761;
}


#=======================================
#  Field PIN_FLD_UPDATE_EDR_FIELD
#=======================================

STRING PIN_FLD_UPDATE_EDR_FIELD {

	ID = 7764;
}


#=======================================
#  Field PIN_FLD_UPDATE_FIELD
#=======================================

STRING PIN_FLD_UPDATE_FIELD {

	ID = 7762;
}


#=======================================
#  Field PIN_FLD_SUBSCRIBER_PREFERENCES
#=======================================

ARRAY PIN_FLD_SUBSCRIBER_PREFERENCES {

	ID = 8032;
}


#=======================================
#  Field PIN_FLD_DEFAULT
#=======================================

STRING PIN_FLD_DEFAULT {

	ID = 8034;
}


#=======================================
#  Field PIN_FLD_SUBSCRIBER_PREFERENCE_ID
#=======================================

INT PIN_FLD_SUBSCRIBER_PREFERENCE_ID {

	ID = 8033;
}


#=======================================
#  Field PIN_FLD_MAX_SUPPRESSED_CYCLES
#=======================================

INT PIN_FLD_MAX_SUPPRESSED_CYCLES {

	ID = 8327;
}


#=======================================
#  Field PIN_FLD_MIN_BILL_AMOUNT
#=======================================

DECIMAL PIN_FLD_MIN_BILL_AMOUNT {

	ID = 8328;
}


#=======================================
#  Field PIN_FLD_BRAND_OBJ
#=======================================

POID PIN_FLD_BRAND_OBJ {

	ID = 1905;
}


#=======================================
#  Field PIN_FLD_VALID_FROM
#=======================================

TIMESTAMP PIN_FLD_VALID_FROM {

	ID = 6429;
}


#=======================================
#  Field PIN_FLD_VALID_TO
#=======================================

TIMESTAMP PIN_FLD_VALID_TO {

	ID = 6430;
}


#=======================================
#  Field PIN_FLD_SUSPENSE_REASONS
#=======================================

ARRAY PIN_FLD_SUSPENSE_REASONS {

	ID = 8176;
}


#=======================================
#  Field PIN_FLD_SUSPENSE_REASON
#=======================================

ENUM PIN_FLD_SUSPENSE_REASON {

	ID = 8162;
}


#=======================================
#  Field PIN_FLD_SUSPENSE_SUBREASON
#=======================================

ENUM PIN_FLD_SUSPENSE_SUBREASON {

	ID = 8163;
}


#=======================================
#  Field PIN_FLD_TAX_SUPPLIERS
#=======================================

ARRAY PIN_FLD_TAX_SUPPLIERS {

	ID = 1522;
}


#=======================================
#  Field PIN_FLD_ADDRESS
#=======================================

STRING PIN_FLD_ADDRESS {

	ID = 166;
}


#=======================================
#  Field PIN_FLD_NEXUSINFO
#=======================================

STRING PIN_FLD_NEXUSINFO {

	ID = 1503;
}


#=======================================
#  Field PIN_FLD_REGULATED_FLAG
#=======================================

ENUM PIN_FLD_REGULATED_FLAG {

	ID = 1513;
}


#=======================================
#  Field PIN_FLD_VATINFO
#=======================================

ARRAY PIN_FLD_VATINFO {

	ID = 1504;
}


#=======================================
#  Field PIN_FLD_VAT_CERT
#=======================================

STRING PIN_FLD_VAT_CERT {

	ID = 1505;
}


#=======================================
#  Field PIN_FLD_PROD_PROVISIONING_TAGS
#=======================================

ARRAY PIN_FLD_PROD_PROVISIONING_TAGS {

	ID = 273;
}


#=======================================
#  Field PIN_FLD_DATE_CHANGE_IMPACT
#=======================================

ENUM PIN_FLD_DATE_CHANGE_IMPACT {

	ID = 6405;
}


#=======================================
#  Field PIN_FLD_LABEL
#=======================================

STRING PIN_FLD_LABEL {

	ID = 601;
}


#=======================================
#  Field PIN_FLD_NEED_PROVISIONING
#=======================================

ENUM PIN_FLD_NEED_PROVISIONING {

	ID = 6413;
}


#=======================================
#  Field PIN_FLD_PROVISIONING_TAG
#=======================================

STRING PIN_FLD_PROVISIONING_TAG {

	ID = 272;
}


#=======================================
#  Field PIN_FLD_SERVICE_EXTENSIONS
#=======================================

ARRAY PIN_FLD_SERVICE_EXTENSIONS {

	ID = 8003;
}


#=======================================
#  Field PIN_FLD_TELCO_FEATURES
#=======================================

ARRAY PIN_FLD_TELCO_FEATURES {

	ID = 8001;
}


#=======================================
#  Field PIN_FLD_ACTION
#=======================================

STRING PIN_FLD_ACTION {

	ID = 83;
}


#=======================================
#  Field PIN_FLD_OBJECT
#=======================================

POID PIN_FLD_OBJECT {

	ID = 46;
}


#=======================================
#  Field PIN_FLD_PROVISIONING_INFO
#=======================================

ARRAY PIN_FLD_PROVISIONING_INFO {

	ID = 7376;
}


#=======================================
#  Field PIN_FLD_OBJ_ELEM
#=======================================

ARRAY PIN_FLD_OBJ_ELEM {

	ID = 545;
}


#=======================================
#  Field PIN_FLD_ELEMENT_ID
#=======================================

INT PIN_FLD_ELEMENT_ID {

	ID = 65;
}


#=======================================
#  Field PIN_FLD_SERVICE_ORDER_STATES
#=======================================

ARRAY PIN_FLD_SERVICE_ORDER_STATES {

	ID = 7456;
}


#=======================================
#  Field PIN_FLD_TEMPLATE_INFO
#=======================================

SUBSTRUCT PIN_FLD_TEMPLATE_INFO {

	ID = 9353;
}


#=======================================
#  Field PIN_FLD_ISCRIPT_BUF
#=======================================

BUF PIN_FLD_ISCRIPT_BUF {

	ID = 9354;
}


#=======================================
#  Field PIN_FLD_USAGE_MAP
#=======================================

ARRAY PIN_FLD_USAGE_MAP {

	ID = 2210;
}


#=======================================
#  Field PIN_FLD_INCR_UNIT
#=======================================

ENUM PIN_FLD_INCR_UNIT {

	ID = 2208;
}


#=======================================
#  Field PIN_FLD_MIN_UNIT
#=======================================

ENUM PIN_FLD_MIN_UNIT {

	ID = 2206;
}


#=======================================
#  Field PIN_FLD_RATE_PLAN_NAME
#=======================================

STRING PIN_FLD_RATE_PLAN_NAME {

	ID = 2212;
}


#=======================================
#  Field PIN_FLD_TIMEZONE_MODE
#=======================================

ENUM PIN_FLD_TIMEZONE_MODE {

	ID = 2204;
}


#=======================================
#  Field PIN_FLD_TOD_MODE
#=======================================

ENUM PIN_FLD_TOD_MODE {

	ID = 2203;
}


#=======================================
#  Field PIN_FLD_CHECKS
#=======================================

ARRAY PIN_FLD_CHECKS {

	ID = 84;
}


#=======================================
#  Field PIN_FLD_VOUCHERS_INFO
#=======================================

ARRAY PIN_FLD_VOUCHERS_INFO {

	ID = 7617;
}


#=======================================
#  Field PIN_FLD_BATCH_PART_NO
#=======================================

STRING PIN_FLD_BATCH_PART_NO {

	ID = 7611;
}


#=======================================
#  Field PIN_FLD_PACKAGE_INFO
#=======================================

ARRAY PIN_FLD_PACKAGE_INFO {

	ID = 7606;
}


#=======================================
#  Field PIN_FLD_BATCH_QUANTITY
#=======================================

DECIMAL PIN_FLD_BATCH_QUANTITY {

	ID = 7604;
}


#=======================================
#  Field PIN_FLD_PACK_PART_NO
#=======================================

STRING PIN_FLD_PACK_PART_NO {

	ID = 7612;
}


#=======================================
#  Field PIN_FLD_PACK_QUANTITY
#=======================================

DECIMAL PIN_FLD_PACK_QUANTITY {

	ID = 7605;
}


#=======================================
#  Storable Class /config
#=======================================

STORABLE CLASS /config {

	SEQ_START = "1000";
	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Generic configuration class. Subtypes are defined to hold specific configuration information for various features.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	POID PIN_FLD_ACCOUNT_OBJ {

		DESCR = "Link to account object for which this object was created.";
		ORDER = 0;
		CREATE = Required;
		MODIFY = Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	TIMESTAMP PIN_FLD_CREATED_T {

		ORDER = 0;
		CREATE = System;
		MODIFY = System;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	STRING PIN_FLD_DESCR {

		DESCR = "Description about the configuration object.";
		ORDER = 0;
		LENGTH = 255;
		CREATE = Optional;
		MODIFY = Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	STRING PIN_FLD_HOSTNAME {

		DESCR = "Hostname for which this configuration object is valid. A value of '-' indicates validity for all hosts. Not enforced for Portal defined configuration objects currently.";
		ORDER = 0;
		LENGTH = 255;
		CREATE = Required;
		MODIFY = Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	TIMESTAMP PIN_FLD_MOD_T {

		ORDER = 0;
		CREATE = System;
		MODIFY = System;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	STRING PIN_FLD_NAME {

		DESCR = "Name of this configuration object.";
		ORDER = 0;
		LENGTH = 255;
		CREATE = Required;
		MODIFY = Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	POID PIN_FLD_POID {

		ORDER = 0;
		CREATE = System;
		MODIFY = System;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	STRING PIN_FLD_PROGRAM_NAME {

		DESCR = "Program for which this configuration object is valid. A value of '-' indicates validity for all programs. Not enforced for Portal defined configuration objects currently.";
		ORDER = 0;
		LENGTH = 60;
		CREATE = Required;
		MODIFY = Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	STRING PIN_FLD_READ_ACCESS {

		ORDER = 0;
		LENGTH = 1;
		CREATE = System;
		MODIFY = System;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	STRING PIN_FLD_VALUE {

		DESCR = "User field for holding some arbitrary value.";
		ORDER = 0;
		LENGTH = 1023;
		CREATE = Optional;
		MODIFY = Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	STRING PIN_FLD_VERSION {

		DESCR = "Version of this configuration object. This is a user-modifiable field.";
		ORDER = 0;
		LENGTH = 30;
		CREATE = Optional;
		MODIFY = Writeable;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

	STRING PIN_FLD_WRITE_ACCESS {

		ORDER = 0;
		LENGTH = 1;
		CREATE = System;
		MODIFY = System;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;
	}

}


#=======================================
#  Storable Class /config/aaa
#=======================================

STORABLE CLASS /config/aaa {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = " Extensions of this class store parameters that configure  the rating and session handling mode for service-specific AAA, such as GSM AAA";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_DROPPED_CALL_TERMINATE_CAUSE_ARRAY {

		DESCR = "Stores Array of Terminate causes indicating the Drop Calls ";
		ORDER = 1;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_DROPPED_CALL_TERMINATE_CAUSE {

			DESCR = "Indicates the Terminate cause for the Drop Call.The values vary and hence can be configured in /config/aaa.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

	ARRAY PIN_FLD_SCALED_DELAY_INFO {

		DESCR = "Stores information about max value for scaled delay";
		ORDER = 2;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_MAX_DELAY_TIME {

			DESCR = "Stores the maximum value permitted for a SCALED_DELAY";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

	SUBSTRUCT PIN_FLD_TELCO_INFO {

		DESCR = "Structure of telco aaa configurable parameters";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_DELETED_FLAG {

			DESCR = "Flag to delete the transient objects. Values are: (0) Dont delete, (1) Reservation only, (2) Active session only, (3) Both Active session and Reservation.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_DUPLICATE_CHECK_TYPE {

			DESCR = "Flag to configure the duplicate check type.  Values are: (1) Duplicate check done on ASO only, (2) Duplicate check done on Event.";
			ORDER = 2;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		TIMESTAMP PIN_FLD_EXPIRATION_T {

			DESCR = "Expiration time interval for the transient objects (ASO), to live in Timos memory after deletion. Values are: (0) Transient Object pool is disabled, or Any other valid Timestamp for the expiration time interval in seconds.";
			ORDER = 3;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_SUBSESSION_MODE {

			DESCR = "Controls sub-session creation and close.  Values are: (1) Aggregate mode, (2) Rate immediately mode, (3) Deferred Rate mode.";
			ORDER = 1;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/aaa/broadband
#=======================================

STORABLE CLASS /config/aaa/broadband {

	READ_ACCESS = "Self";
	WRITE_ACCESS = "Self";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/aaa/gsm
#=======================================

STORABLE CLASS /config/aaa/gsm {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "A singleton configuration object of this class is used to have the GSM specific AAA configuration.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/aaa/gsm/data
#=======================================

STORABLE CLASS /config/aaa/gsm/data {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "A singleton configuration object of this class is used to have the GSM DATA specific AAA configuration.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/aaa/gsm/fax
#=======================================

STORABLE CLASS /config/aaa/gsm/fax {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "A singleton configuration object of this class is used to have the GSM FAX specific AAA configuration.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/aaa/gsm/sms
#=======================================

STORABLE CLASS /config/aaa/gsm/sms {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "A singleton configuration object of this class is used to have the GSM SMS specific AAA configuration.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/aaa/gsm/telephony
#=======================================

STORABLE CLASS /config/aaa/gsm/telephony {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "A singleton configuration object of this class is used to have the GSM TELEPHONY specific AAA configuration.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/account_era
#=======================================

STORABLE CLASS /config/account_era {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Config object describing allowed account extended rating attributes, like: Birthday, SLA...";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EXT_RA {

		DESCR = "Array containing the list of allowed account extended rating attributes";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_LOCALE_DESC_ID {

			DESCR = "String ID for description of the extended rating attribute feature. Key to local description. ";
			ORDER = 2;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_NAME {

			DESCR = "Name of the extended rating attribute feature ie Special_day, Corporate Agreement... Integrate DB key ";
			ORDER = 0;
			LENGTH = 64;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_STRING_ID {

			DESCR = "String ID for name of the extended rating attribute feature ie Special_day, Corporate Agreement... Key to local display name. ";
			ORDER = 1;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/ach
#=======================================

STORABLE CLASS /config/ach {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Config object that holds an array of clearing houses.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_ACH_INFO {

		DESCR = "Array of supported Clearing Houses.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_CHANNEL_ID {

			DESCR = "Identifies the channel from which payment is received.Value must match with payment channel id configured in /strings object so that channel id can be translated to a specific channel name";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_MERCHANT {

			DESCR = "Identifies merchant to receive payments from account. Value must match configured choices in payment subsystem so merchant can be translated to a specific recipient for deposits. Typically a merchant name is associated with one currency.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_NAME {

			DESCR = "Name of the Clearing House.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		POID PIN_FLD_POID_VAL {

			DESCR = "This is a routing poid. The DB number will route the call to the correct clearing house dm interface.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/adjustment
#=======================================

STORABLE CLASS /config/adjustment {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "An abstract class to hold adjustment configurations.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/adjustment/event
#=======================================

STORABLE CLASS /config/adjustment/event {

	LABEL = "configuration for event adjustment";
	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class lists the event types that can be adjusted using PCM_OP_AR_EVENT_ADJUSTMENT opcode. This object is pre-configured to allow adjustments on purchase, cycle_forward, cycle_arrear, debit, usage and cancel events via the init_objects.source file. You can use the PCM_OP_WRITE_FLDS opcode to add additional event types to this configuration object. You have to restart your CM to pick up the changes.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENTS {

		DESCR = "An array of event types that can be adjusted. The array element has no significance.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_TYPE_STR {

			DESCR = "Event type string. For example, '/event/billing/product/fee/cycle/cycle_forward_monthly'.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/ar_taxes
#=======================================

STORABLE CLASS /config/ar_taxes {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class lists the A/R event types along with the associated tax information. This information is not applicable to event level A/R operations.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PARAMS {

		DESCR = "Array to hold blocks of A/R tax information. The array element has no significance.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_EVENT_TYPE {

			DESCR = "Type of the A/R event object.";
			ORDER = 0;
			LENGTH = 60;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_NAME {

			DESCR = "The tax supplier name.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_TAX_CODE {

			DESCR = "String to hold tax code of the event.";
			ORDER = 0;
			LENGTH = 60;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/auth_reauth_info
#=======================================

STORABLE CLASS /config/auth_reauth_info {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "The object defined by this class determines the resource upper and lower thresholds, reservation amount and delay period based on each resource for prepaid services.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_AUTH_REAUTH_INFO {

		DESCR = "Array of resource thresholds, amounts and delay for service types.  Array element id is not significant.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_ALLOW_QUICK_REJECT {

			DESCR = "Setting this field to 0 will disable the quick rejection and the rating engine will be called for authorization.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_MAX_DELAY_TIME {

			DESCR = "The maximum time delay can be added to valid_to.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_REAUTH_FLAG {

			DESCR = "Flag for enabling feature for reauth.1 for re-authorization request,0 for no re-authorization.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_RESOURCE_INFO {

			DESCR = "Array of resource thresholds and reservation amount for the service type.  Array element id is the resource ID and is significant.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			DECIMAL PIN_FLD_AMOUNT {

				DESCR = "Amount to be reserved for GREEN auth.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			DECIMAL PIN_FLD_THRESHOLD_LOWER {

				DESCR = "Lower threshold amount.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			DECIMAL PIN_FLD_THRESHOLD_UPPER {

				DESCR = "Upper threshold amount.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		STRING PIN_FLD_SERVICE_TYPE {

			DESCR = "Service Type.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/beid
#=======================================

STORABLE CLASS /config/beid {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object this class contains information on all Infranet resources. Resources can be either currency or non-currency resources. User-defined resources must have numeric resource id value greater than 1,000,000. Numeric ids for the currency resources are defined as per the ISO 4217 standard.  A sample file pin_beid that can be used with load_pin_beid is shipped with Portal system. These resources must not be changed after loading them into the database.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_BALANCES {

		DESCR = "Configuration information about one resource. The numeric value of the resource is used as the array element id. For e.g., PIN_FLD_BALANCES[840] is used to hold US Dollar information. See pin_currency.h for a list of the ISO currencies. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_APPLY_MODE {

			DESCR = "Operation to be applied on a particular resource. Possible values are PIN_APPLY_MODE_UNDEFINED(0), PIN_APPLY_MODE_FOLD(1).";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_BEID_STR_CODE {

			DESCR = "A string code (typically an abbreviation) for the resource. For currency resources, the three letter ISO code is used. For example, for US Dollars, the string code is USD.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_CONSUMPTION_RULE {

			DESCR = "Consumption rule to be applied on the resource. 0 means undefined. And other possible values are EST(1), LST(2), EET(3), LET(4), ESTLET(5), ESTEET(6), LSTEET(7), LSTLET(8), EETEST(9), EETLST(10), LETEST(11), LETLST(12).";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_NAME {

			DESCR = "Printable name of the resource. ";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_RULES {

			DESCR = "Configuration information about a rounding rule, which consists of a rounding mode and a rounding precision.  You can specify a rounding rule for a (resource, event type, stage) combination.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_EVENT_TYPE {

				DESCR = "This field specifies the event type the rounding rule applies.  A value of * means that it is applicable to all events. Default is *.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			ENUM PIN_FLD_PROCESSING_STAGE {

				DESCR = "This field specifies the activity or processing stage where the rounding rule should be applied. Possible values are: 0 (Rating), 1 (Discount),  2 (Taxation), 3 (AR operation). Default is 3.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_ROUNDING {

				DESCR = "This field determines number of decimal places to round the resource. A positive and Negative values specifies precision. For example, +2 yields 0.11. Also note that rounding, value of .956 becomes .96 and a value of .954 becomes .95.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			ENUM PIN_FLD_ROUNDING_MODE {

				DESCR = "This field specifies the rounding method. Possible values are: 0 (Nearest), 1 (Up), 2 (Down), 3 (Even). Default is 0.";
				ORDER = 0;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			DECIMAL PIN_FLD_TOLERANCE_AMOUNT_MAX {

				DESCR = "Tolerance is the allowable error on rounding when converting to primary currency that is acceptable for closing out open items. Tolerance can be specified as both percentage and absolute values. This field sets upper bound on tolerance. Default is 0.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			DECIMAL PIN_FLD_TOLERANCE_AMOUNT_MIN {

				DESCR = "This field sets the lower bound on tolerance error. Used only when tolerance percent is non-zero. The maximum of this value and the percent of the original amount is used to set the lower bound on the tolerance. Default is 0.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			DECIMAL PIN_FLD_TOLERANCE_PERCENT {

				DESCR = "Acceptable tolerance in percent (for ex, 0.5%) when converting from secondary to primary currency when applying payments to close items. When 0, item is closed if difference between the due and converted amount is less than tolerance max. Default is 0.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		ENUM PIN_FLD_STATUS {

			DESCR = "Possible values are Not Set (0), Active (1), Inactive (2). Only active resources show up in the Pricing Tool.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_SYMBOL {

			DESCR = "Symbol used to adorn resource values. For example, ' is used for US Dollars. Typically this is a UTF-8 encoded string for currency resources.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_VALIDITY_IN_DAYS {

			DESCR = "This field has been added for Pipeline Selective Sub Balance Loading feature. This field tells.Pipeline to load Sub Balances corresponding to the resource that were valid for N number of days where N is the value of the field";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/billing_segment
#=======================================

STORABLE CLASS /config/billing_segment {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "This is the configuration object where we define the Billing segments in the system which contains the info on the billing DOMs allowable for a Billing segment and the number of accounts and services allowed for each billing segment defined.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_BILLING_SEGMENTS {

		DESCR = "Stores all the billing segments defined in a Portal system. Essentially this array will contain ,starting from the name of the Billing segment to all the configuration information required to establish a Billing segment into the BRM system.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			DESCR = "Description of a Billing Segment.";
			ORDER = 0;
			LENGTH = 1023;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

	ARRAY PIN_FLD_MAP {

		DESCR = "Stores pairs of billing segment IDs and accounting days of month (DOMs).";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_ACTG_CYCLE_DOM {

			DESCR = "An accounting day of month (DOM).";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_BILLING_SEGMENT {

			DESCR = "A billing segment ID.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_MAX_ACCOUNTS {

			DESCR = "Maximum number of accounts in this billing segment that can be assigned to this DOM.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_MAX_SERVICES {

			DESCR = "Maximum number of services in this billing segment that can use this DOM.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_NUM_ACCOUNTS {

			DESCR = "Number of accounts in this billing segment that are currently assigned to this DOM.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_NUM_SERVICES {

			DESCR = "Number of services in this billing segment that are using this DOM.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_STATUS {

			DESCR = "The status of the DOM in this billing segment(open, restricted, or closed)";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		TIMESTAMP PIN_FLD_TOTAL_PROCESS_T {

			DESCR = "Total amount of time that it took to process the bills associated with this billing segment during the DOMs last billing run.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/business_params
#=======================================

STORABLE CLASS /config/business_params {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "An configuration object used to contain Business logic configuration parameters. The parameters are scalar values (integer, string, decimal, etc.) and are referenced by name.  The PIN_FLD_NAME field contained in the base class is used to specify the name of the parameter group (billing, rating, vse_ipt, etc.) for the parameters. There can be multiple instances of this object and the PIN_FLD_NAME field is used to identify an instance.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PARAMS {

		DESCR = "Configuration information for an individual paramteter.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			DESCR = "A decription that indicates what the parameter is to be used for and any other pertinent details.";
			ORDER = 0;
			LENGTH = 1024;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_PARAM_NAME {

			DESCR = "The name of the parameter. The name for each parameter must be unique.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_PARAM_TYPE {

			DESCR = "The type of data for the parameter (integer, string, decimal, etc.)";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_PARAM_VALUE {

			DESCR = "The data for the parameter represented as a string.";
			ORDER = 0;
			LENGTH = 1024;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/business_profile
#=======================================

STORABLE CLASS /config/business_profile {

	READ_ACCESS = "Brand";
	WRITE_ACCESS = "Self";
	DESCR = "This new configuration object is used to store a complete description of all the iscript rules/templates in a specific business profile";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PAIR {

		DESCR = "Key value pair array used to store instance data for business profiles";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_PAIR_KEY {

			DESCR = "Key used for value lookup.";
			ORDER = 0;
			LENGTH = 60;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_PAIR_VALUE {

			DESCR = "Value data stored in a string format.";
			ORDER = 0;
			LENGTH = 1023;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

	ARRAY PIN_FLD_TEMPLATE_ARRAY {

		DESCR = "Array containing pointers to each template required to validate the profile.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		POID PIN_FLD_TEMPLATE_OBJ {

			DESCR = "Template object (of type /config/template/billinfo or /config/template/service /config/template/balance_group).";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/business_type
#=======================================

STORABLE CLASS /config/business_type {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "This config object points to the business types available in the system. Accounts created in the system will belong to one of the business types defined in the config object here. Application load_pin_config_business_type loads the values into this config object.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_BUSINESS_TYPE_ARRAY {

		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			DESCR = "Description of the domain.";
			ORDER = 0;
			LENGTH = 1023;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/calendar
#=======================================

STORABLE CLASS /config/calendar {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Class to store all non-billing days for multiple calendars and multiple years.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CALENDAR_DATE {

		DESCR = "Array of dates";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_CALENDAR_DOM {

			DESCR = "Day of month of the calendar date.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_CALENDAR_MOY {

			DESCR = "Month of year of the calendar date.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_CALENDAR_YEAR {

			DESCR = "Year of the calendar date. If the year is 0, the date is recurring non-billing date for all years. The year 2000 is the integer value 2000 and not 0.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/collections
#=======================================

STORABLE CLASS /config/collections {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Abstract class which hosts a number of config classes to be used by the collections applications ";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/collections/action
#=======================================

STORABLE CLASS /config/collections/action {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Collections action object.  Contains information for  each individual action. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_CONFIG_ACTION_INFO {

		DESCR = "Contains the action information.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_ACTION_DESCR {

			DESCR = "Action description.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_ACTION_NAME {

			DESCR = "Action name to be displayed on GUI tools";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_ACTION_TYPE {

			DESCR = "The action type string. ";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_OPCODE {

			DESCR = "Opcode (ID) to be called for this action.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_TARGET_ACTION {

			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		POID PIN_FLD_TEMPLATE_OBJ {

			DESCR = "Link to the template object. ";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/collections/action/custom
#=======================================

STORABLE CLASS /config/collections/action/custom {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Define brand level actions (policy or manual actions).";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/collections/action/custom/finance_charge
#=======================================

STORABLE CLASS /config/collections/action/custom/finance_charge {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Define finance charge action.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_FINANCE_CHARGE_INFO {

		DESCR = "Contains additional fields for finance charges.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		DECIMAL PIN_FLD_PERCENT {

			DESCR = "Rate for the finance charge";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/collections/action/custom/late_fee
#=======================================

STORABLE CLASS /config/collections/action/custom/late_fee {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Define late fees action.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_LATE_FEE_INFO {

		DESCR = "Contains additional fields for late fees.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		DECIMAL PIN_FLD_AMOUNT {

			DESCR = "Fixed amount to charge";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_CURRENCY {

			DESCR = "Numeric value of a currency resource. A value of 0 implies that the default currency will be used to calculate the late fee. ";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_OPTIONS {

			DESCR = "Determine how the fixed amount and the percentage work together to get the late fee. Possible values are: PIN_OPTION_EITHER (0), PIN_OPTION_MIN (1), PIN_OPTION_MAX (2) and PIN_OPTION_BOTH (3).";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		DECIMAL PIN_FLD_PERCENT {

			DESCR = "Percentage for overdue amount to charge";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/collections/aging_buckets
#=======================================

STORABLE CLASS /config/collections/aging_buckets {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Define the aging buckets for this brand. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_BUCKETS {

		DESCR = "Array of bucket ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_DAYS {

			DESCR = "Number of over-due days for the bucket. ";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/collections/profile
#=======================================

STORABLE CLASS /config/collections/profile {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Collections profile object.  Contains information to define the collections profiles. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_PROFILE_INFO {

		DESCR = "Substructure to hold profile specific info. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_CURRENCY {

			DESCR = "Numeric value of a currency resource. A value of 0 implies that no currency is tied with the profile. ";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_PROFILE_DESCR {

			DESCR = "Collections profile description.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_PROFILE_NAME {

			DESCR = "Collections profile name to be displayed on GUI tools";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/collections/profile/default
#=======================================

STORABLE CLASS /config/collections/profile/default {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Contains defininition for default collection profiles that can be globally seen. ";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/collections/scenario
#=======================================

STORABLE CLASS /config/collections/scenario {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Collections scenario object.  Contains information for  each scenario. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_ACTIONS {

		DESCR = "List all actions to be conducted in this scenario. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_ACTION_MODE {

			DESCR = "This value indicates whether the respective action must be executed, in case, if, billinfo enters the collections after the action execution date. PIN_ACTION_MUST_EXECUTE (0) This action will be executed in any case. PIN_ACTION_OPTIONAL_EXECUTE (1) This actions will be executed only if execution date is not passed. ";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		POID PIN_FLD_CONFIG_ACTION_OBJ {

			DESCR = "The config action poid linked to a /config/collections/action object. ";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_DUE_DAY {

			DESCR = "The due day for the action to be completed.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

	ARRAY PIN_FLD_PROFILE_DATA_ARRAY {

		DESCR = "This array is used to hold the additional configurable parameters (say, credit score, customer tenure.) that are used to evaluate assignment or replacement scenario. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_STRING_ID {

			DESCR = "This field is link to the elem_id of the corresponding /config/collections/scenario_params element";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_VALUE {

			DESCR = "This field is value which is a combination of field, operator and value. EX: (pay_type = 10003 OR pay_type = 10005)";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

	SUBSTRUCT PIN_FLD_SCENARIO_INFO {

		DESCR = "Substructure to hold scenario specific info. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		POID PIN_FLD_CONFIG_PROFILE_OBJ {

			DESCR = "Profile poid linked to the collections profile object. ";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		DECIMAL PIN_FLD_ENTRY_AMOUNT {

			DESCR = "The minimum over-due amount for entering the scenario. ";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_ENTRY_DAYS {

			DESCR = "The minimum over-due days for entering the scenario. ";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		DECIMAL PIN_FLD_EXIT_AMOUNT {

			DESCR = "The maximum over-due amount for exiting the scenario. ";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_SCENARIO_DESCR {

			DESCR = "Scenario description.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_SCENARIO_NAME {

			DESCR = "Scenario name to be displayed on GUI tools";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_SEVERITY {

			DESCR = "This field describes the severity of the scenario. Lower the number, higher the severity. ";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/collections/scenario_params
#=======================================

STORABLE CLASS /config/collections/scenario_params {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "This object is used to hold the additional attribute information for scenario assignment/replacement";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PARAMS {

		DESCR = "This array is used to hold the configuration data for the additional parameters that are used to evaluate assignment/replacement of collections scenario. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_CLASS_NAME {

			DESCR = "The class object to be referenced. For example: /account. ";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_FIELD_NAME {

			DESCR = "The field name in the class. For example: account_type. Make sure the name is same as in the object. ";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_PARAM_NAME {

			DESCR = "The name of the parameter.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_STRING_ID {

			DESCR = "String ID of the parameter name. Used for localization.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_STR_VERSION {

			DESCR = "The version of the localized string within domain.Used for localization.";
			ORDER = 3;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_TYPE {

			DESCR = "The type of the parameter: STR: 1, INT: 2, ENUM: 3, DECIMAL: 4, TIMESTAMP: 5. ";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_VALUES {

			DESCR = "The array which will hold the permitted set of values for the particular parameter. ";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_NAME {

				DESCR = "The name";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_STRING_ID {

				DESCR = "String ID of the parameter name. Used for localization.";
				ORDER = 2;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_STR_VERSION {

				DESCR = "The version of the localized string within domain.Used for localization.";
				ORDER = 3;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_VALUE {

				DESCR = "The value";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

}


#=======================================
#  Storable Class /config/country_currency_map
#=======================================

STORABLE CLASS /config/country_currency_map {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object this class contains information on permitted country/currency combinations.This is only used by the Bertelsmann Direct Debit optional install in the current version of Infranet. A sample file pin_country_currency_map that can be used with load_pin_country_currency_map is shipped with the Bertelsmann optional install.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_COUNTRIES {

		DESCR = "Array containing all of the countries that are valid for this resource. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_CANON_COUNTRY {

			DESCR = "A string code for the country. The ISO code representing the country should be used.";
			ORDER = 0;
			LENGTH = 3;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_CURRENCIES {

			DESCR = "Configuration information about each currency that is valid for this country. ";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_CURRENCY {

				DESCR = "The numeric value of the currency that is permitted. E.g. 840 is US Dollar. See pin_currency.h for the list of the ISO currencies. ";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

}


#=======================================
#  Storable Class /config/credit
#=======================================

STORABLE CLASS /config/credit {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "This object is depricated. This will be removed in future release. An abstract class to define the credit configuration.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/credit/termcause
#=======================================

STORABLE CLASS /config/credit/termcause {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "This object is depricated. This will be removed in future release. A singleton configuration object this class contains information on supported call termination cause and the type of credit they specify. Although you can edit the sample pin_termcause file to add extra call termination cause, It is not recommended to change the call termination causes once they are loaded into the database.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_TERMINATE_CAUSES {

		DESCR = "Configuration information about one call terminate cause. It specifies what kind of credit will be applied to a call that is terminated abnormally.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		DECIMAL PIN_FLD_CREDIT_AMOUNT {

			DESCR = "Number of seconds the dropped call will get as credit for if this terminate cause is present.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_STATUS {

			DESCR = "Possible values are Not Set (0), Active (1), Inactive (2). Only active termination cause will be used in rating.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_TERMINATE_CAUSE {

			DESCR = "Session termination code supported in IPT.Possible values are: NORMAL (0), ABNORMAL(1), NOCONNECTION(2).  See pin_credit_termcause for details.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_TERMINATE_CAUSE_STR {

			DESCR = "A string description for the terminate cause. ";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/credit_profile
#=======================================

STORABLE CLASS /config/credit_profile {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Global";
	DESCR = "The credit_profile is the collection of all existing credit limits, credit floors, and credit thresholds combinations.  Credit profiles are stored in this config object and referenced from each balance group in order to save memory space for balances.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PROFILES {

		DESCR = "The credit profiles array. Holds all credit limits, credit floors, and credit thresholds for all resources in the whole system.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		DECIMAL PIN_FLD_CREDIT_FLOOR {

			DESCR = "Baseline for calculating percentage for threshold triggers. Credit limit minus credit floor is 100% of measured range. Credit floor does NOT enforce any limits on current balance.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		DECIMAL PIN_FLD_CREDIT_LIMIT {

			DESCR = "Limit for this resource. Current balance cannot exceed this limit unless affected by a 'limit override' rate or manually adjusted by a CSR. During normal rating, resource will only be consumed until credit limit is reached.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_CREDIT_THRESHOLDS {

			DESCR = "Bit flags for triggering when resource balance crosses a boundary when increasing or decreasing in value. Bits 0 (LSB) thru 20 represent 5% increments of the range from credit_floor to credit_limit. A notification event /event/notification/threshold is generatedwhen the threshold is crossed by an increasing balance. An /event/notification/threshold_below notification event is generated when the threshold is crossed by a decreasing balance.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_CREDIT_THRESHOLDS_FIXED {

			DESCR = "List of separated threshold amounts (in ascending order) for triggering when the resource balance crosses a boundary when increasing or decreasing in value. The delimiter is defined by the first character in the string.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/currency
#=======================================

STORABLE CLASS /config/currency {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Abstract class for currency related configuration.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/currency/conversionrates
#=======================================

STORABLE CLASS /config/currency/conversionrates {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class lists the currencies for which conversion rates are available. These rates have validity time ranges. If not listed in this object, then a currency fold is needed for conversion. This object is used by the PCM_OP_BILL_CURRENCY_CONVERT_AMOUNTS and PCM_OP_BILL_CURRENCY_QUERY_CONVERSION_RATES opcodes. Currently this object is used only for Euro and EMU currencies and is loaded with pre-configured Euro conversions from the init_objects.source file.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CUR_RATES_TIMEFRAMES {

		DESCR = "Array of validity periods. Each array will have a set of conversion rates. Array element id is not significant.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_CUR_CONV_RATES {

			DESCR = "Array of conversion rates. Array element id is not significant.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_CURRENCY_DST {

				DESCR = "Destination currency code.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			ENUM PIN_FLD_CURRENCY_OPERATOR {

				DESCR = "Operator to be used when converting from source to destination currency. This can be either multiply(0) or divide (1). Note that for Euro conversion inverse exchange rates cannot be used.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			DECIMAL PIN_FLD_CURRENCY_RATE {

				DESCR = "Rate of exchange from source currency to destination currency.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_CURRENCY_SRC {

				DESCR = "Source currency code.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_DESCR {

				DESCR = "Brief description of the conversion rate.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		TIMESTAMP PIN_FLD_END_T {

			DESCR = "End time of the valid time range for a set of conversion rate.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		TIMESTAMP PIN_FLD_START_T {

			DESCR = "Start time of the valid time range for a set of conversion rates.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/currency/emu
#=======================================

STORABLE CLASS /config/currency/emu {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "This singleton configuration object holds the list of EMU currencies.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CURRENCY_EMU_MEMBERS {

		DESCR = "Array of EMU currencies. Array element id is not significant.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_CURRENCY {

			DESCR = "EMU currency code.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/currency/supportedcombinations
#=======================================

STORABLE CLASS /config/currency/supportedcombinations {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class holds the two dimensional array of supported pairs of Primary and Secondary account currencies for the system.  This is configurable by the user to limit the allowable Primary currencies, and for each primary currency available, limit the set of secondary currencies.  This object is used by the PCM_OP_CUST_BILLINFO opcode and related policies.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CUR_SUPPORTED_COMB {

		DESCR = "Array of supported combinations. One array element for each primary currency. Array element id is not significant.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_CURRENCY {

			DESCR = "Primary currency code.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_CUR_SECONDARY_REQ {

			DESCR = "Specifies if a secondary currency is mandatory (1) or optional (0).";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_CUR_SUPPORTED_SEC_CUR {

			DESCR = "Array of acceptable secondary currencies. Array element id is not significant.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_CURRENCY_SECONDARY {

				DESCR = "Secondary currency code.";
				ORDER = 0;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

}


#=======================================
#  Storable Class /config/customer_segment
#=======================================

STORABLE CLASS /config/customer_segment {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Class to define Customer Segments. A customer segment is a user-defined customer description such as early bill payer, reliable bill payer or delinquent bill payer that can be used to group accounts according to customer billing and payment practices. The customer segments can be used to charge payment fees, provide payment incentives and suppress bills.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CUSTOMER_SEGMENTS {

		DESCR = "The array to define Customer segments. The element-id is significant and will correspond to a customer segment value in the system. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			DESCR = "Description of Customer segment.";
			ORDER = 0;
			LENGTH = 1023;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/dealers
#=======================================

STORABLE CLASS /config/dealers {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of thisclass is used to set up the list of dealers. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_DEALERS {

		DESCR = "Array of dealers. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DEALER_CODE {

			DESCR = "The code of the dealer.";
			ORDER = 1;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_DEALER_NAME {

			DESCR = "Name of the dealer.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/device_permit_map
#=======================================

STORABLE CLASS /config/device_permit_map {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Config object that stores the mapping relationship between device types and service types. They will be used for validation when associate devices with services. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_DEVICES {

		DESCR = "Array of device types. Each element in the array contains mapping relationships between one device type to multiple service types.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DEVICE_TYPE {

			DESCR = "The type of device.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_PERMITTEDS {

			DESCR = "Array of permitted service types the device type can be mapped to.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_PERMITTED {

				DESCR = "The type of permitted service. ";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

}


#=======================================
#  Storable Class /config/device_state
#=======================================

STORABLE CLASS /config/device_state {

	READ_ACCESS = "Brand";
	WRITE_ACCESS = "Self";
	DESCR = "Config object that stores the device state transitions.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_DEVICE_STATES {

		DESCR = "Array of device states. Each element describe the one state and all the states can be transited to.Opcode can be defined with each transition. That opcode will be called as a policy during the transition. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_FLAGS {

			DESCR = "State policy opcode flag. 0 recommended.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_NEXT_STATES {

			DESCR = "Array of next states can be transited from this state, including the opcode definition.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_FLAGS {

				DESCR = "Transition policy opcode flag. 0 recommended.";
				ORDER = 0;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_OPCODE {

				DESCR = "Transition policy opcode number. This opcode is called before the state transition is done. ";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_STATE_ID {

				DESCR = "The id of the end state of the transition. ";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		INT PIN_FLD_OPCODE {

			DESCR = "State policy opcode number. This policy will be executed after the transition is done.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_STATE_ID {

			DESCR = "The id of the state.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_STATE_TYPE {

			DESCR = "The type of this state. All types are defined in pin_device.h file. Value can be RAW(0), INIT(1), NORMAL(2), END(3). ";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_STRING_ID {

			DESCR = "The string ID within the String Version. It identifies the label of device state. ";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_STR_VERSION {

			DESCR = "The version of the localized string.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

	SUBSTRUCT PIN_FLD_TYPE_INFO {

		DESCR = "A substruct to hold the device type.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DEVICE_TYPE {

			DESCR = "A string to store the device type, like /device/sim.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/device_state/ip
#=======================================

STORABLE CLASS /config/device_state/ip {

	READ_ACCESS = "Self";
	WRITE_ACCESS = "Self";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/device_state/ip/framed
#=======================================

STORABLE CLASS /config/device_state/ip/framed {

	READ_ACCESS = "Self";
	WRITE_ACCESS = "Self";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/device_state/ip/static
#=======================================

STORABLE CLASS /config/device_state/ip/static {

	READ_ACCESS = "Self";
	WRITE_ACCESS = "Self";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/device_state/mc
#=======================================

STORABLE CLASS /config/device_state/mc {

	READ_ACCESS = "Self";
	WRITE_ACCESS = "Self";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/device_state/modem
#=======================================

STORABLE CLASS /config/device_state/modem {

	READ_ACCESS = "Self";
	WRITE_ACCESS = "Self";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/device_state/nat
#=======================================

STORABLE CLASS /config/device_state/nat {

	READ_ACCESS = "Self";
	WRITE_ACCESS = "Self";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/device_state/router
#=======================================

STORABLE CLASS /config/device_state/router {

	READ_ACCESS = "Self";
	WRITE_ACCESS = "Self";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/device_state/router/cable
#=======================================

STORABLE CLASS /config/device_state/router/cable {

	READ_ACCESS = "Self";
	WRITE_ACCESS = "Self";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/device_state/router/wifi
#=======================================

STORABLE CLASS /config/device_state/router/wifi {

	READ_ACCESS = "Self";
	WRITE_ACCESS = "Self";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/device_state/stb
#=======================================

STORABLE CLASS /config/device_state/stb {

	READ_ACCESS = "Self";
	WRITE_ACCESS = "Self";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/device_state/vc
#=======================================

STORABLE CLASS /config/device_state/vc {

	READ_ACCESS = "Self";
	WRITE_ACCESS = "Self";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/device_state/voucher
#=======================================

STORABLE CLASS /config/device_state/voucher {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "AncestralLineage";
	DESCR = "Storable class to store device state of voucher";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/distribution
#=======================================

STORABLE CLASS /config/distribution {

	LABEL = "Object for storing account distribution criteria ";
	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "An object of this class is used to specify the criteria for selecting the database that a newly created account should go in. Objects in this class are created at install time, and updated by a periodically running application ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_DISTRIBUTION {

		DESCR = "Array of Account distribution criteria ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_CRITERION {

			DESCR = "Optional criterion that customers can use to change distribution policies ";
			ORDER = 0;
			LENGTH = 30;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_CURR_ACCOUNT_SIZE {

			DESCR = "Current Account Size ";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_DB_NO {

			DESCR = "A number identifying the database for account creation ";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_DB_PRIORITY {

			DESCR = "Priority of the database - The customer creation logic uses this to determine the order in which databases are chosen for account creation ";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_DB_STATUS {

			DESCR = "Current Database Status - Open/Closed";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_DESCR {

			DESCR = "Brief description";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_MAX_ACCOUNT_SIZE {

			DESCR = "Maximum Account Size for this DB";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/event_map
#=======================================

STORABLE CLASS /config/event_map {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to specify the mapping relationship between purchase leveland event types.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENT_MAP {

		DESCR = "Each array element specifies the mapping relationshipbetween one purchase level and multiple event types.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_EVENTS {

			DESCR = "Array of event types mapped to thepurchase level.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_COUNT {

				DESCR = "Frequency/count of accounting cyclesof cycle events";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_EVENT_DESCR {

				DESCR = "The description of the typeof the event.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_EVENT_TYPE {

				DESCR = "The type of the event.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_INDICATOR {

				DESCR = "Time reference point indicator whether to use the start_t or end_t to  accumulate the sub-balances for this event type; 0 means start_t, which is default, 1 means end_t";
				ORDER = 0;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			ENUM PIN_FLD_UNIT {

				DESCR = "Unit of Measure for Cycle forward events. Days/Weeks/Months/Years.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		STRING PIN_FLD_PERMITTED {

			DESCR = "The purchase level that we specifythe type of events.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/event_order_criteria
#=======================================

STORABLE CLASS /config/event_order_criteria {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = " Configuration object that stores the criteria for  selecting the events for out-of-order detection. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CRITERIA {

		DESCR = "Array to hold the criteria for detecting out-of-order events.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_CRITERIA_NAME {

			DESCR = "Name of the out-of-order criteria";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_CRITERIA_TYPES {

			DESCR = "array of criteria ";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_TYPE_STR {

				DESCR = "service type, event type or product poidstring or discount poid string";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

}


#=======================================
#  Storable Class /config/event_record_map
#=======================================

STORABLE CLASS /config/event_record_map {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to store the mapping between an event type and a flag value which indicates whether a given event-type event should be recorded in the Portal database. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENT_MAP {

		DESCR = "Store the mapping between an event type and a flag value which indicates whether a given event-type event should be recorded in the Portal database. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_EVENT_TYPE {

			DESCR = "The type of the event.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_FLAGS {

			DESCR = "Flag value to indicate whether to record this event or not 1(means record, default) 0 (means do not record) ";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/event_resource_map
#=======================================

STORABLE CLASS /config/event_resource_map {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton derived configuration object of this class is used to record the mapping relationship between event type and the resources this event type will reference and impact. This object will be used to optimize getting balances and potentially  for discounting and other optimization as well. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENTS {

		DESCR = "Each array element specifies the mapping relationshipbetween one event type and multiple resources.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_BALANCES {

			DESCR = "Array of resources referenced/impacted by the event type.  The element_id indicates the resource_id";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_FLAGS {

				DESCR = " 1 - referenced, 2 - impacted, 3 - both";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		STRING PIN_FLD_EVENT_TYPE {

			DESCR = "The event type ";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/export_gl
#=======================================

STORABLE CLASS /config/export_gl {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "This object contains schedule information for the application that generates GL reports and exports them as XML files ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_CONFIG_INFO {

		DESCR = "Contains basic information common to all segment entries in configuration.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DIRECTORY {

			DESCR = "Pathname of directory under which the exported GL report data files will be created.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_FILENAME_PREFIX {

			DESCR = "String to prefix the internally-generated GL report file name. This can be blank in which case the basic file name will be used.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_SOURCE {

			DESCR = "A user-defined identifier for the source system from which GL reports are exported. When there are multiple systems generating XML export files, this field will uniquely indentify the source system. This field is not used within the billing system but simply copied in the header of the output XML file for use by the external consumer of the exported data.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

	ARRAY PIN_FLD_GL_SEGMENTS {

		DESCR = "Contains the list of GL segments for which to produce the GL reports. It is possible to have multiple array elements for the same GL segment but with different revenue types to report.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_CALENDAR_DATE {

			DESCR = "Valid for frequency type of 'yearly' or 'specified dates'.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_CALENDAR_DOM {

				DESCR = "Day of month. Possible values are 1 through 31.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_CALENDAR_MOY {

				DESCR = "Month of year. Possible values are 1 through 12.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		INT PIN_FLD_CALENDAR_DOM {

			DESCR = "Day of month. Valid for frequency type of 'monthly'. Possible values are 1 through 31.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_DAY {

			DESCR = "Day of week. Valid for frequency type of 'weekly'. Possible values are 0 through 6 (Sunday through Saturday).";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_GL_NON_MONETARY_FLAG {

			DESCR = "Indicates if the list of non-monetary resource IDs provided in PIN_FLD_RESOURCE_ID_LIST are to be included in or excluded from the report. Possible values are 1 (include - PIN_GL_INCLUDE_NON_MONETARY_RESOURCE) and 0 (exclude - PIN_GL_EXCLUDE_NON_MONETARY_RESOURCE). This field will be unused if PIN_FLD_GL_RESOURCE_CATEGORY indicates currency-only.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_GL_REPORT_FREQUENCY_TYPE {

			DESCR = "Indicates the frequency of running ledger reports. Possible types are 1 (daily - PIN_GL_REPORT_FREQUENCY_DAILY), 2 (weekly - PIN_GL_REPORT_FREQUENCY_WEEKLY), 3 (monthly - PIN_GL_REPORT_FREQUENCY_MONTHLY), 4 (yearly - PIN_GL_REPORT_FREQUENCY_YEARLY), 5 (specified dates - PIN_GL_REPORT_FREQUENCY_SPECIFIED_DATES).";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_GL_REPORT_TYPE {

			DESCR = "Indicates whether the GL report should be a summary one (0 - PIN_GL_REPORT_TYPE_SUMMARY) or a detailed one (1 - PIN_GL_REPORT_TYPE_DETAIL).";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_GL_RESOURCE_CATEGORY {

			DESCR = "Indicates if the report should include only currency resources, only non-currency resources or both types of resources. Possible types are 0 (non-currency only - PIN_GL_RESOURCE_NON_CURRENCY_TYPE), 1 (currency only - PIN_GL_RESOURCE_CURRENCY_TYPE) and 2 (both - PIN_GL_RESOURCE_BOTH_TYPES).";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_GL_SEGMENT {

			DESCR = "Name of GL segment for which to produce the GL reports";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_RESOURCE_ID_LIST {

			DESCR = "Contains a blank-separated list of non-monetary resource IDs that are to be included in or excluded from the report. This field is used in conjunction with PIN_FLD_GL_NON_MONETARY_FLAG and will be unused if report is to only include currency resources.";
			ORDER = 0;
			LENGTH = 1023;
			CREATE = Optional;
			MODIFY = Not_Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_REVENUES {

			DESCR = "Contains the list of revenue types for which to produce the GL reports.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			ENUM PIN_FLD_TYPE {

				DESCR = "Indicates the type of revenue to report. Possible types are 0x01 (Unbilled - PIN_GL_TYPE_UNBILLED), 0x02 (Billed - PIN_GL_TYPE_BILLED), 0x04 (Unbilled earned - PIN_GL_TYPE_UNBILLED_EARNED), 0x08 (Billed earned - PIN_GL_TYPE_BILLED_EARNED), 0x10 (Unbilled unearned - PIN_GL_TYPE_UNBILLED_UNEARNED), 0x20 (Billed unearned - PIN_GL_TYPE_BILLED_UNEARNED), 0x40 (Previously billed earned - PIN_GL_TYPE_PREV_BILLED_EARNED).";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

	ARRAY PIN_FLD_START_DATES {

		DESCR = "The start date for each GL report is the end date for the previous GL report. This date is normally determined by examining the process audit table. The date specified in this array will be used when there are no entries in the process audit table for the associated segment (like when the application is run for the first ever time or it is a new segment configured since the last run of the application). A value of '.' (dot) indicates any segment. If there is one element with '.' as segment name and another with a specific segment name, the start date in latter will apply for that segment.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		TIMESTAMP PIN_FLD_EFFECTIVE_START_T {

			DESCR = "The start date for the first-ever report for this segment.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_GL_SEGMENT {

			DESCR = "Name of GL segment for which start date is specified.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/fld_validate
#=======================================

STORABLE CLASS /config/fld_validate {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Configuration objects of this type are used to specify the set of valid values for a given category. These objects are used in the customer management policies and PCM_OP_CUST_VALID_FLD opcode to perform input validation on various fields. You can enumerate values, or list regular expressions, in addition to setting limits depending on the type of the field. Also, you can control whether you are looking for a match or excluding invalid values, and control case sensitivity. A logical AND is used when different validation types are specified (like regexps and list of values, etc.). The PIN_FLD_NAME field in the base /config class is used to identify the category for which this object is listing the validation rules. A set of pre-defined objects are loaded from init_objects.source during installation. \tSee also /config/locales_validate. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_DOMAINS {

		LABEL = "Field Validation Domain Array";
		DESCR = "An array of possible values enumerated one per array element. The array element id is not significant. Only one of the fields contained in the array element is filled depending on the type of the field as specified in the PIN_FLD_VALIDATION substruct.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		BINSTR PIN_FLD_BINSTR_VAL {

			LABEL = "BINSTR value";
			DESCR = "Byte array if the field type is PIN_FLDT_BINSTR.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_ENUM_VAL {

			LABEL = "ENUM value";
			DESCR = "Value if the field type is PIN_FLDT_ENUM.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_INT_VAL {

			LABEL = "INT value";
			DESCR = "Value if the field type is PIN_FLDT_INT.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		DECIMAL PIN_FLD_NUM_VAL {

			LABEL = "NUM value";
			DESCR = "Value if the field type is PIN_FLDT_NUM.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		POID PIN_FLD_POID_VAL {

			LABEL = "POID value";
			DESCR = "Value if the field type is PIN_FLDT_POID.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_STR_VAL {

			LABEL = "String value";
			DESCR = "Value if the field type is PIN_FLDT_STR.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		TIMESTAMP PIN_FLD_TSTAMP_VAL {

			LABEL = "TSTAMP value";
			DESCR = "Value if the field type is PIN_FLDT_TSTAMP.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_UINT_VAL {

			LABEL = "UINT value";
			DESCR = "Value if the field type is PIN_FLDT_UINT.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

	ARRAY PIN_FLD_FORMATS {

		LABEL = "Field Validation Formats";
		DESCR = "An array of regexps. The array element id is not significant. Not used for POID and BINSTR type fields.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_FORMAT_STR {

			LABEL = "Format Mask";
			DESCR = "Actual regular expression.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

	SUBSTRUCT PIN_FLD_VALIDATION {

		LABEL = "Validation Substruct";
		DESCR = "A substruct controlling the validation.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_FIELD_TYPE {

			LABEL = "Field Validation Pin Type";
			DESCR = "The type of the data being validated. Can be only the numeric equivalents of PIN_FLDT_BINSTR, ENUM, INT, NUM, POID, STR, TSTAMP, and INT as specified in the pcm.h header file.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_FLAGS {

			LABEL = "Field Flags";
			DESCR = "Bitwise-OR'ed flags controlling the validation. Can be Required(0x1), Inclusive(0x2) and Case-sensitive(0x4).";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		DECIMAL PIN_FLD_MAXIMUM {

			LABEL = "Maximum Numeric Field Value";
			DESCR = "Inclusive upper-bound for numeric fields including TSTAMP.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_MAX_LENGTH {

			LABEL = "Maximum Field Length";
			DESCR = "Inclusive upper-bound on length for STR and BINSTR fields.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		DECIMAL PIN_FLD_MINIMUM {

			LABEL = "Minimum Numeric Field Value";
			DESCR = "Inclusive lower-bound for numeric fields including TSTAMP.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_MIN_LENGTH {

			LABEL = "Minimum Field Length";
			DESCR = "Inclusive lower-bound on length for STR and BINSTR fields.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/gel
#=======================================

STORABLE CLASS /config/gel {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Abstract class which specifies that an object will be used by the Generic Event Loader (GEL) application or the GEL Template Editor";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/gel/template
#=======================================

STORABLE CLASS /config/gel/template {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Stores an XML object containing parameters which specify how an import file should be parsed by the Generic Event Loader.  Options include how the file is delimited (by record and field), which opcode to use for loading events, which columns in the import file map to the input flist of the opcode used for loading the events, which opcode to use for associating events to accounts, filter criteria by which to include/exclude records from being imported, etc. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_GEL_TEMPLATE_INFO {

		DESCR = "Substruct containing the XML object.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		BUF PIN_FLD_GEL_TEMPLATE {

			DESCR = "The XML object.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/gl_chartaccts
#=======================================

STORABLE CLASS /config/gl_chartaccts {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A single configuration object of this class defines the General Ledger (GL) Chart of Accounts (COA) used in the  customer's financial system. This object contains information  such as the accounts used in the COA, the type and the  status of these accounts. This information is used to  validate the accounts defined each GLID in a given  gl_segment. The /config/gl_chartaccts object is loaded  using the load_pin_gl_chartaccts utility. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_GL_CHARTACCTS {

		DESCR = "Array of valid gl_chartaccts in the system. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_COA_ID {

			DESCR = "Chart Of Accounts ID, for this COA.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_COA_NAME {

			DESCR = "Name of the GL Chart Of Accounts.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_GL_COA_ACCTS {

			DESCR = "GL accounts used by the customer's used for validation.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_ACCOUNT_CODE {

				DESCR = "Actual account code used by the customer for tracking Gl impacts.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_DESCR {

				DESCR = "Description of the GL acct.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			ENUM PIN_FLD_STATUS {

				DESCR = "Denotes whether GL account is active(1) or inactive(0).";
				ORDER = 0;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			ENUM PIN_FLD_TYPE {

				DESCR = "Type field allows you to specify what kind of account it is - asset(16),expense(1),revenue(8),liability(2),equity(4).";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

}


#=======================================
#  Storable Class /config/gl_segment
#=======================================

STORABLE CLASS /config/gl_segment {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A single configuration object of this class defines the General Ledger (GL) segments in an Infranet system. GL segments are tags that get assigned to all customer accounts when the accounts are created. An URL-like notation is used to define gl segments to allow subordinate segments. Brands also use segments, with the brand name as the segment name and use the same URL-like notation. The /config/glid object consists of all the glid's defined for the GL segment. The /config/gl_segment object is loaded using the load_pin_glid utility. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_GL_SEGMENTS {

		DESCR = "Array of valid gl_segments in the system. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_BRAND_NAME {

			DESCR = "Brand Name, most cases will be the same as segment name, but denotes that the segment is also a brand.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_COA_ID {

			DESCR = "Chart Of Accounts ID, for this particular gl segment.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_DESCR {

			DESCR = "Description of the GL segment.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_PARENT_SEGMENT {

			DESCR = "Parent segment of the GL segment.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_ROLL_UP {

			DESCR = "(Y/N) Whether roll up should be done.";
			ORDER = 0;
			LENGTH = 1;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_SEGMENT_NAME {

			DESCR = "Name of the GL segment.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/glid
#=======================================

STORABLE CLASS /config/glid {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A single configuration object of this class defines the General Ledger Ids (GLIDs) in an Infranet system. GLIDs are numeric tags that get assigned to all A/R impacts affecting any customer account. This config object defines the valid GLIDs in the system and how they are mapped to sets of G/L Accounts. A GLID always maps to one G/L Account that is 'A/R' and one G/L Account that is the 'offset' or 'Non-A/R' account. The offset account may be cash, revenue, etc. By defining GLIDs for all the different types of Revenue, A/R and Cash you wish to track, simple mappings can be set up so Infranet can provide ready-to-load G/L Reports that fully track all the financial transactions that have occurred. Each GLID maps to different sets of G/L Account Numbers for different cirumstances (billed vs. unbilled, revenue vs. discount, etc.). The /config/glid object is typically loaded using the load_pin_glid utility. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_GL_IDS {

		DESCR = "Array of valid GLIDs in the system. The numeric GLID is the index of the array element.GLID values has to be assigned according to following rules:1. GLID from 0 to 1000000 - are reserved for Portal use.2. GLID 0 - is journalized, but it is excluded from GL reports.This value is considered as undefined and should not be present in production system.3. GLID from 1 to 99 - are excluded from journalizing and GL reports.4. GLID from 100 - are journalized and included in GL reports.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			DESCR = "Description of the GLID. This is displayed in the Pricing Tool.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_FLAGS {

			DESCR = "Reserved for future use.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_GL_ACCTS {

			DESCR = "Array of G/L account pairs that this GLID maps to - one pair per combination of the type and attribute parameters.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_ATTRIBUTE {

				DESCR = "Attribute field allows you to specify different G/L Account pairs for different types of G/L Reports. Possible values are gross, net, discount, tax.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_GL_AR_ACCT {

				DESCR = "The A/R account for this GLID, type & attribute. This name will likely match the name of a corresponding external G/L account. This G/L Account is impacted with the actual balance impact of the event (an event costing  will ADD  to this account).";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_GL_OFFSET_ACCT {

				DESCR = "The Offset account for this GLID, type & attribute. This name will likely match the name of a corresponding external G/L account. This G/L Account receives the negative of the cost of the event (an event costing  will SUBTRACT  from this account)";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			ENUM PIN_FLD_TYPE {

				DESCR = "Type field allows you to specify different G/L Account pairs for different types of G/L Reports. Possible values are billed, unbilled, billed_earned, billed_unearned, prev_billed_earned, unbilled_earned,  unbilled_unearned.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		STRING PIN_FLD_TAX_CODE {

			DESCR = "This field is used to map a certain type of tax to a GLID. Since tax is not calculated via the price list, the GLID must be assigned explicitly for all taxes. If the tax code for taxes charged equals this value, then this GLID is assigned.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/impact_category
#=======================================

STORABLE CLASS /config/impact_category {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to categorize the various impact categories and limit their scope to a service type and rate category in the Pricing Tool. This configuration has no impact on the rating engine. See /config/spec_impact_categories class definition.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_IMPACT_CATEGORIES {

		DESCR = "Array of impact categories. Array element id is not significant. There can be multiple entries for a given impact category in order to extend its scope to multiple service types and rate categories.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_IMPACT_CATEGORY {

			DESCR = "The impact category name. There are two special categories - default ('default') and global ('*'). Default is used when no other impact category is specified to the rating engine. Global is always used in addition to the other categories.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_RATE_CATEGORY {

			DESCR = "Rate category name. The impact category is allowed when specifying balance impacts for this rate category.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_SERVICE_TYPE {

			DESCR = "Service Type String. This impact category is allowed when specifying balance impacts for rate categories that are limited to this service type.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/inventory_mgmt_template
#=======================================

STORABLE CLASS /config/inventory_mgmt_template {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Stores an XML object containing parameters which specify how a Request or Response file should be parsed by the Inventory Management Center tool.  Options include how the file is delimited (by record and field), fields to map, ...";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_INVENTORY_INFO {

		DESCR = "Substruct containing the XML object.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		BUF PIN_FLD_INVENTORY_TEMPLATE {

			DESCR = "The XML object.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/invoice
#=======================================

STORABLE CLASS /config/invoice {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Obsolete.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENTS {

		DESCR = "Not used.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_CYCLE_TYPE {

			DESCR = "Not used.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_DESCR {

			DESCR = "Not used.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_DETAIL_TYPE {

			DESCR = "Not used.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_GROUP_TYPE {

			DESCR = "Not used.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_TYPE {

			DESCR = "Not used.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_TYPE_STR {

			DESCR = "Not used.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/invoice_data_map
#=======================================

STORABLE CLASS /config/invoice_data_map {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "The objects of this class are used to hold the pin field mapping. They are used to generate a flist from the invoice cache encoded by Pipeline. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_FIELD {

		DESCR = "This array holds a list of fields that are used to generate a flist. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_ATTRIBUTE {

			DESCR = "This field is used to store the level of nesting of a field in the resulting flist.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_FIELD_NAME {

			DESCR = "This contains the name of a field.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_FIELD_NUM {

			DESCR = "This contains the field number as described  in pin_flds.h.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_FIELD_TYPE {

			DESCR = "This indicates the type of a field: Array or Substruct.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/invoice_events
#=======================================

STORABLE CLASS /config/invoice_events {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "This contains a list of configurable event types used in event search opcode when making an invoice.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENTS {

		DESCR = "This array contains event types.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_TYPE_STR {

			DESCR = "This indicates the type of the event.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/invoice_templates
#=======================================

STORABLE CLASS /config/invoice_templates {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "The objects of this class are used to hold the HTML templates and style sheets. They are applied during invoice viewing. A command line utility can be used to load the style sheets or HTML templates into the config objects.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_INHERITED_INFO {

		DESCR = "This contains additional fields used for invoice template config objects.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_FLAGS {

			DESCR = "This flag is used to distinguish the methods of formatting of an invoice between the HTML template and the XSL style sheet.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_TEMPLATE_NAME {

			DESCR = "This template name should be unique in a given brand and for a given category. It is reserved for future use.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

	ARRAY PIN_FLD_INV_INFO {

		DESCR = "This array holds invoice templates. Each array element represents a template of a specific format and a specific locale. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		BUF PIN_FLD_BUFFER {

			DESCR = "This holds an invoice template used during invoice viewing by PCM_OP_INV_VIEW_INVOICE. You can store arbitrary format templates, but you need to have corresponding policies to handle them.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_FORMATS {

			DESCR = "This array holds XSL style sheets for each level of the invoice template. Typically, it is used for Drill-down invoices.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FILENAME {

				DESCR = "This is the file name of the style sheet used during drill-down invoicing.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		STRING PIN_FLD_LOCALE {

			DESCR = "This is the preferred locale for the template.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_NAME {

			DESCR = "This indicates the type of the template. The default type is HTML template. ";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/invoice_templates/dunning
#=======================================

STORABLE CLASS /config/invoice_templates/dunning {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "This is sub class of /config/invoice_templates/ objects.This class is used to hold the HTML templates and stylesheets that are applied during dunning letter viewing. A command line util can be used to load the style sheetsor HTML templates into the config objects";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/item_tags
#=======================================

STORABLE CLASS /config/item_tags {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "The object defined by this class determines the item tags that is associated with an event and a service";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_ITEM_TAGS {

		DESCR = "Array of configurable item tags for different event types. Array element id is not significant.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_EVENT_TYPE {

			DESCR = "Event type. A string where you can also use '*' as the wild card at the end of string.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_ITEM_TAG {

			DESCR = "Item tag string.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_SERVICE_TYPE {

			DESCR = "Service/Account type string regular expression that allows you to set up wildcards.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/item_types
#=======================================

STORABLE CLASS /config/item_types {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "The object defined by this class determines the item types that are created when an event occurs. These items may be individual or cumulative.  If the item type is cumulative, the existing item of that type (with the pending status) is used when the event is recorded.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_ITEM_TYPES {

		DESCR = "Array of configurable item types that may be created for various event types. Array element id is not significant.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			DESCR = "Item description.  Will be used as items title.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_ITEM_SUB_TYPE {

			DESCR = "Item sub type for user defined types like  usage,onetime,recurring etc.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_ITEM_TAG {

			DESCR = "Item tag derived by event type, service type and other event information";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_ITEM_TYPE {

			DESCR = "Item type.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_PRECREATE {

			DESCR = "If the item should be precreated or not Pecreate (1) or non-precreate (0).";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_TYPE {

			DESCR = "Type of the item. Individual (1) or Cumulative (2).";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/lifecycle_states
#=======================================

STORABLE CLASS /config/lifecycle_states {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = " This class will contain the state machine configuration  for the prepaid lifecycle ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PERMITTED_SERVICE_TYPES {

		DESCR = " Array containing the service types for which this lifecycle  state machine is applicable";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_SERVICE_TYPE {

			DESCR = "Service Type";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

	ARRAY PIN_FLD_STATES {

		DESCR = " Array for the service state containing  rules and transitions to be defined";
		ORDER = 1;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_INITIAL_STATE {

			DESCR = "this flag indicates if this array is for first state of Lifecycle.";
			ORDER = 3;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_RULES {

			DESCR = "Array containing the rules for the state.";
			ORDER = 5;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_MODULE {

				DESCR = "Module in which this rule would be applied";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_NAME {

				DESCR = "Name of the Rule";
				ORDER = 1;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_VALUE {

				DESCR = "Rule enabled status. YES/NO need to be used";
				ORDER = 2;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		TIMESTAMP PIN_FLD_SERVICE_STATE_EXPIRATION_T {

			DESCR = "Expiration time for the current service state totransition to next state in lifecycle";
			ORDER = 1;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_STATE_ID {

			DESCR = "state ID for the Lifecycle state.";
			ORDER = 2;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_STATE_NAME {

			DESCR = "Name of the service state.";
			ORDER = 4;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_STRING_ID {

			DESCR = "String ID for State name. Used for localization.";
			ORDER = 5;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_STR_VERSION {

			DESCR = "The version of the localized string.";
			ORDER = 6;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_TRANSITIONS {

			DESCR = "Array containing the possible transitions from a state";
			ORDER = 6;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_DEFAULT_FLAG {

				DESCR = "This flag will indicate  that the state defined in this transitionswill be the default state to which the transition will happen upon service.time expiration..";
				ORDER = 0;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_NEXT_STATE {

				DESCR = "The state to which transition can happen from current state";
				ORDER = 1;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_POST_OPCODE {

				DESCR = "Opcode to be executed after the transition";
				ORDER = 2;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_PRE_OPCODE {

				DESCR = "Opcode to be executed before the transition";
				ORDER = 3;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

}


#=======================================
#  Storable Class /config/link_batchstat
#=======================================

STORABLE CLASS /config/link_batchstat {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Stores link informatiom";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_BATCHSTAT_LINKS {

		DESCR = "Link details";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_CONTROL_POINT {

			DESCR = "Control Point";
			ORDER = 1;
			LENGTH = 80;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_LINK_LEVEL {

			DESCR = "Link level";
			ORDER = 1;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_OBJECT_TYPE {

			DESCR = "Object Type";
			ORDER = 1;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_PARENT_CONTROL_POINT {

			DESCR = "Parent Control Point";
			ORDER = 1;
			LENGTH = 80;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_PARENT_OBJECT_TYPE {

			DESCR = "Parent object";
			ORDER = 1;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/link_controlpoint
#=======================================

STORABLE CLASS /config/link_controlpoint {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Stores link information";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CONTROLPOINT_LINKS {

		DESCR = "Link details";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_CONTROL_POINT {

			DESCR = "Control point where the data was collected.";
			ORDER = 1;
			LENGTH = 80;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_OBJECT_TYPE {

			DESCR = "Type of the process_audit object to correlate.";
			ORDER = 1;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_PARENT_CONTROL_POINT {

			DESCR = "Control point where the data for the parent object was collected.";
			ORDER = 1;
			LENGTH = 80;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_PARENT_OBJECT_TYPE {

			DESCR = "Type of the process_audit object to correlate with.";
			ORDER = 1;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_USAGE {

			DESCR = "Control Usage: (0) correlation between rating control point and corresponding re-rating control point. (1) correlation between rating control point and corresponding writeoff control point.  Value range of 0-999 is reserved for Portal use.  Values over 1000 are available for use by Customers.";
			ORDER = 1;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/locales_map
#=======================================

STORABLE CLASS /config/locales_map {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton object of this type is used to configure the locales for supported platforms.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_LOCALES_MAP {

		DESCR = "Array that holds the locales map.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_CODESETS {

			DESCR = "Array that holds the codeset information.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_PLATFORM {

				DESCR = "The locale platform.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_SRC_CODESET {

				DESCR = "The source codeset.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_TARGET_CODESET {

				DESCR = "The target codeset.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		STRING PIN_FLD_HP_LOCALE {

			DESCR = "The UNIX locale. ";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_INFRANET_LOCALE {

			DESCR = "The INFRANET locale.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_JAVA_LOCALE {

			DESCR = "The UNIX locale. ";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_LOCALE_DESC_ID {

			DESCR = "Locale description.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_SOLARIS_LOCALE {

			DESCR = "The UNIX locale. ";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_WINDOWS_LOCALE {

			DESCR = "The UNIX locale. ";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/locales_validate
#=======================================

STORABLE CLASS /config/locales_validate {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to validate input in customer manager policies. This object lists on a per-country basis, the validation categories for various fields. The validation category is the name of the /config/fld_validate object that lists the various validation criteria. A pre-defined set of mappings provided in init_objects.source file is used when installing Infranet. For example, this object might specify that for country 'USA', the validation category for 'PIN_FLD_STATE' is 'USA_STATE'. The actual list of acceptable state names is specified by the /config/fld_validate object with PIN_FLD_NAME set to 'USA_STATE'.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_LOCALES {

		DESCR = "Array of information specific to various countries. Array element id is not significant. There can be only element for a given country.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_COUNTRY {

			LABEL = "Country";
			DESCR = "The case-insensitive country name.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_VALIDATION_SPECIFICS {

			DESCR = "Array of validation information specific to one country on various fields. Array element id is not significant. There can be only one element for a given field.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FIELD_NAME {

				LABEL = "Field name";
				DESCR = "The actual field name as seen by the policy input. For example, 'PIN_FLD_STATE'.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_NAME {

				LABEL = "Field Validation Name";
				DESCR = "The validation category for the field. There should be a /config/fld_validate object with that name. For example, 'USA_STATE'.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

}


#=======================================
#  Storable Class /config/login_exclusion
#=======================================

STORABLE CLASS /config/login_exclusion {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "This config class is used to store a list of service types that do not populate the uniqueness table when in multi-db mode.  The data is loaded using the load_pin_excluded_logins utility from an XML file.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_SERVICES {

		DESCR = "The array of services that do *not* populate the uniqueness table";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_SERVICE_TYPE {

			DESCR = "Service type name. For example, /service/telco/gsm.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/map_glid
#=======================================

STORABLE CLASS /config/map_glid {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used by the PCM_OP_ACT_POL_SPEC_GLID policy opcode to determine and/or override the GLIDs to be used balance impacts in the pre-rated and partially-rated events. A pre-defined set of mappings provided in init_objects.source file is used when installing Portal.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CHOICES {

		LABEL = "GLID code map configuration";
		DESCR = "Array of event type to GLID mappings. Array element id is not significant.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_EVENT_TYPE {

			LABEL = "Event type";
			DESCR = "The event type string.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_GL_ID {

			LABEL = "GL_ID";
			DESCR = "The GLID numeric code. See /config/glid definition.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_STRING_ID {

			LABEL = "Reason code str ID";
			DESCR = "The string ID within the String Version. It identifies the reason code to which this G/L ID has been assigned.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_STR_VERSION {

			LABEL = "Reason code str ver";
			DESCR = "The version of the localized string within domain: Reason Codes-Credit Reasons or Reason Codes-Debit Reasons.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/mta
#=======================================

STORABLE CLASS /config/mta {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Configuration object for applications based on MTA framework.Used for customization purposes and is not required by default.Enables policy opcode calls on Customization layerfrom pre-defined execution points on Framework layerand function call substitution on Application layer.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CONFIG_MTA {

		DESCR = "Configuration information related to particular MTA application.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_FUNCTION_MAP {

			DESCR = "Represents mapping between customized function from shared/dynamic library and default MTA callback functionon Application layer.";
			ORDER = 2;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FUNCTION {

				DESCR = "Name of default application callback function,like pin_mta_config or pin_mta_worker_init";
				ORDER = 0;
				LENGTH = 60;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_NAME {

				DESCR = "Function name in shared/dynamic library, whichsubstitutes default call back funtion at run-time";
				ORDER = 0;
				LENGTH = 60;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		STRING PIN_FLD_LIBRARY {

			DESCR = "Shared/dynamic library name. The library loaded by applicationat run-time and provides substitutional functions to default implementation functions on Application layer";
			ORDER = 0;
			LENGTH = 60;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_NAME {

			DESCR = "MTA Application name; has to match with MTA applicationname at run-time.";
			ORDER = 0;
			LENGTH = 60;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_OPCODE_MAP {

			DESCR = "Represents mapping between MTA application execution phase andpolicy opcode call. Policy opcode calls are executed from predefined execution points on Framework layer.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FUNCTION {

				DESCR = "Name of application execution phase like MTA_CONFIG or MTA_TUNE";
				ORDER = 0;
				LENGTH = 60;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_NAME {

				DESCR = "Policy opcode name";
				ORDER = 0;
				LENGTH = 60;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

}


#=======================================
#  Storable Class /config/network_element
#=======================================

STORABLE CLASS /config/network_element {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of thisclass is used to set up the network element. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_NETWORK_ELEMENT_INFO {

		DESCR = "Array of the network element. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_NETWORK_ELEMENT {

			DESCR = "Name of the network element.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/notify
#=======================================

STORABLE CLASS /config/notify {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used by the activity manager to determine the (policy) opcode(s) to be called when an event happens. This policy serves as a callback hook for you to perform event specific actions. Note that the notification opcode is called right after recording the event. This object is set up by the load_pin_notify command line utility. A sample file pin_notify is supplied with Portal system.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENTS {

		DESCR = "Array of notification callbacks, one (or many) per event. Array element id is not significant.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_FLAGS {

			DESCR = "Opcode flags to be passed to the notification opcode. 0 is recommended.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_OPCODE {

			DESCR = "The policy opcode number.  Policy opcodes should have numeric ids greater than 10000. You may use the generic event notification policy PCM_OP_ACT_POL_EVENT_NOTIFY. Also, you can use the same opcode for multiple event types.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_TYPE_STR {

			DESCR = "Event type string regular expression that allows you to set up wildcards.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/opcodemap
#=======================================

STORABLE CLASS /config/opcodemap {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to set up the service type to opcode mapping used when a framework needs to determine which opcode to call based on the processing stage.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_OPCODES {

		DESCR = "An array to hold the list of opcodes that require a opcode map.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_NAME {

			DESCR = "The name of the opcode.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_OPCODE {

			DESCR = "Opcode that is called.";
			ORDER = 1;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_OPCODE_MAP {

			DESCR = "An array of values that hold the mapping of type to opcode num for each processing stage (e.g. preprocess). The processing stage is used as the elemid in the array. The elements are sorted as alphanumeric strings.";
			ORDER = 3;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_OPCODE {

				DESCR = "Opcode to be called.";
				ORDER = 1;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_TYPE_STR {

				DESCR = "The type used to map the opcode. This could be a service type or any other string.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		ENUM PIN_FLD_PROCESSING_STAGE {

			DESCR = "The processing stage.";
			ORDER = 2;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/opcodemap/gsm
#=======================================

STORABLE CLASS /config/opcodemap/gsm {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Abstract class to hold the opcode map for the generic wireless framework.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/opcodemap/tcf
#=======================================

STORABLE CLASS /config/opcodemap/tcf {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Abstract class to hold the opcode map for the generic wireless framework.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/order_state
#=======================================

STORABLE CLASS /config/order_state {

	READ_ACCESS = "Brand";
	WRITE_ACCESS = "Self";
	DESCR = "Storable class contains the possible state transitions of /order";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_ORDER_STATES {

		DESCR = "Array of order state";
		ORDER = 1;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_NEXT_STATES {

			DESCR = "Array of order state";
			ORDER = 4;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_STATE_ID {

				LABEL = "order states";
				ORDER = 0;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		INT PIN_FLD_STATE_ID {

			DESCR = "The encryption of the request file";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_STATE_TYPE {

			DESCR = "The state type of the order. It could be raw state, initial state, termination state, or normal state.";
			ORDER = 3;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_STRING_ID {

			LABEL = "Reason code str ID";
			DESCR = "The string ID within the String Version. It identifies the reason code to which this G/L ID has been assigned.";
			ORDER = 2;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_STR_VERSION {

			LABEL = "Reason code str ver";
			DESCR = "The version of the localized string within domain: Reason Codes-Credit Reasons or Reason Codes-Debit Reasons.";
			ORDER = 1;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

	SUBSTRUCT PIN_FLD_TYPE_INFO {

		DESCR = "Array containing specific information with respect to the response files received from the order. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_ORDER_TYPE {

			DESCR = "Represents order type";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/order_state/voucher
#=======================================

STORABLE CLASS /config/order_state/voucher {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "AncestralLineage";
	DESCR = "Storable class to store order state of voucher";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/payment
#=======================================

STORABLE CLASS /config/payment {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to configure modular payment interface. The Modular Payment Interface is a consistent API exposed by the billing manager to request and receive payments giving you the flexibility to offer other payment methods.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PAY_TYPES {

		DESCR = "Array of modular payment configuration for each payment type. The payment type is used as the array element id. The payment types are currently defined as billing types in pin_cust.h. See Modular Payment documentation.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_OPCODES {

			DESCR = "Array describing the opcode information for the various opcodes that be called on different types of payment operations. Array element is set to the following: VALIDATION (0), CHARGE (1), RECOVER (2).";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_EVENT_TYPE {

				DESCR = "Type of the event to be created when this operation occurs. Typically, these are subtypes of /event/billing/{validate,charge} class.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_FLAGS {

				DESCR = "The opcode flags to be passed to the opcode set up in PIN_FLD_OPCODE. 0 recommended.";
				ORDER = 0;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_NAME {

				DESCR = "Name of the opcode. This is mainly for readability.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_OPCODE {

				DESCR = "Number of the opcode to be invoked.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		STRING PIN_FLD_PAYINFO_TYPE {

			DESCR = "The type of the payment object that describes per-account payment information specific to this payment type.. For ex, /payinfo/invoice.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_PAYMENT_EVENT_TYPE {

			DESCR = "Type of event to be created when payment is received.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_REFUND_EVENT_TYPE {

			DESCR = "Type of event to be created when refund is made.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/payment_term
#=======================================

STORABLE CLASS /config/payment_term {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Class to define payment terms. Element Id will correspond to payment term Id and serve as a link to payment term in /payinfo object. Desc field will contain description of payment term.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PAYMENT_TERMS {

		DESCR = "Array of payment terms";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			DESCR = "Description of payment term.";
			ORDER = 0;
			LENGTH = 1023;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/paymenttool
#=======================================

STORABLE CLASS /config/paymenttool {

	LABEL = "Payment Tool Configuration object";
	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Objects of this class are used to create payment, reversal, and refund batch type actions on pre-defined and new payment types within Payment Tool database. While most of your payment decisions will be handled by the Payment Tool GUI, you can customize actions using these objects. Payment Tool GUI adjusts its characteristics (like column names, marking fields as read-only) etc. based on these objects. These configuration objects must be defined on a per-language basis. A language is recognized by appending the ISO 639 language name in the PIN_FLD_NAME of the base /config class. There can be only instance of this language for a given language. See on-line documentation for additional details. Pre-defined objects are loaded from init_objects.source file during Infranet installation.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PAY_TYPES {

		DESCR = "Array of configuration information for every payment type. The numeric value of the payment type is used as the array element id. See also /config/payment.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_NAME {

			DESCR = "Descriptive name.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_PAYMENTTOOL_FIELDS {

			DESCR = "Array of Payment Tool configurations for each batch type. Array element id is significant and determines the order in which the various fields will be displayed in the GUI. ";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_BATCH_TYPE {

				DESCR = "Batch type. Payment (0), Reversal (1). A payment batch only has data entry fields, a reversal batch can have display and data entry fields.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_COLUMN_NAME {

				DESCR = "Column name to be used in the Payment Tool GUI.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_FIELD_NAME {

				DESCR = "Name of a field in the custom section of the /event/billing/payment or /event/billing/reversal class depending on the batch type. For ex, or a check payment batch, the fields in PIN_FLD_CHECK_INFO array of /event/billing/payment/check may be used.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_PURPOSE {

				DESCR = "Read-only field if 1. Data entry allowed if 0.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

}


#=======================================
#  Storable Class /config/pin_archive
#=======================================

STORABLE CLASS /config/pin_archive {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Config object for data archiving configuration information This object stores the object types, the database tables affected by the object types, the aging criteria and the type of archive operation (push or backup)";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_ARCHIVABLE_OBJ_TYPES {

		DESCR = "Array to store archivable object types and attirbutes";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_ARCHIVE_AGING {

			DESCR = "Aging criteria (in days). The items which are closed for these many days will be archived";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_ARCHIVE_OPERATION {

			DESCR = "The archivng operation. BACKUP and PUSH are  the two valid archiving operations";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_ARCHIVE_TABLEMAP {

			DESCR = "Array to store the database tables affected by the archivable object types.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_NAME {

				DESCR = "The database tables affected by the object type ";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		STRING PIN_FLD_NAME {

			DESCR = "The object type which need to be archived";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/pin_webd
#=======================================

STORABLE CLASS /config/pin_webd {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to limit the list of opcodes that can be invoked via pin_webd, the Web Manager. This object is set up using the load_pin_webd command line utility. A sample file pin_webd_opcodes is supplied along with Infranet.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PERMITTEDS {

		DESCR = "Array of permitted opcodes. Array element id is not significant.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_FLAGS {

			DESCR = "This is actually a status field with values allowed (1) or not allowed (0). The  opcode will be permitted by pin_webd only if this field has a value 1.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_NAME {

			DESCR = "Opcode Name.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_OPCODE {

			DESCR = "Opcode Number.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/pricing_admin
#=======================================

STORABLE CLASS /config/pricing_admin {

	READ_ACCESS = "Self";
	WRITE_ACCESS = "Self";
	DESCR = "Config object for Pipeline server log-in info.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_CONFIG_INFO {

		DESCR = "Substruct containing Pipeline server log-in info.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_HOSTNAME {

			DESCR = "The name of the Pipeline db server host.";
			ORDER = 0;
			LENGTH = 60;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_LOGIN {

			DESCR = "The username to log into the Pipeline db server.";
			ORDER = 0;
			LENGTH = 60;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_NAME {

			DESCR = "The name of the Pipeline db.";
			ORDER = 0;
			LENGTH = 60;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_PASSWD {

			DESCR = "The password to log into the Pipeline db server.";
			ORDER = 0;
			LENGTH = 79;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 1;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_PORT {

			DESCR = "The port number for connection to the Pipeline db server host.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_SERVER_TYPE {

			DESCR = "The Pipeline db type, e.g., oracle.  This has to match the alias of a driver configuration group in the configuration file on the client machine.";
			ORDER = 0;
			LENGTH = 60;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/process_audit_conf
#=======================================

STORABLE CLASS /config/process_audit_conf {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Defines configuration for process_audit objects. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_AUDIT_CONFIG {

		DESCR = "Array for storing the configuration parameter for process";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_AUDIT_PROCESS {

			DESCR = "Type of the process_audit object ";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_FIELD_NAMES {

			DESCR = "Array for storing the field names duplication check";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FIELD_NAME {

				DESCR = "Name of the field for duplication check";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		INT PIN_FLD_THRESHOLD {

			DESCR = "Threshold for number of failed records";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/provisioning_tag
#=======================================

STORABLE CLASS /config/provisioning_tag {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Config object used to configure product/discount provisioning tags.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_OPCODES {

		DESCR = "An array to hold the list of opcodes to be called when a product/discount is purchased or cancelled or both.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_MODE {

			DESCR = "Indicates if the opcode is to be during purchase, cancel or both. Values are: (0) on purchase, (1) on cancel, (2) on both purchase and cancel. ";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_OPCODE {

			DESCR = "Opcode number that is called.";
			ORDER = 1;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_PARAMS {

			DESCR = "Array of input data for the opcode.";
			ORDER = 2;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FIELD_NAME {

				DESCR = "Field Name";
				ORDER = 0;
				LENGTH = 512;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_VALUE {

				DESCR = "Value of the field";
				ORDER = 0;
				LENGTH = 64;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

	ARRAY PIN_FLD_PERMITTEDS {

		DESCR = "Array of permitted types.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_PERMITTED {

			DESCR = "The type of permitted service or account.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/psm
#=======================================

STORABLE CLASS /config/psm {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Config object that holds an array of suspense account poid.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_ACCOUNTS {

		DESCR = "Array of suspense account poid.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		POID PIN_FLD_ACCOUNT_OBJ {

			DESCR = "Poid of Suspense Account. All the suspended payment will be guided to this account";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/ra_alerts
#=======================================

STORABLE CLASS /config/ra_alerts {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Stores alert info";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_THRESHOLDS {

		DESCR = "Threshold Details";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_LOCALE {

			DESCR = "Locale Name";
			ORDER = 1;
			LENGTH = 80;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_NAME {

			DESCR = "Alert Name";
			ORDER = 1;
			LENGTH = 80;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_RECIPIENTS {

			DESCR = "Receipients Info";
			ORDER = 1;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_EMAIL_ADDR {

				DESCR = "Receipents Email Address";
				ORDER = 2;
				LENGTH = 80;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			ENUM PIN_FLD_TYPE {

				DESCR = "Email Type";
				ORDER = 2;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		STRING PIN_FLD_SENDER {

			DESCR = "Sender Details";
			ORDER = 1;
			LENGTH = 80;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/ra_flows
#=======================================

STORABLE CLASS /config/ra_flows {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Stores flow info";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_RA_FLOWS {

		DESCR = "Revenue Assurance Flow Details";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_CONTROL_POINTS {

			DESCR = "Control Point Info";
			ORDER = 1;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_DESCR {

				DESCR = "Control Point Descrition";
				ORDER = 2;
				LENGTH = 255;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_NAME {

				DESCR = "Control Point name";
				ORDER = 2;
				LENGTH = 80;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_OBJECT_TYPE {

				DESCR = "Object Name ";
				ORDER = 2;
				LENGTH = 80;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		STRING PIN_FLD_DESCR {

			DESCR = "Description About flow";
			ORDER = 1;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_NAME {

			DESCR = "Flow Name";
			ORDER = 1;
			LENGTH = 80;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/ra_thresholds
#=======================================

STORABLE CLASS /config/ra_thresholds {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Stores threshold info";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_THRESHOLDS {

		DESCR = "Threshold details";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_DATE_RANGE_TYPE {

			DESCR = "Time Range Type";
			ORDER = 1;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_DAY {

			DESCR = "Days since Sunday(1-7)";
			ORDER = 1;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_FILTER_DETAILS {

			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FIELD_NAME {

				DESCR = "Filter Field Name";
				ORDER = 2;
				LENGTH = 80;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_INT_VAL {

				DESCR = "Filter Integer Value";
				ORDER = 2;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_STR_VAL {

				DESCR = "Filter String Value";
				ORDER = 2;
				LENGTH = 80;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		INT PIN_FLD_LENGTH {

			DESCR = "Alert Time Period - Length of Period";
			ORDER = 1;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_NAME {

			DESCR = "Threshold Name";
			ORDER = 1;
			LENGTH = 80;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_NUM_UNITS {

			DESCR = "Number Of Days or Weeks ";
			ORDER = 1;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_OBJECT_TYPE {

			DESCR = "Object Type";
			ORDER = 1;
			LENGTH = 80;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_START_OFFSET {

			DESCR = "Alert Time Period - Start Time";
			ORDER = 1;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_VALUE_RANGES {

			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FIELD_NAME {

				DESCR = "Threshold Field name";
				ORDER = 2;
				LENGTH = 80;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			DECIMAL PIN_FLD_MAXIMUM {

				DESCR = "Max Value";
				ORDER = 2;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			DECIMAL PIN_FLD_MINIMUM {

				DESCR = "Min Value";
				ORDER = 2;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

}


#=======================================
#  Storable Class /config/reason_code_scope
#=======================================

STORABLE CLASS /config/reason_code_scope {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "This class stores configuration for implementing the reason code filter.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_FILTER_LIST {

		DESCR = "Array of reason code filters.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_EVENTS {

			DESCR = "Array of event types and service types.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_EVENT_TYPE {

				DESCR = "The event type.";
				ORDER = 0;
				LENGTH = 60;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_SERVICE_TYPE {

				DESCR = "The service type.";
				ORDER = 0;
				LENGTH = 60;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		INT PIN_FLD_STRING_ID {

			DESCR = "Identifier for the reason code string";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_STR_VERSION {

			DESCR = "Identifier for the string domain.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/recharge_card_type
#=======================================

STORABLE CLASS /config/recharge_card_type {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Global";
	DESCR = "Stores the voucher card type information ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_RECHARGE_CARDS {

		DESCR = "Array containing the voucher recharge card types.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_DEALERS {

			DESCR = "Array containing the dealers";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_DEALER_CODE {

				DESCR = "The code of the dealer.";
				ORDER = 1;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_DEALER_NAME {

				DESCR = "Name of the dealer.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		STRING PIN_FLD_RECHARGE_CARD_CODE {

			DESCR = "Code associated with the recharge card ";
			ORDER = 2;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_RECHARGE_CARD_TYPE {

			DESCR = "Type of the voucher card ";
			ORDER = 1;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/remittance_flds
#=======================================

STORABLE CLASS /config/remittance_flds {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to define the remittance fields/attributes to be used in specifying the remittance criteria. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_REMIT_FLDS {

		LABEL = "Remittance fields definition";
		DESCR = "Array of fields to be used in remittance. Array element id is not significant.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_REMIT_BASE_TYPE {

			LABEL = "REMIT_BASE_TYPE";
			DESCR = "The base type for the field defined in the remittance criteria. As of now these are the only values supported - RESERVED, EVENT, ACCOUNT and PROFILE.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_REMIT_CRITERIA {

			LABEL = "REMIT_CRITERIA";
			DESCR = "The remittance criteria string.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_REMIT_FLD_NO {

			LABEL = "REMIT_FLD";
			DESCR = "The actual field as it exists in the data dictionary. ";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_REMIT_SUBSTRUCT_NO {

			LABEL = "REMIT_SUBSTRUCT";
			DESCR = "The number of the substruct within which the attribute is located. This has to be a valid substruct defined in the data dictionary. NONE if it is not a substruct, arrays are not supported.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/remittance_spec
#=======================================

STORABLE CLASS /config/remittance_spec {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to define the remittance specification criteria to be used in specifying the remittance criteria.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_REMIT_ACCOUNTS {

		LABEL = "Remittance Accounts definition";
		DESCR = "Array of accounts to be used in remittance. Array element id is not significant.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_ACCOUNT_NO {

			DESCR = "Customer visible remittance account number.";
			ORDER = 0;
			LENGTH = 60;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_CRITERIA {

			LABEL = "Remittance Accounts definition";
			DESCR = "Array for each criteria field to define remittance fields, operator and value.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_REMIT_FLD_NO {

				LABEL = "REMIT_FLD";
				DESCR = "The name of the remittance field already defined in the remittance fields file.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_REMIT_OP {

				LABEL = "REMIT_OP";
				DESCR = "The operator as to what the field contains.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_VALUE {

				LABEL = "REMIT_VAL";
				DESCR = "The value of the remittance field.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		POID PIN_FLD_REMIT_ACCOUNT_OBJ {

			LABEL = "REMIT_ACCOUNT_OBJ";
			DESCR = "The remittance account object.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		POID PIN_FLD_REMIT_PRODUCT_OBJ {

			LABEL = "REMIT_PRODUCT_OBJ";
			DESCR = "The remittance product object.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_REMIT_TYPE {

			LABEL = "REMIT_TYPE";
			DESCR = "The remittance type for the account defined in the remittance criteria. As of now these are the only values supported - U, B and P for Unbilled, Billed and Paid.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_RUM_NAME {

			DESCR = "Specifies which RUM should be used to rate for remittance to be applied for.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/rerate_flds
#=======================================

STORABLE CLASS /config/rerate_flds {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "A singleton configuration object of this class is used to set up the mapping of user extraction key to  field name.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_RERATE_FIELDS {

		DESCR = "Array of rerate fields. Each element in this array represents a mapping between the extraction key and event field name.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_FIELD_NAME {

			DESCR = "Event Field Name.";
			ORDER = 0;
			LENGTH = 100;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_RERATE_EXTRACTION_KEY {

			DESCR = "User defined rerate extraction key.";
			ORDER = 0;
			LENGTH = 25;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/rerate_flds/compare_bi
#=======================================

STORABLE CLASS /config/rerate_flds/compare_bi {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "A singleton configuration object of this class is used to list the fields used by rerating to determine that event balance impacts are in an equivalent category. If these fields match between two balance impacts then the PIN_FLD_AMOUNT in each balance impact is considered to be comparable to the other.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/reserve
#=======================================

STORABLE CLASS /config/reserve {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Abstract class for configuration objects that define the default resource reservation settings.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_RESERVATION_INFO {

		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		DECIMAL PIN_FLD_INCR_QUANTITY {

			DESCR = "Default quantity for reauthorization.";
			ORDER = 1;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_IS_PRIMARY_RUM {

			DESCR = "Flag indicates this is a primary RUM.Values 0 - Not a Primary RUM 1 - Primary RUM.";
			ORDER = 6;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		DECIMAL PIN_FLD_MIN_QUANTITY {

			DESCR = "Minimum quantity to be compared against the rated quantity.";
			ORDER = 2;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		DECIMAL PIN_FLD_QUANTITY {

			DESCR = "Default quantity for authorization.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_RATIO {

			DESCR = "Ratio configured for scaling the quantities incase of Multi-RUM.";
			ORDER = 5;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_REQ_MODE {

			DESCR = "Associated requested mode: Values 1 - Amount,2 - Duration,3 - Volume,4 - Activity";
			ORDER = 4;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_RUM_NAME {

			DESCR = "Name of the RUM.";
			ORDER = 3;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_UNIT {

			DESCR = "Unit of the default quantity.";
			ORDER = 7;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/reserve/broadband
#=======================================

STORABLE CLASS /config/reserve/broadband {

	READ_ACCESS = "Self";
	WRITE_ACCESS = "Self";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/reserve/gsm
#=======================================

STORABLE CLASS /config/reserve/gsm {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Stores the default reservation parameters for GSM service family.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/reserve/gsm/data
#=======================================

STORABLE CLASS /config/reserve/gsm/data {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Stores the default reservation parameters for GSM data service family.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/reserve/gsm/telephony
#=======================================

STORABLE CLASS /config/reserve/gsm/telephony {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Stores the default reservation parameters for GSM telephony service family.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/rtp
#=======================================

STORABLE CLASS /config/rtp {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "This configuration class before sending FLIST from Infranet to Realtime Pipeline, provides information related to reducing the size of FLIST, (while making PCM_OP_RATE_DISCOUNT_EVENT call in fm_act_usage). ";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/rtp/trim_flist
#=======================================

STORABLE CLASS /config/rtp/trim_flist {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to store the flist fields to send to real-time Pipeline.Fields that are not in the list will be trimmed before sending to the Pipeline. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENT_MAP {

		DESCR = "Allowable events with all required fields.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_EVENTS {

			DESCR = "Event types to match.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_EVENT_TYPE {

				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_FLAGS {

				DESCR = "1 means wildcard match, 0 means exact match";
				ORDER = 0;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		ARRAY PIN_FLD_REQUIRED_FIELDS {

			DESCR = "Required field list in dot notation, like PIN_FLD_EVENT.PIN_FLD_START_T. ";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FIELD_NAME {

				ORDER = 0;
				LENGTH = 255;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

}


#=======================================
#  Storable Class /config/rum
#=======================================

STORABLE CLASS /config/rum {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to specify the valid candidate RUMs for each event type. A event subclass inherits the candidate RUMs definition of its parent classes.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_RUM_MAP {

		DESCR = "Each array element specifies the candidate RUMs for one event type.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_CANDIDATE_RUMS {

			DESCR = "Array of candidate RUMs.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_QUANTITY_EXPR {

				DESCR = "Expression for calculating the quantity.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_RUM_NAME {

				DESCR = "Name of this candidate RUM.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			ENUM PIN_FLD_UNIT {

				DESCR = "Unit that the quantity is expressed in.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		STRING PIN_FLD_EVENT_TYPE {

			DESCR = "The type of the event that we specify canddiate RUMs for.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/service_framework
#=======================================

STORABLE CLASS /config/service_framework {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Abstract class which contains the set of configuration objects related to BRM services framework";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/service_framework/permitted_service_types
#=======================================

STORABLE CLASS /config/service_framework/permitted_service_types {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "This configuration class is used to configure the set of non-telco services to be supported by TCF, along with the configuration type details.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PERMITTED_SERVICE_TYPES {

		DESCR = "Array of Permitted service types in TCF.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_CONFIG_TYPE_PROV_DTLS {

			DESCR = "Configuration object type where Provisioning details are defined.Provisioning details attributes that needs to be added to output service order. Example: /config/telco/provisioning/ip ";
			ORDER = 1;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_CONFIG_TYPE_SVC_ORDER_STATE {

			DESCR = "Configuration type where service order state is defined.  Example: /config/telco/service_order_state/ip";
			ORDER = 2;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_PROVISIONING_MODE {

			DESCR = "Provisioning mode to be supported for the given service type. 0 - Queued mode, 1 - Confirmed mode. By defult Provisioning mode is Queued mode. ";
			ORDER = 3;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_SERVICE_TYPE {

			DESCR = "Service type. Example : /service/ip";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/service_state_map
#=======================================

STORABLE CLASS /config/service_state_map {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = " This class will contain the mapping between STATUS, STATUS_FLAGS and LIFECYCLE_STATE of service object. The index of this array element would be the value of LIFECYCLE_STATE.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_STATES {

		DESCR = " Array for the mapping between status , status_flag  and lifecycle_state";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_LIFECYCLE_STATE {

			DESCR = "Lifecycle state of a service  See pin_cust.h for possible values.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_STATUS {

			DESCR = "Status of the service. Values are active (10100), inactive (10102) and closed (10103). Typically user access to services is blocked unless active (policy controlled).";
			ORDER = 1;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_STATUS_FLAGS {

			DESCR = "System and user-defined modifier flags to track the reasons for the service being inactive. See pin_cust.h for possible values.";
			ORDER = 2;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/snowball_distribution
#=======================================

STORABLE CLASS /config/snowball_distribution {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to specify the distribution rules for snowball discounting.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_DISTRIBUTION {

		DESCR = "Each array element specifies the configuration for one snowball discount object.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		POID PIN_FLD_DISCOUNT_OBJ {

			DESCR = "Link to the snowball discount object.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_NAME {

			DESCR = "Snowball discount object name";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_RESOURCE_ID {

			DESCR = "Resource id, which is used to distribute based on the contribution for this resource; 0 means this discount object will be distributed evenly, not based on contribution";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/spec_impact_category
#=======================================

STORABLE CLASS /config/spec_impact_category {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to set up the dynamic custom attribute analysis module (opcode) on a per-event type basis. Before rating an event, the configured opcode is invoked to determine the appropriate impact category to be used when applying the balance impacts. This configuration is loaded using the load_pin_spec_impact_category command line utility. There are two special types of impact categories - default ('default') and global  ('*'). Default is used to indicate that no impact category is explicitly assigned. The global impact category is always applied in addition to other impact categories. See also /config/spec_rates definition.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_IMPACT_CATEGORIES {

		DESCR = "An array of custom attribute analysis module mappings. Array element id is not significant. The first array element whose PIN_FLD_TYPE_STR matches the incoming event type is selected.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_FLAGS {

			DESCR = "Opcode flags to be passed when invoking the opcode. It is recommended that this be set to zero.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_OPCODE {

			DESCR = "The opcode to be invoked to perform the custom attribute analysis for the event type. A template policy opcode PCM_OP_ACT_POL_SPEC_IMPACT_CATEGORY is supplied with Infranet.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_TYPE_STR {

			DESCR = "Type of the event for which custom event analysis is performed. When the incoming event matches this field, the analysis opcode is invoked. This can be an arbitrary regular expression.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/spec_rates
#=======================================

STORABLE CLASS /config/spec_rates {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to set up the dynamic rate category analysis opcode on a per-event type basis. Before rating an event, the configured opcode is invoked to determine the appropriate rate category to be used if the incoming event does not specify rates. This configuration is loaded using the load_pin_spec_rates command line utility. A sample file pin_spec_rates file is supplied with Portal system. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_RATES {

		DESCR = "Array of rate category determination mappings. Array element id is not significant. The first array element whose PIN_FLD_TYPE_STR matches the incoming event type is selected.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_FLAGS {

			DESCR = "Opcode flags to be passed when invoking the opcode. It is recommended that this be set to zero.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_OPCODE {

			DESCR = "The opcode to be invoked to perform the custom attribute analysis for the event type. A template policy opcode PCM_OP_ACT_POL_SPEC_RATES is supplied with Portal system.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_TYPE_STR {

			DESCR = "Event type string. When the incoming event matches this field, the analysis opcode is invoked. This can be an arbitrary regular expression.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/sub_bal_contributor
#=======================================

STORABLE CLASS /config/sub_bal_contributor {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to specify the per resource, per event type, the contributor configuration for retrieving and updating sub-balances.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENT_MAP {

		DESCR = "Each array element specifies the configuration for one resource.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_EVENTS {

			DESCR = "Configuration per event type.";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_EVENT_TYPE {

				DESCR = "The type of the event.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_RETRIEVE_EDR_FIELD {

				DESCR = "The description of the field name of the retrieving contributorthis is here for potential usage for IntegRate.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_RETRIEVE_FIELD {

				DESCR = "The description of the field name of the retrieving contributor";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_UPDATE_EDR_FIELD {

				DESCR = "The description of the field name of the updating contributorthis is here for potential usage for IntegRate.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_UPDATE_FIELD {

				DESCR = "The description of the field name of the updating contributor";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		INT PIN_FLD_RESOURCE_ID {

			DESCR = "Numeric value of the resource that is impacted.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/subscriber_preferences_map
#=======================================

STORABLE CLASS /config/subscriber_preferences_map {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = " This class will contain the mapping between the preference  name to the id. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_SUBSCRIBER_PREFERENCES {

		DESCR = "Structure of telco aaa configurable parameters";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DEFAULT {

			DESCR = "Default value of the Preference to show in customer center.";
			ORDER = 5;
			LENGTH = 256;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_NAME {

			DESCR = "Name of the Preference.";
			ORDER = 0;
			LENGTH = 60;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_STRING_ID {

			DESCR = "String ID of the Preference. Used for localization.";
			ORDER = 2;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_SUBSCRIBER_PREFERENCE_ID {

			DESCR = "ID of the Preference.";
			ORDER = 1;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_TYPE {

			DESCR = "Type of value the preference can hold. If the value is ENUM then the Values array will hold the List of Values for this preferenceValues are: (1) STR, (2) INT, (3) ENUM, (4) DECIMAL, (5) TSTAMP, ";
			ORDER = 3;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_VALUES {

			DESCR = "Default values the preference can take. The values are present only if TYPE is ENUM";
			ORDER = 4;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_VALUE {

				DESCR = "Default value of the Preference.";
				ORDER = 0;
				LENGTH = 256;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

}


#=======================================
#  Storable Class /config/suppression
#=======================================

STORABLE CLASS /config/suppression {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Suppression info tracks the balance threshold and maximum number of allowed consecutive bill suppressions allowed for each customer segment.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CUSTOMER_SEGMENTS {

		DESCR = "Each entry in the customer segment array will link the suppression information to a specific customer segment corresponding to the element id to the array. The element id of the array entry can be used as an enumerated value to specify the  customer segment.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_MAX_SUPPRESSED_CYCLES {

			DESCR = "Configured maximum consecutive bill cycles alowed to be Suppressed.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		DECIMAL PIN_FLD_MIN_BILL_AMOUNT {

			DESCR = "Threshold value corresponding to current bills balance. If the balance of the bill is below the threshold the bill should be  Suppress. ";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/suspense_edr_fld_map
#=======================================

STORABLE CLASS /config/suspense_edr_fld_map {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to set up the list of the edr name and edr field value to brand poid mapping.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENTS {

		DESCR = "Array of edr field name and edr field value to brand poid mapping. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_EVENT_MAP {

			DESCR = "Array of edr field value to brand poid mapping. ";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			POID PIN_FLD_BRAND_OBJ {

				DESCR = "User defined brand obj.";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			TIMESTAMP PIN_FLD_VALID_FROM {

				DESCR = "The valid date range";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			TIMESTAMP PIN_FLD_VALID_TO {

				DESCR = "The valid date range";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_VALUE {

				DESCR = "User defined edr field value.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		STRING PIN_FLD_FIELD_NAME {

			DESCR = "User defined edr field name.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/suspense_params
#=======================================

STORABLE CLASS /config/suspense_params {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A configuration object of this class is used to store system configuration parameters for suspense.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PARAMS {

		DESCR = "Configuration information for an individual paramteter.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			DESCR = "A decription that indicates what the parameter is to be used for and any other pertinent details.";
			ORDER = 0;
			LENGTH = 1024;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_PARAM_NAME {

			DESCR = "The name of the parameter. The name for each parameter must be unique.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_PARAM_VALUE {

			DESCR = "The data for the parameter represented as a string.";
			ORDER = 0;
			LENGTH = 1024;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/suspense_reason_code
#=======================================

STORABLE CLASS /config/suspense_reason_code {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to set up the mapping of the suspense error code and the suspense reason code.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_SUSPENSE_REASONS {

		DESCR = "Array of suspense reasons. Each element in this array represents a different error code and element id is the error code.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_SUSPENSE_REASON {

			DESCR = "User defined suspense reason code.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_SUSPENSE_SUBREASON {

			DESCR = "User defined suspense subreason code.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/tax_supplier
#=======================================

STORABLE CLASS /config/tax_supplier {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton object of this class is used to set tax supplier information.  A tax supplier is analogous to the company information described in tax packages such as Taxware, which uses the supplier identification along with many other attributes to determine taxes. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_TAX_SUPPLIERS {

		DESCR = "Array describing tax supplier information. Array Id is significant; it will be used to uniquely identify this tax supplier.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_ADDRESS {

			DESCR = "Address for this tax supplier in the format: city;state/province;zip;country.  Used as the FROM address in the tax transaction.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_DEFAULT_FLAG {

			DESCR = "Flag that identifies the 'default' (1) tax supplier in case a supplier cannot be determined from the product that is used to rate an event. A value of (0) means this is not the default.  Only one tax supplier can be marked as being the 'default'. ";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_DESCR {

			DESCR = "Description for this tax supplier.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_NAME {

			DESCR = "Unique name for this tax supplier.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_NEXUSINFO {

			DESCR = "Semicolon separated list of states where the tax supplier/company has significant presence.  '*' may be used to describe nexus for all states. Used only for Sales/Use tax. ";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_REGULATED_FLAG {

			DESCR = "Flag that identifies the utility/company doing the billing as Regulated (0) or Unregulated (1). Some taxes apply to regulated or unregulated utilities only, and this flag is used to determine whether a particular tax should be calculated. Used for telco tax.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_VATINFO {

			DESCR = "Array with details about VAT certificates (used with WorldTax package). ";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_CANON_COUNTRY {

				DESCR = "Canonical alphabetic country code passed to the Taxware package.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_VAT_CERT {

				DESCR = "Seller VAT certificate string specific to the country specified in PIN_FLD_CANON_COUNTRY.";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

}


#=======================================
#  Storable Class /config/telco
#=======================================

STORABLE CLASS /config/telco {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "This configuration class is a base class that maps provisioning tag names and values for all the /service/telco storable sub classes.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PROD_PROVISIONING_TAGS {

		DESCR = "Array of Provisioning tags.  Each element in this array represents a different provisioning tag.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_DATE_CHANGE_IMPACT {

			DESCR = "Indicates if product change should trigger provisioning or not";
			ORDER = 2;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_DESCR {

			DESCR = "Description of Provisioning Tag";
			ORDER = 1;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_EXT_RA {

			DESCR = "Array of ERA name for the current provisioning tag ";
			ORDER = 4;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_LABEL {

				DESCR = "ERA label name which stores ERA type ";
				ORDER = 4;
				LENGTH = 64;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_LOCALE_DESC_ID {

				DESCR = "String ID for description of the extended rating attribute feature. ";
				ORDER = 3;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_NAME {

				DESCR = "ERA name, for example F&F.. Integrate DB key ";
				ORDER = 0;
				LENGTH = 64;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			ENUM PIN_FLD_NEED_PROVISIONING {

				DESCR = "Indicates if this ERA has a provisioning impact or not";
				ORDER = 2;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_STRING_ID {

				DESCR = "String ID for ERA name. Key to local display name ";
				ORDER = 1;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		STRING PIN_FLD_PROVISIONING_TAG {

			DESCR = "Provisioning Tag name";
			ORDER = 0;
			LENGTH = 64;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_SERVICE_EXTENSIONS {

			DESCR = "Array of Service Extenstions.  For example, It can be used to put GSM Bearer Service in case of GSM Service. ";
			ORDER = 5;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_NAME {

				DESCR = "Service Extension Name";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_VALUE {

				DESCR = "Service Extension Value";
				ORDER = 1;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		ARRAY PIN_FLD_TELCO_FEATURES {

			DESCR = "List of features for the current product";
			ORDER = 3;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_NAME {

				DESCR = "Feature name, ie CFU, CB, etc,.";
				ORDER = 0;
				LENGTH = 64;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

}


#=======================================
#  Storable Class /config/telco/broadband
#=======================================

STORABLE CLASS /config/telco/broadband {

	READ_ACCESS = "Self";
	WRITE_ACCESS = "Self";
	DESCR = "Type only class for  Broadband";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/telco/gsm
#=======================================

STORABLE CLASS /config/telco/gsm {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "This configuration class maps provisioning tag names and values for the /service/telco/gsm storable sub classes.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/telco/gsm/data
#=======================================

STORABLE CLASS /config/telco/gsm/data {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "This configuration class maps provisioning tag names and values for the /service/telco/gsm/data storable sub classes.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/telco/gsm/fax
#=======================================

STORABLE CLASS /config/telco/gsm/fax {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "This configuration class maps provisioning tag names and values for the /service/telco/gsm/fax storable sub classes.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/telco/gsm/sms
#=======================================

STORABLE CLASS /config/telco/gsm/sms {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "This configuration class maps provisioning tag names and values for the /service/telco/gsm/sms storable sub classes.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/telco/gsm/telephony
#=======================================

STORABLE CLASS /config/telco/gsm/telephony {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "This configuration class maps provisioning tag names and values for the /service/telco/gsm/telephony storable sub classes.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/telco/provisioning
#=======================================

STORABLE CLASS /config/telco/provisioning {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Stores information that maps relationships between a service or a device and a provisioning service order.Objects in this class determine which fields are read from the /service/telco and /device objects when a service order is created. Only one object of this type exists in a Portal database.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_DEVICES {

		DESCR = "Each array element specifies the provisioning configuration for a type of service order and a device status type";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_ACTION {

			DESCR = "The type of provisioning action/service order. The possible values are : A(Activate), D(Deactivate), S(Suspend) R(Reactivate)  ";
			ORDER = 0;
			LENGTH = 2;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		POID PIN_FLD_OBJECT {

			DESCR = "Link to device field list Array of object describing the field needed in the service order from the device object";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_PROVISIONING_INFO {

			DESCR = "Each array element specifies the provisioning configuration of a device for a type of service order and a device type";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_ACTION {

				DESCR = "The type of provisioning action to be included in the SO for this device. The possible values are : A(Activate), D(Deactivate), S(Suspend) R(Reactivate), I(Ignore), C(Change)";
				ORDER = 0;
				LENGTH = 2;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			POID PIN_FLD_OBJECT {

				DESCR = "Link to device field list Array of object describing the field needed in the service order from this device object";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_TYPE_STR {

				DESCR = "The device type: ";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		ARRAY PIN_FLD_SERVICES {

			DESCR = "Specifies the provisioning configuration of a service for a type of service order and a device type";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_ACTION {

				DESCR = "The type of provisioning action The possible values are : A(Activate), D(Deactivate), S(Suspend) R(Reactivate), I(Ignore), C(Change) ";
				ORDER = 0;
				LENGTH = 2;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			POID PIN_FLD_OBJECT {

				DESCR = "Link to service field list Array of object describing the field needed in the service order from the service object";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_TYPE_STR {

				DESCR = "The service type:";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		ENUM PIN_FLD_STATUS {

			DESCR = "The device status that triggered the SO";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_TYPE_STR {

			DESCR = "The device type, for example: /device/sim";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

	ARRAY PIN_FLD_SERVICES {

		DESCR = "Each array element specifies the provisioning configuration for a type of service order and a service type";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_ACTION {

			DESCR = "The type of provisioning action/service order. The possible values are : A(Activate), D(Deactivate), S(Suspend) R(Reactivate)  ";
			ORDER = 0;
			LENGTH = 2;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_DEVICES {

			DESCR = "Each array element specifies the provisioning configuration of a device for a type of service order and a service type";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_ACTION {

				DESCR = "The type of provisioning action to be included in the SO for this device. The possible values are : A(Activate), D(Deactivate), S(Suspend) R(Reactivate), I(Ignore), C(Change)";
				ORDER = 0;
				LENGTH = 2;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			POID PIN_FLD_OBJECT {

				DESCR = "Link to device field list Array of object describing the field needed in the service order from this device object";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_TYPE_STR {

				DESCR = "The device type: ";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		POID PIN_FLD_OBJECT {

			DESCR = "Link to service field list Array of object describing the field needed in the service order from the service object";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_TYPE_STR {

			DESCR = "The service type: ";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/telco/provisioning/fieldlist
#=======================================

STORABLE CLASS /config/telco/provisioning/fieldlist {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Specifies fields to be included in service order from  /service/telco and /device objects.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_OBJ_ELEM {

		DESCR = "Array of object describing some fields  of an object";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_ELEMENT_ID {

			DESCR = "In case of array the element if -1 = all element id";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_FIELD_NUM {

			DESCR = "The field number as in pin_flds.h.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_FIELD_TYPE {

			DESCR = "The type of field: Array, substruct, other.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_NAME {

			DESCR = "The field name in the SO";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		POID PIN_FLD_OBJECT {

			DESCR = "Link to field list containing an Array or a substruct Link to a config.fieldlist object";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_VALUE {

			DESCR = "The possible field hard coded value.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/telco/service_order_state
#=======================================

STORABLE CLASS /config/telco/service_order_state {

	READ_ACCESS = "BrandLineage";
	WRITE_ACCESS = "BrandLineage";
	DESCR = "Base class for specifying the valid state transitions and the policy opcodes to call for different state transition.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_SERVICE_ORDER_STATES {

		DESCR = "Array of service order states. Each element describe the one state and all the states can be transited to. Opcode can be defined with each transition. That opcode will be called as a policy during the transition. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_FLAGS {

			DESCR = "State policy opcode flag. 0 by default.";
			ORDER = 0;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_NEXT_STATES {

			DESCR = "Array of next states can be transited from this state, including the opcode definition. There could be multiple array elements with the same next state ID to support calling multiple opcodes for the same transition. ";
			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_FLAGS {

				DESCR = "Transition policy opcode flag. 0 by default.";
				ORDER = 0;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_OPCODE {

				DESCR = "Transition policy opcode number. This opcode is called before the state transition is done. ";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			INT PIN_FLD_STATE_ID {

				DESCR = "The id of the end state of the transition. ";
				ORDER = 0;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

		INT PIN_FLD_OPCODE {

			DESCR = "State policy opcode number. This policy will be executed after the transition is done.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_STATE_ID {

			DESCR = "The id of the state. Out of the box values can be NEW(1), READY(2), PROCESSING(3), COMPLETED(4), FAILED(5). ";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_STATE_TYPE {

			DESCR = "The type of this state. All types are defined in pin_service_order.h file. Values can be RAW(0), INIT(1), NORMAL(2), END(3). ";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/telco/service_order_state/gsm
#=======================================

STORABLE CLASS /config/telco/service_order_state/gsm {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Config object that stores the service order state transitions for /service/telco/gsm.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/telco/service_order_state/gsm/data
#=======================================

STORABLE CLASS /config/telco/service_order_state/gsm/data {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Config object that stores the service order state transitions for /service/telco/gsm/data.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/telco/service_order_state/gsm/fax
#=======================================

STORABLE CLASS /config/telco/service_order_state/gsm/fax {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Config object that stores the service order state transitions for /service/telco/gsm/fax.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/telco/service_order_state/gsm/sms
#=======================================

STORABLE CLASS /config/telco/service_order_state/gsm/sms {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Config object that stores the service order state transitions for /service/telco/gsm/sms.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/telco/service_order_state/gsm/telephony
#=======================================

STORABLE CLASS /config/telco/service_order_state/gsm/telephony {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Config object that stores the service order state transitions for /service/telco/gsm/telephony.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/template
#=======================================

STORABLE CLASS /config/template {

	READ_ACCESS = "Brand";
	WRITE_ACCESS = "Self";
	DESCR = "This new configuration object is used as a base class for template super classes associated with /balance_group, /billinfo and /service.  Each template has a rule buffer to hold iScript code";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PAIR {

		DESCR = "Key value pair array used to store instance data for business profiles";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_PAIR_KEY {

			DESCR = "Key used for value lookup.";
			ORDER = 0;
			LENGTH = 60;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_PAIR_VALUE {

			DESCR = "Value data stored in a string format  ";
			ORDER = 0;
			LENGTH = 1023;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

	SUBSTRUCT PIN_FLD_TEMPLATE_INFO {

		DESCR = "Template related infomation";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		BUF PIN_FLD_ISCRIPT_BUF {

			DESCR = "Buffer containing iScript Rule code. ";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/template/balance_group
#=======================================

STORABLE CLASS /config/template/balance_group {

	READ_ACCESS = "Brand";
	WRITE_ACCESS = "Self";
	DESCR = "This configuration class indicates that this template will be used for balance_group object validation.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/template/billinfo
#=======================================

STORABLE CLASS /config/template/billinfo {

	READ_ACCESS = "Brand";
	WRITE_ACCESS = "Self";
	DESCR = "This configuration class indicates that this template will be used for billinfo object validation.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/template/group
#=======================================

STORABLE CLASS /config/template/group {

	READ_ACCESS = "Brand";
	WRITE_ACCESS = "Self";
	DESCR = "This configuration class indicates that this template will be used for /group object validation.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/template/group/sharing
#=======================================

STORABLE CLASS /config/template/group/sharing {

	READ_ACCESS = "Brand";
	WRITE_ACCESS = "Self";
	DESCR = "This configuration class indicates that this template will be used for /group/sharing object validation.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/template/ordered_balgrp
#=======================================

STORABLE CLASS /config/template/ordered_balgrp {

	READ_ACCESS = "Brand";
	WRITE_ACCESS = "Self";
	DESCR = "This configuration class indicates that this template will be used for ordered_balgrp object validation.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/template/profile
#=======================================

STORABLE CLASS /config/template/profile {

	READ_ACCESS = "Brand";
	WRITE_ACCESS = "Self";
	DESCR = "This configuration class indicates that this template will be used for profile object validation.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/template/purchased_discount
#=======================================

STORABLE CLASS /config/template/purchased_discount {

	READ_ACCESS = "Brand";
	WRITE_ACCESS = "Self";
	DESCR = "This configuration class indicates that this template will be used for purchased_discount object validation.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/template/purchased_product
#=======================================

STORABLE CLASS /config/template/purchased_product {

	READ_ACCESS = "Brand";
	WRITE_ACCESS = "Self";
	DESCR = "This configuration class indicates that this template will be used for purchased_product object validation.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/template/service
#=======================================

STORABLE CLASS /config/template/service {

	READ_ACCESS = "Brand";
	WRITE_ACCESS = "Self";
	DESCR = "This configuration class indicates that this template will be used for service object validation.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/transition_type
#=======================================

STORABLE CLASS /config/transition_type {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to specify the mapping between the transition type id and the transition type string. The data will be loaded by the utility load_transition_type with the definitions from file pin_transition_type.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_TRANSITIONS {

		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_TYPE {

			DESCR = "ID of transition type. 1-Upgrade, 2-Downgrade,3-Generation Change(1-100 reserved). Sample customized types are 101-Red, 102-Blue,103-Green.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_TYPE_STR {

			DESCR = "The transition type. Oracle Reserved types are Upgrade, Downgrade, Generation Change.";
			ORDER = 0;
			LENGTH = 1024;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/usage_map
#=======================================

STORABLE CLASS /config/usage_map {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Abstract config object used for usage_map configuration for events. See also /config/usage_map/system. This class is for sub-typing only. If a customer requires additional usage_maps for events, for example, a brand-level usage_map, create a custom /config/usage_map/brand storable class. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_USAGE_MAP {

		DESCR = "Array of entries defining how rating should be performed for different events.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_EVENT_TYPE {

			DESCR = "Type of event that this entry specifies rating for. Unique within usage map. Subtypes are implicitly included.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		DECIMAL PIN_FLD_INCR_QUANTITY {

			DESCR = "Incremental value to round RUM Quantity to. RUM Quantity is always rounded to an integral multiple of the Incr Quantity.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_INCR_UNIT {

			DESCR = "Units that INCR_QUANTITY is specified in.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		DECIMAL PIN_FLD_MIN_QUANTITY {

			DESCR = "Minimum value that the RUM quantity is rounded to. Value smaller than min_quantity is rounded to min_quantity.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_MIN_UNIT {

			DESCR = "Unit min_quantity is expressed in. Value can be NONE(0), SECOND(1), MINUTE(2), HOUR(3), or DAY(4)";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_RATE_PLAN_NAME {

			DESCR = "Optional rate plan name. If the name is not NULL, we use it for this event type. Otherwise, we use the rate_plan_selector to find a rate plan.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_ROUNDING_MODE {

			DESCR = "Specifies how RUM quantity is rounded. Value can be UP(0), Down(1), or Nearest(2).";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		STRING PIN_FLD_RUM_NAME {

			DESCR = "Specifies which RUM should be used to rate this event type. Must be a defined Candidate RUM for this event type.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_TIMEZONE_MODE {

			DESCR = "Timezone mode defines which timezone to use when apply TOD rates. Value can be EVENT(0), SERVER(1), or ACCOUNT(2)";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_TOD_MODE {

			DESCR = "TOD mode defines how TOD rates are applied to the event. Value can be START_TIME(0), END_TIME(1), or TIMED(2)";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/usage_map/system
#=======================================

STORABLE CLASS /config/usage_map/system {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "Abstract class to indicate config object that stores usage maps for system events.";
	IS_PARTITIONED = "0";
}


#=======================================
#  Storable Class /config/verify
#=======================================

STORABLE CLASS /config/verify {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of this class is used to specify the types of failures that you want recorded for verification purposes. When a user attempts to log in, the activity manager consults this object to determine whether or not to log an event. The following types of checks are pre-defined. Success (0),  Account Type Failure (1), Account Status Failure (2), Account Password Failure (3), Service Type Failure (4), Service Status Error (5), Service Password Failure (6), Credit Limit Failure (7), Duplicate Session Failure (8). In addition, you can define your own application-specific failure checks. The activity manager can be instructed to perform a combination of the pre-defined checks by the policy PCM_OP_ACT_POL_SPEC_VERIFY. This configuration object is loaded using the load_pin_verify command line utility. A sample file pin_verify is supplied with Infranet.";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CHECKS {

		DESCR = "Array of configuration for each type of check to be performed. Array element id is not significant.";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			DESCR = "Failure description.";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		INT PIN_FLD_FLAGS {

			DESCR = "Log a verification event if the value is 1. Event not logged if the value is 0. Though you can configure this to log events on successful verifications, it can impact performance.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ENUM PIN_FLD_TYPE {

			DESCR = "Failure type. Customer defined failure types should be beyond 10000.";
			ORDER = 0;
			CREATE = Required;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

	}

}


#=======================================
#  Storable Class /config/voucher
#=======================================

STORABLE CLASS /config/voucher {

	READ_ACCESS = "Global";
	WRITE_ACCESS = "Self";
	DESCR = "A singleton configuration object of thisclass is used to set up voucher order related information. ";
	IS_PARTITIONED = "0";

	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_VOUCHERS_INFO {

		DESCR = "Array of vouchers information. ";
		ORDER = 0;
		AUDITABLE = 0;
		ENCRYPTABLE = 0;
		SERIALIZABLE = 0;

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_BATCH_PART_NO {

			DESCR = "Batch number associated with the order ";
			ORDER = 0;
			LENGTH = 255;
			CREATE = Optional;
			MODIFY = Writeable;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;
		}

		ARRAY PIN_FLD_PACKAGE_INFO {

			ORDER = 0;
			AUDITABLE = 0;
			ENCRYPTABLE = 0;
			SERIALIZABLE = 0;

			#===================
			#  Fields 
			#===================

			DECIMAL PIN_FLD_BATCH_QUANTITY {

				DESCR = "Batch quantity associated with this order.";
				ORDER = 2;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			STRING PIN_FLD_PACK_PART_NO {

				DESCR = "Pack number associated with the order ";
				ORDER = 0;
				LENGTH = 255;
				CREATE = Optional;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

			DECIMAL PIN_FLD_PACK_QUANTITY {

				DESCR = "Pack quantity associated with this order.";
				ORDER = 1;
				CREATE = Required;
				MODIFY = Writeable;
				AUDITABLE = 0;
				ENCRYPTABLE = 0;
				SERIALIZABLE = 0;
			}

		}

	}

}


#=======================================
#  Storable Class /config
#=======================================

STORABLE CLASS /config IMPLEMENTATION ORACLE7 {

	SQL_TABLE = "config_t";
	SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

	#===================
	#  Fields 
	#===================

	POID PIN_FLD_ACCOUNT_OBJ {

		SQL_COLUMN = "account_obj";
	}

	TIMESTAMP PIN_FLD_CREATED_T {

		SQL_COLUMN = "created_t";
	}

	STRING PIN_FLD_DESCR {

		SQL_COLUMN = "descr";
	}

	STRING PIN_FLD_HOSTNAME {

		SQL_COLUMN = "hostname";
	}

	TIMESTAMP PIN_FLD_MOD_T {

		SQL_COLUMN = "mod_t";
	}

	STRING PIN_FLD_NAME {

		SQL_COLUMN = "name";
	}

	POID PIN_FLD_POID {

		SQL_COLUMN = "poid";
	}

	STRING PIN_FLD_PROGRAM_NAME {

		SQL_COLUMN = "program_name";
	}

	STRING PIN_FLD_READ_ACCESS {

		SQL_COLUMN = "read_access";
	}

	STRING PIN_FLD_VALUE {

		SQL_COLUMN = "value";
	}

	STRING PIN_FLD_VERSION {

		SQL_COLUMN = "version";
	}

	STRING PIN_FLD_WRITE_ACCESS {

		SQL_COLUMN = "write_access";
	}

}


#=======================================
#  Storable Class /config/aaa
#=======================================

STORABLE CLASS /config/aaa IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_DROPPED_CALL_TERMINATE_CAUSE_ARRAY {

		SQL_TABLE = "config_aaa_drop_call_cause_t";

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_DROPPED_CALL_TERMINATE_CAUSE {

			SQL_COLUMN = "dropped_call_terminate_cause";
		}

	}

	ARRAY PIN_FLD_SCALED_DELAY_INFO {

		SQL_TABLE = "config_aaa_scaled_delay_info_t";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_MAX_DELAY_TIME {

			SQL_COLUMN = "max_scaled_delay_time";
		}

	}

	SUBSTRUCT PIN_FLD_TELCO_INFO {

		SQL_TABLE = "config_aaa_telco_info_t";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_DELETED_FLAG {

			SQL_COLUMN = "deleted_flag";
		}

		ENUM PIN_FLD_DUPLICATE_CHECK_TYPE {

			SQL_COLUMN = "duplicate_check_type";
		}

		TIMESTAMP PIN_FLD_EXPIRATION_T {

			SQL_COLUMN = "expiration_t";
		}

		ENUM PIN_FLD_SUBSESSION_MODE {

			SQL_COLUMN = "subsession_mode";
		}

	}

}


#=======================================
#  Storable Class /config/aaa/broadband
#=======================================

STORABLE CLASS /config/aaa/broadband IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/aaa/gsm
#=======================================

STORABLE CLASS /config/aaa/gsm IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/aaa/gsm/data
#=======================================

STORABLE CLASS /config/aaa/gsm/data IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/aaa/gsm/fax
#=======================================

STORABLE CLASS /config/aaa/gsm/fax IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/aaa/gsm/sms
#=======================================

STORABLE CLASS /config/aaa/gsm/sms IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/aaa/gsm/telephony
#=======================================

STORABLE CLASS /config/aaa/gsm/telephony IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/account_era
#=======================================

STORABLE CLASS /config/account_era IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EXT_RA {

		SQL_TABLE = "config_account_era_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_LOCALE_DESC_ID {

			SQL_COLUMN = "locale_desc_id";
		}

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "name";
		}

		INT PIN_FLD_STRING_ID {

			SQL_COLUMN = "string_id";
		}

	}

}


#=======================================
#  Storable Class /config/ach
#=======================================

STORABLE CLASS /config/ach IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_ACH_INFO {

		SQL_TABLE = "config_ach_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_CHANNEL_ID {

			SQL_COLUMN = "channel_id";
		}

		STRING PIN_FLD_MERCHANT {

			SQL_COLUMN = "merchant";
		}

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "name";
		}

		POID PIN_FLD_POID_VAL {

			SQL_COLUMN = "poid_val";
		}

	}

}


#=======================================
#  Storable Class /config/adjustment
#=======================================

STORABLE CLASS /config/adjustment IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/adjustment/event
#=======================================

STORABLE CLASS /config/adjustment/event IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENTS {

		SQL_TABLE = "config_adjustment_events_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_TYPE_STR {

			SQL_COLUMN = "type_str";
		}

	}

}


#=======================================
#  Storable Class /config/ar_taxes
#=======================================

STORABLE CLASS /config/ar_taxes IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PARAMS {

		SQL_TABLE = "config_ar_taxes_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_EVENT_TYPE {

			SQL_COLUMN = "event_type";
		}

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "tax_supplier_name";
		}

		STRING PIN_FLD_TAX_CODE {

			SQL_COLUMN = "tax_code";
		}

	}

}


#=======================================
#  Storable Class /config/auth_reauth_info
#=======================================

STORABLE CLASS /config/auth_reauth_info IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_AUTH_REAUTH_INFO {

		SQL_TABLE = "config_auth_reauth_info_t";

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_ALLOW_QUICK_REJECT {

			SQL_COLUMN = "allow_quick_reject";
		}

		INT PIN_FLD_MAX_DELAY_TIME {

			SQL_COLUMN = "max_delay_time";
		}

		ENUM PIN_FLD_REAUTH_FLAG {

			SQL_COLUMN = "reauth_flag";
		}

		ARRAY PIN_FLD_RESOURCE_INFO {

			SQL_TABLE = "config_auth_reauth_res_info_t";

			#===================
			#  Fields 
			#===================

			DECIMAL PIN_FLD_AMOUNT {

				SQL_COLUMN = "amount";
			}

			DECIMAL PIN_FLD_THRESHOLD_LOWER {

				SQL_COLUMN = "threshold_lower";
			}

			DECIMAL PIN_FLD_THRESHOLD_UPPER {

				SQL_COLUMN = "threshold_upper";
			}

		}

		STRING PIN_FLD_SERVICE_TYPE {

			SQL_COLUMN = "service_type";
		}

	}

}


#=======================================
#  Storable Class /config/beid
#=======================================

STORABLE CLASS /config/beid IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_BALANCES {

		SQL_TABLE = "config_beid_balances_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_APPLY_MODE {

			SQL_COLUMN = "apply_mode";
		}

		STRING PIN_FLD_BEID_STR_CODE {

			SQL_COLUMN = "beid_str_code";
		}

		ENUM PIN_FLD_CONSUMPTION_RULE {

			SQL_COLUMN = "consumption_rule";
		}

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "name";
		}

		ARRAY PIN_FLD_RULES {

			SQL_TABLE = "config_beid_rules_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_EVENT_TYPE {

				SQL_COLUMN = "event_type";
			}

			ENUM PIN_FLD_PROCESSING_STAGE {

				SQL_COLUMN = "processing_stage";
			}

			INT PIN_FLD_ROUNDING {

				SQL_COLUMN = "rounding";
			}

			ENUM PIN_FLD_ROUNDING_MODE {

				SQL_COLUMN = "rounding_mode";
			}

			DECIMAL PIN_FLD_TOLERANCE_AMOUNT_MAX {

				SQL_COLUMN = "tolerance_amount_max";
			}

			DECIMAL PIN_FLD_TOLERANCE_AMOUNT_MIN {

				SQL_COLUMN = "tolerance_amount_min";
			}

			DECIMAL PIN_FLD_TOLERANCE_PERCENT {

				SQL_COLUMN = "tolerance_percent";
			}

		}

		ENUM PIN_FLD_STATUS {

			SQL_COLUMN = "status";
		}

		STRING PIN_FLD_SYMBOL {

			SQL_COLUMN = "symbol";
		}

		INT PIN_FLD_VALIDITY_IN_DAYS {

			SQL_COLUMN = "validity_in_days";
		}

	}

}


#=======================================
#  Storable Class /config/billing_segment
#=======================================

STORABLE CLASS /config/billing_segment IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_BILLING_SEGMENTS {

		SQL_TABLE = "config_billing_segment_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			SQL_COLUMN = "config_billing_segment";
		}

	}

	ARRAY PIN_FLD_MAP {

		SQL_TABLE = "config_dom_map_t";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_ACTG_CYCLE_DOM {

			SQL_COLUMN = "config_actg_dom";
		}

		ENUM PIN_FLD_BILLING_SEGMENT {

			SQL_COLUMN = "config_billing_segment";
		}

		INT PIN_FLD_MAX_ACCOUNTS {

			SQL_COLUMN = "config_max_accounts";
		}

		INT PIN_FLD_MAX_SERVICES {

			SQL_COLUMN = "config_max_services";
		}

		INT PIN_FLD_NUM_ACCOUNTS {

			SQL_COLUMN = "config_num_accounts";
		}

		INT PIN_FLD_NUM_SERVICES {

			SQL_COLUMN = "config_num_services";
		}

		ENUM PIN_FLD_STATUS {

			SQL_COLUMN = "config_status";
		}

		TIMESTAMP PIN_FLD_TOTAL_PROCESS_T {

			SQL_COLUMN = "config_total_process_t";
		}

	}

}


#=======================================
#  Storable Class /config/business_params
#=======================================

STORABLE CLASS /config/business_params IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PARAMS {

		SQL_TABLE = "config_business_params_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			SQL_COLUMN = "param_description";
		}

		STRING PIN_FLD_PARAM_NAME {

			SQL_COLUMN = "param_name";
		}

		INT PIN_FLD_PARAM_TYPE {

			SQL_COLUMN = "param_type";
		}

		STRING PIN_FLD_PARAM_VALUE {

			SQL_COLUMN = "param_value";
		}

	}

}


#=======================================
#  Storable Class /config/business_profile
#=======================================

STORABLE CLASS /config/business_profile IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PAIR {

		SQL_TABLE = "config_bus_profile_key_value_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_PAIR_KEY {

			SQL_COLUMN = "pair_key";
		}

		STRING PIN_FLD_PAIR_VALUE {

			SQL_COLUMN = "pair_value";
		}

	}

	ARRAY PIN_FLD_TEMPLATE_ARRAY {

		SQL_TABLE = "config_bus_profile_template_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		POID PIN_FLD_TEMPLATE_OBJ {

			SQL_COLUMN = "template_obj";
		}

	}

}


#=======================================
#  Storable Class /config/business_type
#=======================================

STORABLE CLASS /config/business_type IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_BUSINESS_TYPE_ARRAY {

		SQL_TABLE = "config_business_type_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			SQL_COLUMN = "config_business_type";
		}

	}

}


#=======================================
#  Storable Class /config/calendar
#=======================================

STORABLE CLASS /config/calendar IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CALENDAR_DATE {

		SQL_TABLE = "config_calendar_t";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_CALENDAR_DOM {

			SQL_COLUMN = "calendardom";
		}

		INT PIN_FLD_CALENDAR_MOY {

			SQL_COLUMN = "calendarmoy";
		}

		INT PIN_FLD_CALENDAR_YEAR {

			SQL_COLUMN = "calendaryear";
		}

	}

}


#=======================================
#  Storable Class /config/collections
#=======================================

STORABLE CLASS /config/collections IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/collections/action
#=======================================

STORABLE CLASS /config/collections/action IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_CONFIG_ACTION_INFO {

		SQL_TABLE = "config_collections_action_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_ACTION_DESCR {

			SQL_COLUMN = "action_descr";
		}

		STRING PIN_FLD_ACTION_NAME {

			SQL_COLUMN = "action_name";
		}

		STRING PIN_FLD_ACTION_TYPE {

			SQL_COLUMN = "action_type";
		}

		INT PIN_FLD_OPCODE {

			SQL_COLUMN = "opcode";
		}

		ENUM PIN_FLD_TARGET_ACTION {

			SQL_COLUMN = "target_action";
		}

		POID PIN_FLD_TEMPLATE_OBJ {

			SQL_COLUMN = "template_obj";
		}

	}

}


#=======================================
#  Storable Class /config/collections/action/custom
#=======================================

STORABLE CLASS /config/collections/action/custom IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/collections/action/custom/finance_charge
#=======================================

STORABLE CLASS /config/collections/action/custom/finance_charge IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_FINANCE_CHARGE_INFO {

		SQL_TABLE = "config_collections_fcharge_t";

		#===================
		#  Fields 
		#===================

		DECIMAL PIN_FLD_PERCENT {

			SQL_COLUMN = "percent";
		}

	}

}


#=======================================
#  Storable Class /config/collections/action/custom/late_fee
#=======================================

STORABLE CLASS /config/collections/action/custom/late_fee IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_LATE_FEE_INFO {

		SQL_TABLE = "config_collections_latefee_t";

		#===================
		#  Fields 
		#===================

		DECIMAL PIN_FLD_AMOUNT {

			SQL_COLUMN = "amount";
		}

		INT PIN_FLD_CURRENCY {

			SQL_COLUMN = "currency";
		}

		ENUM PIN_FLD_OPTIONS {

			SQL_COLUMN = "options";
		}

		DECIMAL PIN_FLD_PERCENT {

			SQL_COLUMN = "percent";
		}

	}

}


#=======================================
#  Storable Class /config/collections/aging_buckets
#=======================================

STORABLE CLASS /config/collections/aging_buckets IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_BUCKETS {

		SQL_TABLE = "config_collections_buckets_t";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_DAYS {

			SQL_COLUMN = "days";
		}

	}

}


#=======================================
#  Storable Class /config/collections/profile
#=======================================

STORABLE CLASS /config/collections/profile IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_PROFILE_INFO {

		SQL_TABLE = "config_collections_profile_t";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_CURRENCY {

			SQL_COLUMN = "currency";
		}

		STRING PIN_FLD_PROFILE_DESCR {

			SQL_COLUMN = "profile_descr";
		}

		STRING PIN_FLD_PROFILE_NAME {

			SQL_COLUMN = "profile_name";
		}

	}

}


#=======================================
#  Storable Class /config/collections/profile/default
#=======================================

STORABLE CLASS /config/collections/profile/default IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/collections/scenario
#=======================================

STORABLE CLASS /config/collections/scenario IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_ACTIONS {

		SQL_TABLE = "config_collections_actions_t";

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_ACTION_MODE {

			SQL_COLUMN = "action_mode";
		}

		POID PIN_FLD_CONFIG_ACTION_OBJ {

			SQL_COLUMN = "action_obj";
		}

		INT PIN_FLD_DUE_DAY {

			SQL_COLUMN = "due_day";
		}

	}

	ARRAY PIN_FLD_PROFILE_DATA_ARRAY {

		SQL_TABLE = "conf_coll_scen_profile_data_t";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_STRING_ID {

			SQL_COLUMN = "string_id";
		}

		STRING PIN_FLD_VALUE {

			SQL_COLUMN = "value";
		}

	}

	SUBSTRUCT PIN_FLD_SCENARIO_INFO {

		SQL_TABLE = "config_collections_scenario_t";

		#===================
		#  Fields 
		#===================

		POID PIN_FLD_CONFIG_PROFILE_OBJ {

			SQL_COLUMN = "profile_obj";
		}

		DECIMAL PIN_FLD_ENTRY_AMOUNT {

			SQL_COLUMN = "entry_amount";
		}

		INT PIN_FLD_ENTRY_DAYS {

			SQL_COLUMN = "entry_days";
		}

		DECIMAL PIN_FLD_EXIT_AMOUNT {

			SQL_COLUMN = "exit_amount";
		}

		STRING PIN_FLD_SCENARIO_DESCR {

			SQL_COLUMN = "scenario_descr";
		}

		STRING PIN_FLD_SCENARIO_NAME {

			SQL_COLUMN = "scenario_name";
		}

		INT PIN_FLD_SEVERITY {

			SQL_COLUMN = "scenario_severity";
		}

	}

}


#=======================================
#  Storable Class /config/collections/scenario_params
#=======================================

STORABLE CLASS /config/collections/scenario_params IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PARAMS {

		SQL_TABLE = "config_coll_scenario_params_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_CLASS_NAME {

			SQL_COLUMN = "class_name";
		}

		STRING PIN_FLD_FIELD_NAME {

			SQL_COLUMN = "field_name";
		}

		STRING PIN_FLD_PARAM_NAME {

			SQL_COLUMN = "param_name";
		}

		INT PIN_FLD_STRING_ID {

			SQL_COLUMN = "param_string_id";
		}

		INT PIN_FLD_STR_VERSION {

			SQL_COLUMN = "string_version";
		}

		ENUM PIN_FLD_TYPE {

			SQL_COLUMN = "param_type";
		}

		ARRAY PIN_FLD_VALUES {

			SQL_TABLE = "conf_coll_scen_params_values_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_NAME {

				SQL_COLUMN = "name";
			}

			INT PIN_FLD_STRING_ID {

				SQL_COLUMN = "name_string_id";
			}

			INT PIN_FLD_STR_VERSION {

				SQL_COLUMN = "string_version";
			}

			STRING PIN_FLD_VALUE {

				SQL_COLUMN = "value";
			}

		}

	}

}


#=======================================
#  Storable Class /config/country_currency_map
#=======================================

STORABLE CLASS /config/country_currency_map IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_COUNTRIES {

		SQL_TABLE = "config_ctry_cur_map_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_CANON_COUNTRY {

			SQL_COLUMN = "country_code";
		}

		ARRAY PIN_FLD_CURRENCIES {

			SQL_TABLE = "config_ctry_cur_arr_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_CURRENCY {

				SQL_COLUMN = "currency_id";
			}

		}

	}

}


#=======================================
#  Storable Class /config/credit
#=======================================

STORABLE CLASS /config/credit IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/credit/termcause
#=======================================

STORABLE CLASS /config/credit/termcause IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_TERMINATE_CAUSES {

		SQL_TABLE = "config_credit_termcauses_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		DECIMAL PIN_FLD_CREDIT_AMOUNT {

			SQL_COLUMN = "credit_amount";
		}

		ENUM PIN_FLD_STATUS {

			SQL_COLUMN = "status";
		}

		ENUM PIN_FLD_TERMINATE_CAUSE {

			SQL_COLUMN = "terminate_cause";
		}

		STRING PIN_FLD_TERMINATE_CAUSE_STR {

			SQL_COLUMN = "terminate_cause_str";
		}

	}

}


#=======================================
#  Storable Class /config/credit_profile
#=======================================

STORABLE CLASS /config/credit_profile IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PROFILES {

		SQL_TABLE = "cfg_credit_profile_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		DECIMAL PIN_FLD_CREDIT_FLOOR {

			SQL_COLUMN = "credit_floor";
		}

		DECIMAL PIN_FLD_CREDIT_LIMIT {

			SQL_COLUMN = "credit_limit";
		}

		INT PIN_FLD_CREDIT_THRESHOLDS {

			SQL_COLUMN = "credit_thresholds";
		}

		STRING PIN_FLD_CREDIT_THRESHOLDS_FIXED {

			SQL_COLUMN = "credit_thresholds_fixed";
		}

	}

}


#=======================================
#  Storable Class /config/currency
#=======================================

STORABLE CLASS /config/currency IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/currency/conversionrates
#=======================================

STORABLE CLASS /config/currency/conversionrates IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CUR_RATES_TIMEFRAMES {

		SQL_TABLE = "config_cur_rates_timeframes_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_CUR_CONV_RATES {

			SQL_TABLE = "config_cur_conv_rates_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_CURRENCY_DST {

				SQL_COLUMN = "currency_dst";
			}

			ENUM PIN_FLD_CURRENCY_OPERATOR {

				SQL_COLUMN = "currency_operator";
			}

			DECIMAL PIN_FLD_CURRENCY_RATE {

				SQL_COLUMN = "currency_rate";
			}

			INT PIN_FLD_CURRENCY_SRC {

				SQL_COLUMN = "currency_src";
			}

			STRING PIN_FLD_DESCR {

				SQL_COLUMN = "descr";
			}

		}

		TIMESTAMP PIN_FLD_END_T {

			SQL_COLUMN = "end_t";
		}

		TIMESTAMP PIN_FLD_START_T {

			SQL_COLUMN = "start_t";
		}

	}

}


#=======================================
#  Storable Class /config/currency/emu
#=======================================

STORABLE CLASS /config/currency/emu IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CURRENCY_EMU_MEMBERS {

		SQL_TABLE = "config_currency_emu_members_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_CURRENCY {

			SQL_COLUMN = "currency";
		}

	}

}


#=======================================
#  Storable Class /config/currency/supportedcombinations
#=======================================

STORABLE CLASS /config/currency/supportedcombinations IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CUR_SUPPORTED_COMB {

		SQL_TABLE = "config_cur_supportedcomb_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_CURRENCY {

			SQL_COLUMN = "currency";
		}

		ENUM PIN_FLD_CUR_SECONDARY_REQ {

			SQL_COLUMN = "cur_secondary_req";
		}

		ARRAY PIN_FLD_CUR_SUPPORTED_SEC_CUR {

			SQL_TABLE = "config_cur_supported_seccur_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_CURRENCY_SECONDARY {

				SQL_COLUMN = "currency_secondary";
			}

		}

	}

}


#=======================================
#  Storable Class /config/customer_segment
#=======================================

STORABLE CLASS /config/customer_segment IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CUSTOMER_SEGMENTS {

		SQL_TABLE = "config_customer_segment_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			SQL_COLUMN = "cust_seg_desc";
		}

	}

}


#=======================================
#  Storable Class /config/dealers
#=======================================

STORABLE CLASS /config/dealers IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_DEALERS {

		SQL_TABLE = "config_dealers_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DEALER_CODE {

			SQL_COLUMN = "dealer_code";
		}

		STRING PIN_FLD_DEALER_NAME {

			SQL_COLUMN = "dealer_name";
		}

	}

}


#=======================================
#  Storable Class /config/device_permit_map
#=======================================

STORABLE CLASS /config/device_permit_map IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_DEVICES {

		SQL_TABLE = "config_device_permit_map_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DEVICE_TYPE {

			SQL_COLUMN = "device_type";
		}

		ARRAY PIN_FLD_PERMITTEDS {

			SQL_TABLE = "config_device_permitteds_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_PERMITTED {

				SQL_COLUMN = "permitted";
			}

		}

	}

}


#=======================================
#  Storable Class /config/device_state
#=======================================

STORABLE CLASS /config/device_state IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_DEVICE_STATES {

		SQL_TABLE = "config_device_states_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_FLAGS {

			SQL_COLUMN = "flags";
		}

		ARRAY PIN_FLD_NEXT_STATES {

			SQL_TABLE = "config_device_next_states_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_FLAGS {

				SQL_COLUMN = "flags";
			}

			INT PIN_FLD_OPCODE {

				SQL_COLUMN = "opcode";
			}

			INT PIN_FLD_STATE_ID {

				SQL_COLUMN = "state_id";
			}

		}

		INT PIN_FLD_OPCODE {

			SQL_COLUMN = "opcode";
		}

		INT PIN_FLD_STATE_ID {

			SQL_COLUMN = "state_id";
		}

		ENUM PIN_FLD_STATE_TYPE {

			SQL_COLUMN = "state_type";
		}

		INT PIN_FLD_STRING_ID {

			SQL_COLUMN = "string_id";
		}

		INT PIN_FLD_STR_VERSION {

			SQL_COLUMN = "str_version";
		}

	}

	SUBSTRUCT PIN_FLD_TYPE_INFO {

		SQL_TABLE = "config_device_type_info_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DEVICE_TYPE {

			SQL_COLUMN = "device_type";
		}

	}

}


#=======================================
#  Storable Class /config/device_state/ip
#=======================================

STORABLE CLASS /config/device_state/ip IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/device_state/ip/framed
#=======================================

STORABLE CLASS /config/device_state/ip/framed IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/device_state/ip/static
#=======================================

STORABLE CLASS /config/device_state/ip/static IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/device_state/mc
#=======================================

STORABLE CLASS /config/device_state/mc IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/device_state/modem
#=======================================

STORABLE CLASS /config/device_state/modem IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/device_state/nat
#=======================================

STORABLE CLASS /config/device_state/nat IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/device_state/router
#=======================================

STORABLE CLASS /config/device_state/router IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/device_state/router/cable
#=======================================

STORABLE CLASS /config/device_state/router/cable IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/device_state/router/wifi
#=======================================

STORABLE CLASS /config/device_state/router/wifi IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/device_state/stb
#=======================================

STORABLE CLASS /config/device_state/stb IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/device_state/vc
#=======================================

STORABLE CLASS /config/device_state/vc IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/device_state/voucher
#=======================================

STORABLE CLASS /config/device_state/voucher IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/distribution
#=======================================

STORABLE CLASS /config/distribution IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_DISTRIBUTION {

		SQL_TABLE = "config_distribution_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_CRITERION {

			SQL_COLUMN = "criterion";
		}

		INT PIN_FLD_CURR_ACCOUNT_SIZE {

			SQL_COLUMN = "curr_account_size";
		}

		INT PIN_FLD_DB_NO {

			SQL_COLUMN = "db_no";
		}

		INT PIN_FLD_DB_PRIORITY {

			SQL_COLUMN = "db_priority";
		}

		ENUM PIN_FLD_DB_STATUS {

			SQL_COLUMN = "db_status";
		}

		STRING PIN_FLD_DESCR {

			SQL_COLUMN = "descr";
		}

		INT PIN_FLD_MAX_ACCOUNT_SIZE {

			SQL_COLUMN = "max_account_size";
		}

	}

}


#=======================================
#  Storable Class /config/event_map
#=======================================

STORABLE CLASS /config/event_map IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENT_MAP {

		SQL_TABLE = "config_event_map_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_EVENTS {

			SQL_TABLE = "config_permitted_events_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_COUNT {

				SQL_COLUMN = "event_count";
			}

			STRING PIN_FLD_EVENT_DESCR {

				SQL_COLUMN = "event_descr";
			}

			STRING PIN_FLD_EVENT_TYPE {

				SQL_COLUMN = "event_type";
			}

			INT PIN_FLD_INDICATOR {

				SQL_COLUMN = "time_indicator";
			}

			ENUM PIN_FLD_UNIT {

				SQL_COLUMN = "unit";
			}

		}

		STRING PIN_FLD_PERMITTED {

			SQL_COLUMN = "permitted";
		}

	}

}


#=======================================
#  Storable Class /config/event_order_criteria
#=======================================

STORABLE CLASS /config/event_order_criteria IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CRITERIA {

		SQL_TABLE = "config_event_order_criteria_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_CRITERIA_NAME {

			SQL_COLUMN = "criteria_name";
		}

		ARRAY PIN_FLD_CRITERIA_TYPES {

			SQL_TABLE = "config_eo_criteria_type_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_TYPE_STR {

				SQL_COLUMN = "type_str";
			}

		}

	}

}


#=======================================
#  Storable Class /config/event_record_map
#=======================================

STORABLE CLASS /config/event_record_map IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENT_MAP {

		SQL_TABLE = "config_event_record_map_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_EVENT_TYPE {

			SQL_COLUMN = "event_type";
		}

		INT PIN_FLD_FLAGS {

			SQL_COLUMN = "flags";
		}

	}

}


#=======================================
#  Storable Class /config/event_resource_map
#=======================================

STORABLE CLASS /config/event_resource_map IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENTS {

		SQL_TABLE = "cfg_evt_resrc_map_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_BALANCES {

			SQL_TABLE = "cfg_evt_resrc_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_FLAGS {

				SQL_COLUMN = "flags";
			}

		}

		STRING PIN_FLD_EVENT_TYPE {

			SQL_COLUMN = "event_type";
		}

	}

}


#=======================================
#  Storable Class /config/export_gl
#=======================================

STORABLE CLASS /config/export_gl IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_CONFIG_INFO {

		SQL_TABLE = "config_export_gl_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DIRECTORY {

			SQL_COLUMN = "directory";
		}

		STRING PIN_FLD_FILENAME_PREFIX {

			SQL_COLUMN = "filename_prefix";
		}

		STRING PIN_FLD_SOURCE {

			SQL_COLUMN = "source";
		}

	}

	ARRAY PIN_FLD_GL_SEGMENTS {

		SQL_TABLE = "config_export_gl_segments_t";

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_CALENDAR_DATE {

			SQL_TABLE = "config_export_gl_dates_t";

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_CALENDAR_DOM {

				SQL_COLUMN = "calendar_dom";
			}

			INT PIN_FLD_CALENDAR_MOY {

				SQL_COLUMN = "calendar_month";
			}

		}

		INT PIN_FLD_CALENDAR_DOM {

			SQL_COLUMN = "calendar_dom";
		}

		ENUM PIN_FLD_DAY {

			SQL_COLUMN = "day_of_week";
		}

		ENUM PIN_FLD_GL_NON_MONETARY_FLAG {

			SQL_COLUMN = "non_monetary_flag";
		}

		ENUM PIN_FLD_GL_REPORT_FREQUENCY_TYPE {

			SQL_COLUMN = "report_frequency_type";
		}

		INT PIN_FLD_GL_REPORT_TYPE {

			SQL_COLUMN = "report_type";
		}

		ENUM PIN_FLD_GL_RESOURCE_CATEGORY {

			SQL_COLUMN = "resource_category";
		}

		STRING PIN_FLD_GL_SEGMENT {

			SQL_COLUMN = "segment";
		}

		STRING PIN_FLD_RESOURCE_ID_LIST {

			SQL_COLUMN = "resource_id_list";
		}

		ARRAY PIN_FLD_REVENUES {

			SQL_TABLE = "config_export_gl_revenues_t";

			#===================
			#  Fields 
			#===================

			ENUM PIN_FLD_TYPE {

				SQL_COLUMN = "revenue_type";
			}

		}

	}

	ARRAY PIN_FLD_START_DATES {

		SQL_TABLE = "config_export_gl_start_dates_t";

		#===================
		#  Fields 
		#===================

		TIMESTAMP PIN_FLD_EFFECTIVE_START_T {

			SQL_COLUMN = "effective_start_t";
		}

		STRING PIN_FLD_GL_SEGMENT {

			SQL_COLUMN = "segment";
		}

	}

}


#=======================================
#  Storable Class /config/fld_validate
#=======================================

STORABLE CLASS /config/fld_validate IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_DOMAINS {

		SQL_TABLE = "config_fld_validate_domains_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		BINSTR PIN_FLD_BINSTR_VAL {

			SQL_COLUMN = "binstr_val";
		}

		ENUM PIN_FLD_ENUM_VAL {

			SQL_COLUMN = "enum_val";
		}

		INT PIN_FLD_INT_VAL {

			SQL_COLUMN = "int_val";
		}

		DECIMAL PIN_FLD_NUM_VAL {

			SQL_COLUMN = "num_val";
		}

		POID PIN_FLD_POID_VAL {

			SQL_COLUMN = "poid_val";
		}

		STRING PIN_FLD_STR_VAL {

			SQL_COLUMN = "str_val";
		}

		TIMESTAMP PIN_FLD_TSTAMP_VAL {

			SQL_COLUMN = "tstamp_val";
		}

		INT PIN_FLD_UINT_VAL {

			SQL_COLUMN = "uint_val";
		}

	}

	ARRAY PIN_FLD_FORMATS {

		SQL_TABLE = "config_fld_validate_formats_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_FORMAT_STR {

			SQL_COLUMN = "format_str";
		}

	}

	SUBSTRUCT PIN_FLD_VALIDATION {

		SQL_TABLE = "config_fld_validate_val_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_FIELD_TYPE {

			SQL_COLUMN = "field_type";
		}

		INT PIN_FLD_FLAGS {

			SQL_COLUMN = "flags";
		}

		DECIMAL PIN_FLD_MAXIMUM {

			SQL_COLUMN = "maximum";
		}

		INT PIN_FLD_MAX_LENGTH {

			SQL_COLUMN = "max_length";
		}

		DECIMAL PIN_FLD_MINIMUM {

			SQL_COLUMN = "minimum";
		}

		INT PIN_FLD_MIN_LENGTH {

			SQL_COLUMN = "min_length";
		}

	}

}


#=======================================
#  Storable Class /config/gel
#=======================================

STORABLE CLASS /config/gel IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/gel/template
#=======================================

STORABLE CLASS /config/gel/template IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_GEL_TEMPLATE_INFO {

		SQL_TABLE = "config_gel_template_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		BUF PIN_FLD_GEL_TEMPLATE {

			SQL_TABLE = "config_gel_template_buf_t";
			SQL_COLUMN = "gel_template";
			SQL_STORAGE = "tablespace pin00 storage (initial 500k next 500k maxextents unlimited pctincrease 0 ) ";
		}

	}

}


#=======================================
#  Storable Class /config/gl_chartaccts
#=======================================

STORABLE CLASS /config/gl_chartaccts IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_GL_CHARTACCTS {

		SQL_TABLE = "config_gl_chartaccts_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_COA_ID {

			SQL_COLUMN = "coa_id";
		}

		STRING PIN_FLD_COA_NAME {

			SQL_COLUMN = "coa_name";
		}

		ARRAY PIN_FLD_GL_COA_ACCTS {

			SQL_TABLE = "config_gl_coa_accts_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_ACCOUNT_CODE {

				SQL_COLUMN = "acct_code";
			}

			STRING PIN_FLD_DESCR {

				SQL_COLUMN = "descr";
			}

			ENUM PIN_FLD_STATUS {

				SQL_COLUMN = "status";
			}

			ENUM PIN_FLD_TYPE {

				SQL_COLUMN = "type";
			}

		}

	}

}


#=======================================
#  Storable Class /config/gl_segment
#=======================================

STORABLE CLASS /config/gl_segment IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_GL_SEGMENTS {

		SQL_TABLE = "config_gl_segment_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_BRAND_NAME {

			SQL_COLUMN = "brand_name";
		}

		STRING PIN_FLD_COA_ID {

			SQL_COLUMN = "coa_id";
		}

		STRING PIN_FLD_DESCR {

			SQL_COLUMN = "descr";
		}

		STRING PIN_FLD_PARENT_SEGMENT {

			SQL_COLUMN = "parent_segment";
		}

		STRING PIN_FLD_ROLL_UP {

			SQL_COLUMN = "roll_up";
		}

		STRING PIN_FLD_SEGMENT_NAME {

			SQL_COLUMN = "segment_name";
		}

	}

}


#=======================================
#  Storable Class /config/glid
#=======================================

STORABLE CLASS /config/glid IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_GL_IDS {

		SQL_TABLE = "config_glid_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			SQL_COLUMN = "descr";
		}

		INT PIN_FLD_FLAGS {

			SQL_COLUMN = "flags";
		}

		ARRAY PIN_FLD_GL_ACCTS {

			SQL_TABLE = "config_glid_accts_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_ATTRIBUTE {

				SQL_COLUMN = "attribute";
			}

			STRING PIN_FLD_GL_AR_ACCT {

				SQL_COLUMN = "gl_ar_acct";
			}

			STRING PIN_FLD_GL_OFFSET_ACCT {

				SQL_COLUMN = "gl_offset_acct";
			}

			ENUM PIN_FLD_TYPE {

				SQL_COLUMN = "type";
			}

		}

		STRING PIN_FLD_TAX_CODE {

			SQL_COLUMN = "tax_code";
		}

	}

}


#=======================================
#  Storable Class /config/impact_category
#=======================================

STORABLE CLASS /config/impact_category IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_IMPACT_CATEGORIES {

		SQL_TABLE = "config_impact_categories_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_IMPACT_CATEGORY {

			SQL_COLUMN = "impact_category";
		}

		STRING PIN_FLD_RATE_CATEGORY {

			SQL_COLUMN = "rate_category";
		}

		STRING PIN_FLD_SERVICE_TYPE {

			SQL_COLUMN = "service_type";
		}

	}

}


#=======================================
#  Storable Class /config/inventory_mgmt_template
#=======================================

STORABLE CLASS /config/inventory_mgmt_template IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_INVENTORY_INFO {

		SQL_TABLE = "config_invtry_template_t";

		#===================
		#  Fields 
		#===================

		BUF PIN_FLD_INVENTORY_TEMPLATE {

			SQL_TABLE = "config_invtry_template_buf_t";
			SQL_COLUMN = "inventory_template";
		}

	}

}


#=======================================
#  Storable Class /config/invoice
#=======================================

STORABLE CLASS /config/invoice IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENTS {

		SQL_TABLE = "config_invoice_events_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_CYCLE_TYPE {

			SQL_COLUMN = "cycle_type";
		}

		STRING PIN_FLD_DESCR {

			SQL_COLUMN = "descr";
		}

		ENUM PIN_FLD_DETAIL_TYPE {

			SQL_COLUMN = "detail_type";
		}

		ENUM PIN_FLD_GROUP_TYPE {

			SQL_COLUMN = "group_type";
		}

		ENUM PIN_FLD_TYPE {

			SQL_COLUMN = "type";
		}

		STRING PIN_FLD_TYPE_STR {

			SQL_COLUMN = "type_str";
		}

	}

}


#=======================================
#  Storable Class /config/invoice_data_map
#=======================================

STORABLE CLASS /config/invoice_data_map IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_FIELD {

		SQL_TABLE = "config_inv_data_map_flds_t";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_ATTRIBUTE {

			SQL_COLUMN = "fldattr";
		}

		STRING PIN_FLD_FIELD_NAME {

			SQL_COLUMN = "fldname";
		}

		ENUM PIN_FLD_FIELD_NUM {

			SQL_COLUMN = "fldnum";
		}

		INT PIN_FLD_FIELD_TYPE {

			SQL_COLUMN = "fldtype";
		}

	}

}


#=======================================
#  Storable Class /config/invoice_events
#=======================================

STORABLE CLASS /config/invoice_events IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENTS {

		SQL_TABLE = "config_invoice_event_types_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_TYPE_STR {

			SQL_COLUMN = "type_str";
		}

	}

}


#=======================================
#  Storable Class /config/invoice_templates
#=======================================

STORABLE CLASS /config/invoice_templates IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_INHERITED_INFO {

		SQL_TABLE = "config_inv_temp_inherited_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_FLAGS {

			SQL_COLUMN = "flags";
		}

		STRING PIN_FLD_TEMPLATE_NAME {

			SQL_COLUMN = "template_name";
		}

	}

	ARRAY PIN_FLD_INV_INFO {

		SQL_TABLE = "config_inv_temp_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		BUF PIN_FLD_BUFFER {

			SQL_TABLE = "config_inv_temp_buf_t";
			SQL_COLUMN = "buf";
			SQL_STORAGE = "tablespace pin00 storage (initial 500k next 500k maxextents unlimited pctincrease 0 ) ";
		}

		ARRAY PIN_FLD_FORMATS {

			SQL_TABLE = "config_inv_temp_formats_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FILENAME {

				SQL_COLUMN = "filename";
			}

		}

		STRING PIN_FLD_LOCALE {

			SQL_COLUMN = "locale";
		}

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "name";
		}

	}

}


#=======================================
#  Storable Class /config/invoice_templates/dunning
#=======================================

STORABLE CLASS /config/invoice_templates/dunning IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/item_tags
#=======================================

STORABLE CLASS /config/item_tags IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_ITEM_TAGS {

		SQL_TABLE = "config_item_tags_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_EVENT_TYPE {

			SQL_COLUMN = "event_type";
		}

		STRING PIN_FLD_ITEM_TAG {

			SQL_COLUMN = "item_tag";
		}

		STRING PIN_FLD_SERVICE_TYPE {

			SQL_COLUMN = "service_type";
		}

	}

}


#=======================================
#  Storable Class /config/item_types
#=======================================

STORABLE CLASS /config/item_types IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_ITEM_TYPES {

		SQL_TABLE = "config_item_types_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			SQL_COLUMN = "descr";
		}

		STRING PIN_FLD_ITEM_SUB_TYPE {

			SQL_COLUMN = "item_sub_type";
		}

		STRING PIN_FLD_ITEM_TAG {

			SQL_COLUMN = "item_tag";
		}

		STRING PIN_FLD_ITEM_TYPE {

			SQL_COLUMN = "item_type";
		}

		INT PIN_FLD_PRECREATE {

			SQL_COLUMN = "precreate";
		}

		ENUM PIN_FLD_TYPE {

			SQL_COLUMN = "type";
		}

	}

}


#=======================================
#  Storable Class /config/lifecycle_states
#=======================================

STORABLE CLASS /config/lifecycle_states IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PERMITTED_SERVICE_TYPES {

		SQL_TABLE = "config_lcm_states_perm_srvc_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_SERVICE_TYPE {

			SQL_COLUMN = "service_type";
		}

	}

	ARRAY PIN_FLD_STATES {

		SQL_TABLE = "config_lcm_states_array_t";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_INITIAL_STATE {

			SQL_COLUMN = "initial_state_flag";
		}

		ARRAY PIN_FLD_RULES {

			SQL_TABLE = "config_lcm_states_rules_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_MODULE {

				SQL_COLUMN = "module";
			}

			STRING PIN_FLD_NAME {

				SQL_COLUMN = "name";
			}

			STRING PIN_FLD_VALUE {

				SQL_COLUMN = "value";
			}

		}

		TIMESTAMP PIN_FLD_SERVICE_STATE_EXPIRATION_T {

			SQL_COLUMN = "state_expiration_t";
		}

		INT PIN_FLD_STATE_ID {

			SQL_COLUMN = "state_id";
		}

		STRING PIN_FLD_STATE_NAME {

			SQL_COLUMN = "state_name";
		}

		INT PIN_FLD_STRING_ID {

			SQL_COLUMN = "string_id";
		}

		INT PIN_FLD_STR_VERSION {

			SQL_COLUMN = "str_version";
		}

		ARRAY PIN_FLD_TRANSITIONS {

			SQL_TABLE = "config_lcm_states_trans_t";

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_DEFAULT_FLAG {

				SQL_COLUMN = "default_state";
			}

			INT PIN_FLD_NEXT_STATE {

				SQL_COLUMN = "next_state";
			}

			INT PIN_FLD_POST_OPCODE {

				SQL_COLUMN = "post_opcode";
			}

			INT PIN_FLD_PRE_OPCODE {

				SQL_COLUMN = "pre_opcode";
			}

		}

	}

}


#=======================================
#  Storable Class /config/link_batchstat
#=======================================

STORABLE CLASS /config/link_batchstat IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_BATCHSTAT_LINKS {

		SQL_TABLE = "batchstat_links_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_CONTROL_POINT {

			SQL_COLUMN = "Control_point";
		}

		INT PIN_FLD_LINK_LEVEL {

			SQL_COLUMN = "Link_level";
		}

		STRING PIN_FLD_OBJECT_TYPE {

			SQL_COLUMN = "Object_type";
		}

		STRING PIN_FLD_PARENT_CONTROL_POINT {

			SQL_COLUMN = "Parent_ctrl_point";
		}

		STRING PIN_FLD_PARENT_OBJECT_TYPE {

			SQL_COLUMN = "Parent_obj_type";
		}

	}

}


#=======================================
#  Storable Class /config/link_controlpoint
#=======================================

STORABLE CLASS /config/link_controlpoint IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CONTROLPOINT_LINKS {

		SQL_TABLE = "config_controlpoints_links_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_CONTROL_POINT {

			SQL_COLUMN = "control_point";
		}

		STRING PIN_FLD_OBJECT_TYPE {

			SQL_COLUMN = "object_type";
		}

		STRING PIN_FLD_PARENT_CONTROL_POINT {

			SQL_COLUMN = "parent_ctrl_point";
		}

		STRING PIN_FLD_PARENT_OBJECT_TYPE {

			SQL_COLUMN = "parent_obj_type";
		}

		INT PIN_FLD_USAGE {

			SQL_COLUMN = "usage";
		}

	}

}


#=======================================
#  Storable Class /config/locales_map
#=======================================

STORABLE CLASS /config/locales_map IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_LOCALES_MAP {

		SQL_TABLE = "config_locales_map_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_CODESETS {

			SQL_TABLE = "config_locales_codeset_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_PLATFORM {

				SQL_COLUMN = "platform";
			}

			STRING PIN_FLD_SRC_CODESET {

				SQL_COLUMN = "src_codeset";
			}

			STRING PIN_FLD_TARGET_CODESET {

				SQL_COLUMN = "target_codeset";
			}

		}

		STRING PIN_FLD_HP_LOCALE {

			SQL_COLUMN = "hp_locale";
		}

		STRING PIN_FLD_INFRANET_LOCALE {

			SQL_COLUMN = "infranet_locale";
		}

		STRING PIN_FLD_JAVA_LOCALE {

			SQL_COLUMN = "java_locale";
		}

		INT PIN_FLD_LOCALE_DESC_ID {

			SQL_COLUMN = "descr_id";
		}

		STRING PIN_FLD_SOLARIS_LOCALE {

			SQL_COLUMN = "solaris_locale";
		}

		STRING PIN_FLD_WINDOWS_LOCALE {

			SQL_COLUMN = "windows_locale";
		}

	}

}


#=======================================
#  Storable Class /config/locales_validate
#=======================================

STORABLE CLASS /config/locales_validate IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_LOCALES {

		SQL_TABLE = "config_locales_validate_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_COUNTRY {

			SQL_COLUMN = "country";
		}

		ARRAY PIN_FLD_VALIDATION_SPECIFICS {

			SQL_TABLE = "config_locales_valid_spec_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FIELD_NAME {

				SQL_COLUMN = "fld_name";
			}

			STRING PIN_FLD_NAME {

				SQL_COLUMN = "cfg_name";
			}

		}

	}

}


#=======================================
#  Storable Class /config/login_exclusion
#=======================================

STORABLE CLASS /config/login_exclusion IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_SERVICES {

		SQL_TABLE = "config_login_exclude_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_SERVICE_TYPE {

			SQL_COLUMN = "cnf_ex_login_svc_type";
		}

	}

}


#=======================================
#  Storable Class /config/map_glid
#=======================================

STORABLE CLASS /config/map_glid IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CHOICES {

		SQL_TABLE = "config_map_glid_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_EVENT_TYPE {

			SQL_COLUMN = "event_type";
		}

		INT PIN_FLD_GL_ID {

			SQL_COLUMN = "glid";
		}

		INT PIN_FLD_STRING_ID {

			SQL_COLUMN = "reason_code_str_id";
		}

		INT PIN_FLD_STR_VERSION {

			SQL_COLUMN = "reason_code_str_ver";
		}

	}

}


#=======================================
#  Storable Class /config/mta
#=======================================

STORABLE CLASS /config/mta IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CONFIG_MTA {

		SQL_TABLE = "config_mta_t";

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_FUNCTION_MAP {

			SQL_TABLE = "config_mta_function_map_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FUNCTION {

				SQL_COLUMN = "callback_function";
			}

			STRING PIN_FLD_NAME {

				SQL_COLUMN = "name";
			}

		}

		STRING PIN_FLD_LIBRARY {

			SQL_COLUMN = "library";
		}

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "name";
		}

		ARRAY PIN_FLD_OPCODE_MAP {

			SQL_TABLE = "config_mta_opcode_map_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FUNCTION {

				SQL_COLUMN = "callback_function";
			}

			STRING PIN_FLD_NAME {

				SQL_COLUMN = "name";
			}

		}

	}

}


#=======================================
#  Storable Class /config/network_element
#=======================================

STORABLE CLASS /config/network_element IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_NETWORK_ELEMENT_INFO {

		SQL_TABLE = "config_network_element_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_NETWORK_ELEMENT {

			SQL_COLUMN = "network_element";
		}

	}

}


#=======================================
#  Storable Class /config/notify
#=======================================

STORABLE CLASS /config/notify IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENTS {

		SQL_TABLE = "config_notify_events_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_FLAGS {

			SQL_COLUMN = "flags";
		}

		INT PIN_FLD_OPCODE {

			SQL_COLUMN = "opcode";
		}

		STRING PIN_FLD_TYPE_STR {

			SQL_COLUMN = "type_str";
		}

	}

}


#=======================================
#  Storable Class /config/opcodemap
#=======================================

STORABLE CLASS /config/opcodemap IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_OPCODES {

		SQL_TABLE = "config_opcodemap_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "name";
		}

		INT PIN_FLD_OPCODE {

			SQL_COLUMN = "opcode";
		}

		ARRAY PIN_FLD_OPCODE_MAP {

			SQL_TABLE = "config_opcodemap_opcode_map_t";

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_OPCODE {

				SQL_COLUMN = "opcode";
			}

			STRING PIN_FLD_TYPE_STR {

				SQL_COLUMN = "type_str";
			}

		}

		ENUM PIN_FLD_PROCESSING_STAGE {

			SQL_COLUMN = "processing_stage";
		}

	}

}


#=======================================
#  Storable Class /config/opcodemap/gsm
#=======================================

STORABLE CLASS /config/opcodemap/gsm IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/opcodemap/tcf
#=======================================

STORABLE CLASS /config/opcodemap/tcf IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/order_state
#=======================================

STORABLE CLASS /config/order_state IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_ORDER_STATES {

		SQL_TABLE = "config_order_states_t";

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_NEXT_STATES {

			SQL_TABLE = "config_order_next_states_t";

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_STATE_ID {

				SQL_COLUMN = "state_id";
			}

		}

		INT PIN_FLD_STATE_ID {

			SQL_COLUMN = "state_id";
		}

		ENUM PIN_FLD_STATE_TYPE {

			SQL_COLUMN = "state_type";
		}

		INT PIN_FLD_STRING_ID {

			SQL_COLUMN = "string_id";
		}

		INT PIN_FLD_STR_VERSION {

			SQL_COLUMN = "str_version";
		}

	}

	SUBSTRUCT PIN_FLD_TYPE_INFO {

		SQL_TABLE = "config_order_type_info_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_ORDER_TYPE {

			SQL_COLUMN = "order_type";
		}

	}

}


#=======================================
#  Storable Class /config/order_state/voucher
#=======================================

STORABLE CLASS /config/order_state/voucher IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/payment
#=======================================

STORABLE CLASS /config/payment IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PAY_TYPES {

		SQL_TABLE = "config_payment_pay_types_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_OPCODES {

			SQL_TABLE = "config_payment_opcodes_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_EVENT_TYPE {

				SQL_COLUMN = "event_type";
			}

			INT PIN_FLD_FLAGS {

				SQL_COLUMN = "flags";
			}

			STRING PIN_FLD_NAME {

				SQL_COLUMN = "name";
			}

			INT PIN_FLD_OPCODE {

				SQL_COLUMN = "opcode";
			}

		}

		STRING PIN_FLD_PAYINFO_TYPE {

			SQL_COLUMN = "payinfo_type";
		}

		STRING PIN_FLD_PAYMENT_EVENT_TYPE {

			SQL_COLUMN = "payment_event_type";
		}

		STRING PIN_FLD_REFUND_EVENT_TYPE {

			SQL_COLUMN = "refund_event_type";
		}

	}

}


#=======================================
#  Storable Class /config/payment_term
#=======================================

STORABLE CLASS /config/payment_term IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PAYMENT_TERMS {

		SQL_TABLE = "config_payment_term_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			SQL_COLUMN = "payment_term_desc";
		}

	}

}


#=======================================
#  Storable Class /config/paymenttool
#=======================================

STORABLE CLASS /config/paymenttool IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PAY_TYPES {

		SQL_TABLE = "config_pymttool_pay_types_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "name";
		}

		ARRAY PIN_FLD_PAYMENTTOOL_FIELDS {

			SQL_TABLE = "config_pymttool_bt_fields_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_BATCH_TYPE {

				SQL_COLUMN = "batch_type";
			}

			STRING PIN_FLD_COLUMN_NAME {

				SQL_COLUMN = "column_name";
			}

			STRING PIN_FLD_FIELD_NAME {

				SQL_COLUMN = "field_name";
			}

			INT PIN_FLD_PURPOSE {

				SQL_COLUMN = "purpose";
			}

		}

	}

}


#=======================================
#  Storable Class /config/pin_archive
#=======================================

STORABLE CLASS /config/pin_archive IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_ARCHIVABLE_OBJ_TYPES {

		SQL_TABLE = "config_archive_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_ARCHIVE_AGING {

			SQL_COLUMN = "aging";
		}

		ENUM PIN_FLD_ARCHIVE_OPERATION {

			SQL_COLUMN = "operation";
		}

		ARRAY PIN_FLD_ARCHIVE_TABLEMAP {

			SQL_TABLE = "config_archive_tablemap_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_NAME {

				SQL_COLUMN = "tablename";
			}

		}

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "object_type";
		}

	}

}


#=======================================
#  Storable Class /config/pin_webd
#=======================================

STORABLE CLASS /config/pin_webd IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PERMITTEDS {

		SQL_TABLE = "config_webd_permitteds_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_FLAGS {

			SQL_COLUMN = "flags";
		}

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "name";
		}

		INT PIN_FLD_OPCODE {

			SQL_COLUMN = "opcode";
		}

	}

}


#=======================================
#  Storable Class /config/pricing_admin
#=======================================

STORABLE CLASS /config/pricing_admin IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	SUBSTRUCT PIN_FLD_CONFIG_INFO {

		SQL_TABLE = "pricing_admin_config_info_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_HOSTNAME {

			SQL_COLUMN = "hostname";
		}

		STRING PIN_FLD_LOGIN {

			SQL_COLUMN = "login";
		}

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "name";
		}

		STRING PIN_FLD_PASSWD {

			SQL_COLUMN = "passwd";
		}

		INT PIN_FLD_PORT {

			SQL_COLUMN = "port";
		}

		STRING PIN_FLD_SERVER_TYPE {

			SQL_COLUMN = "server_type";
		}

	}

}


#=======================================
#  Storable Class /config/process_audit_conf
#=======================================

STORABLE CLASS /config/process_audit_conf IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_AUDIT_CONFIG {

		SQL_TABLE = "conf_proc_aud_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_AUDIT_PROCESS {

			SQL_COLUMN = "Process_Name";
		}

		ARRAY PIN_FLD_FIELD_NAMES {

			SQL_TABLE = "conf_proc_aud_fld_nm_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FIELD_NAME {

				SQL_COLUMN = "fieldname";
			}

		}

		INT PIN_FLD_THRESHOLD {

			SQL_COLUMN = "Threshold";
		}

	}

}


#=======================================
#  Storable Class /config/provisioning_tag
#=======================================

STORABLE CLASS /config/provisioning_tag IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_OPCODES {

		SQL_TABLE = "config_provtag_opcodes_t";

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_MODE {

			SQL_COLUMN = "op_mode";
		}

		INT PIN_FLD_OPCODE {

			SQL_COLUMN = "opcode";
		}

		ARRAY PIN_FLD_PARAMS {

			SQL_TABLE = "config_provtag_params_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FIELD_NAME {

				SQL_COLUMN = "field_name";
			}

			STRING PIN_FLD_VALUE {

				SQL_COLUMN = "value";
			}

		}

	}

	ARRAY PIN_FLD_PERMITTEDS {

		SQL_TABLE = "config_provtag_permitteds_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_PERMITTED {

			SQL_COLUMN = "permitted";
		}

	}

}


#=======================================
#  Storable Class /config/psm
#=======================================

STORABLE CLASS /config/psm IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_ACCOUNTS {

		SQL_TABLE = "config_psm_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		POID PIN_FLD_ACCOUNT_OBJ {

			SQL_COLUMN = "account_obj";
		}

	}

}


#=======================================
#  Storable Class /config/ra_alerts
#=======================================

STORABLE CLASS /config/ra_alerts IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_THRESHOLDS {

		SQL_TABLE = "config_ra_alerts_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_LOCALE {

			SQL_COLUMN = "locale_name";
		}

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "alert_name";
		}

		ARRAY PIN_FLD_RECIPIENTS {

			SQL_TABLE = "config_ra_alerts_rec_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_EMAIL_ADDR {

				SQL_COLUMN = "email_address";
			}

			ENUM PIN_FLD_TYPE {

				SQL_COLUMN = "mail_type";
			}

		}

		STRING PIN_FLD_SENDER {

			SQL_COLUMN = "sender_name";
		}

	}

}


#=======================================
#  Storable Class /config/ra_flows
#=======================================

STORABLE CLASS /config/ra_flows IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_RA_FLOWS {

		SQL_TABLE = "config_ra_flows_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_CONTROL_POINTS {

			SQL_TABLE = "config_ra_ctrl_pt_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_DESCR {

				SQL_COLUMN = "cp_descr";
			}

			STRING PIN_FLD_NAME {

				SQL_COLUMN = "cp_name";
			}

			STRING PIN_FLD_OBJECT_TYPE {

				SQL_COLUMN = "obj_type";
			}

		}

		STRING PIN_FLD_DESCR {

			SQL_COLUMN = "flow_descr";
		}

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "flow_name";
		}

	}

}


#=======================================
#  Storable Class /config/ra_thresholds
#=======================================

STORABLE CLASS /config/ra_thresholds IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_THRESHOLDS {

		SQL_TABLE = "config_ra_threshold_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_DATE_RANGE_TYPE {

			SQL_COLUMN = "time_range_type";
		}

		ENUM PIN_FLD_DAY {

			SQL_COLUMN = "week_day";
		}

		ARRAY PIN_FLD_FILTER_DETAILS {

			SQL_TABLE = "config_ra_filter_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FIELD_NAME {

				SQL_COLUMN = "filter_field_name";
			}

			INT PIN_FLD_INT_VAL {

				SQL_COLUMN = "filter_int_value";
			}

			STRING PIN_FLD_STR_VAL {

				SQL_COLUMN = "filter_string_value";
			}

		}

		INT PIN_FLD_LENGTH {

			SQL_COLUMN = "period_length";
		}

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "threshold_name";
		}

		INT PIN_FLD_NUM_UNITS {

			SQL_COLUMN = "no_of_days_weeks";
		}

		STRING PIN_FLD_OBJECT_TYPE {

			SQL_COLUMN = "obj_type";
		}

		INT PIN_FLD_START_OFFSET {

			SQL_COLUMN = "alert_start_time";
		}

		ARRAY PIN_FLD_VALUE_RANGES {

			SQL_TABLE = "config_ra_val_rngs_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FIELD_NAME {

				SQL_COLUMN = "threshold_field_name";
			}

			DECIMAL PIN_FLD_MAXIMUM {

				SQL_COLUMN = "max_value";
			}

			DECIMAL PIN_FLD_MINIMUM {

				SQL_COLUMN = "min_value";
			}

		}

	}

}


#=======================================
#  Storable Class /config/reason_code_scope
#=======================================

STORABLE CLASS /config/reason_code_scope IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_FILTER_LIST {

		SQL_TABLE = "config_reason_code_scope_t";

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_EVENTS {

			SQL_TABLE = "config_reason_code_events_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_EVENT_TYPE {

				SQL_COLUMN = "event_type";
			}

			STRING PIN_FLD_SERVICE_TYPE {

				SQL_COLUMN = "service_type";
			}

		}

		INT PIN_FLD_STRING_ID {

			SQL_COLUMN = "string_id";
		}

		INT PIN_FLD_STR_VERSION {

			SQL_COLUMN = "str_version";
		}

	}

}


#=======================================
#  Storable Class /config/recharge_card_type
#=======================================

STORABLE CLASS /config/recharge_card_type IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_RECHARGE_CARDS {

		SQL_TABLE = "config_recharge_card_type_t";

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_DEALERS {

			SQL_TABLE = "config_recharge_dealers_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_DEALER_CODE {

				SQL_COLUMN = "dealer_code";
			}

			STRING PIN_FLD_DEALER_NAME {

				SQL_COLUMN = "dealer_name";
			}

		}

		STRING PIN_FLD_RECHARGE_CARD_CODE {

			SQL_COLUMN = "recharge_card_code";
		}

		STRING PIN_FLD_RECHARGE_CARD_TYPE {

			SQL_COLUMN = "recharge_card_type";
		}

	}

}


#=======================================
#  Storable Class /config/remittance_flds
#=======================================

STORABLE CLASS /config/remittance_flds IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_REMIT_FLDS {

		SQL_TABLE = "config_remittance_flds_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_REMIT_BASE_TYPE {

			SQL_COLUMN = "remit_base_type";
		}

		STRING PIN_FLD_REMIT_CRITERIA {

			SQL_COLUMN = "remit_criteria";
		}

		INT PIN_FLD_REMIT_FLD_NO {

			SQL_COLUMN = "remit_fld";
		}

		INT PIN_FLD_REMIT_SUBSTRUCT_NO {

			SQL_COLUMN = "remit_substruct";
		}

	}

}


#=======================================
#  Storable Class /config/remittance_spec
#=======================================

STORABLE CLASS /config/remittance_spec IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_REMIT_ACCOUNTS {

		SQL_TABLE = "config_remittance_spec_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_ACCOUNT_NO {

			SQL_COLUMN = "remit_account_no";
		}

		ARRAY PIN_FLD_CRITERIA {

			SQL_TABLE = "config_remittance_criteria_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_REMIT_FLD_NO {

				SQL_COLUMN = "remit_spec_fld";
			}

			STRING PIN_FLD_REMIT_OP {

				SQL_COLUMN = "remit_op";
			}

			STRING PIN_FLD_VALUE {

				SQL_COLUMN = "remit_val";
			}

		}

		POID PIN_FLD_REMIT_ACCOUNT_OBJ {

			SQL_COLUMN = "remit_account_obj";
		}

		POID PIN_FLD_REMIT_PRODUCT_OBJ {

			SQL_COLUMN = "remit_product_obj";
		}

		STRING PIN_FLD_REMIT_TYPE {

			SQL_COLUMN = "remit_type";
		}

		STRING PIN_FLD_RUM_NAME {

			SQL_COLUMN = "rum_name";
		}

	}

}


#=======================================
#  Storable Class /config/rerate_flds
#=======================================

STORABLE CLASS /config/rerate_flds IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_RERATE_FIELDS {

		SQL_TABLE = "cfg_rerate_fields_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_FIELD_NAME {

			SQL_COLUMN = "field_name";
		}

		STRING PIN_FLD_RERATE_EXTRACTION_KEY {

			SQL_COLUMN = "rerate_extraction_key";
		}

	}

}


#=======================================
#  Storable Class /config/rerate_flds/compare_bi
#=======================================

STORABLE CLASS /config/rerate_flds/compare_bi IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/reserve
#=======================================

STORABLE CLASS /config/reserve IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_RESERVATION_INFO {

		SQL_TABLE = "config_reserve_t";

		#===================
		#  Fields 
		#===================

		DECIMAL PIN_FLD_INCR_QUANTITY {

			SQL_COLUMN = "icnr_quantity";
		}

		ENUM PIN_FLD_IS_PRIMARY_RUM {

			SQL_COLUMN = "is_primary_rum";
		}

		DECIMAL PIN_FLD_MIN_QUANTITY {

			SQL_COLUMN = "min_quantity";
		}

		DECIMAL PIN_FLD_QUANTITY {

			SQL_COLUMN = "quantity";
		}

		INT PIN_FLD_RATIO {

			SQL_COLUMN = "ratio";
		}

		ENUM PIN_FLD_REQ_MODE {

			SQL_COLUMN = "req_mode";
		}

		STRING PIN_FLD_RUM_NAME {

			SQL_COLUMN = "rum_name";
		}

		ENUM PIN_FLD_UNIT {

			SQL_COLUMN = "unit";
		}

	}

}


#=======================================
#  Storable Class /config/reserve/broadband
#=======================================

STORABLE CLASS /config/reserve/broadband IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/reserve/gsm
#=======================================

STORABLE CLASS /config/reserve/gsm IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/reserve/gsm/data
#=======================================

STORABLE CLASS /config/reserve/gsm/data IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/reserve/gsm/telephony
#=======================================

STORABLE CLASS /config/reserve/gsm/telephony IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/rtp
#=======================================

STORABLE CLASS /config/rtp IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/rtp/trim_flist
#=======================================

STORABLE CLASS /config/rtp/trim_flist IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENT_MAP {

		SQL_TABLE = "cfg_rtp_trim_evt_map_t";

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_EVENTS {

			SQL_TABLE = "cfg_rtp_trim_evts_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_EVENT_TYPE {

				SQL_COLUMN = "event_type";
			}

			INT PIN_FLD_FLAGS {

				SQL_COLUMN = "flags";
			}

		}

		ARRAY PIN_FLD_REQUIRED_FIELDS {

			SQL_TABLE = "cfg_rtp_trim_req_flds_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_FIELD_NAME {

				SQL_COLUMN = "field_name";
			}

		}

	}

}


#=======================================
#  Storable Class /config/rum
#=======================================

STORABLE CLASS /config/rum IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_RUM_MAP {

		SQL_TABLE = "config_rum_map_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_CANDIDATE_RUMS {

			SQL_TABLE = "config_candidate_rums_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_QUANTITY_EXPR {

				SQL_COLUMN = "quantity_expr";
			}

			STRING PIN_FLD_RUM_NAME {

				SQL_COLUMN = "rum_name";
			}

			ENUM PIN_FLD_UNIT {

				SQL_COLUMN = "unit";
			}

		}

		STRING PIN_FLD_EVENT_TYPE {

			SQL_COLUMN = "event_type";
		}

	}

}


#=======================================
#  Storable Class /config/service_framework
#=======================================

STORABLE CLASS /config/service_framework IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/service_framework/permitted_service_types
#=======================================

STORABLE CLASS /config/service_framework/permitted_service_types IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PERMITTED_SERVICE_TYPES {

		SQL_TABLE = "config_svcfw_perm_svc_types_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_CONFIG_TYPE_PROV_DTLS {

			SQL_COLUMN = "config_type_prov_dtls";
		}

		STRING PIN_FLD_CONFIG_TYPE_SVC_ORDER_STATE {

			SQL_COLUMN = "config_type_svc_order_state";
		}

		ENUM PIN_FLD_PROVISIONING_MODE {

			SQL_COLUMN = "provisioning_mode";
		}

		STRING PIN_FLD_SERVICE_TYPE {

			SQL_COLUMN = "service_type";
		}

	}

}


#=======================================
#  Storable Class /config/service_state_map
#=======================================

STORABLE CLASS /config/service_state_map IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_STATES {

		SQL_TABLE = "config_lifecycle_states_t";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_LIFECYCLE_STATE {

			SQL_COLUMN = "lifecycle_state";
		}

		ENUM PIN_FLD_STATUS {

			SQL_COLUMN = "status";
		}

		INT PIN_FLD_STATUS_FLAGS {

			SQL_COLUMN = "status_flags";
		}

	}

}


#=======================================
#  Storable Class /config/snowball_distribution
#=======================================

STORABLE CLASS /config/snowball_distribution IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_DISTRIBUTION {

		SQL_TABLE = "cfg_snowball_distrib_t";

		#===================
		#  Fields 
		#===================

		POID PIN_FLD_DISCOUNT_OBJ {

			SQL_COLUMN = "discount_obj";
		}

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "NAME";
		}

		INT PIN_FLD_RESOURCE_ID {

			SQL_COLUMN = "res_id";
		}

	}

}


#=======================================
#  Storable Class /config/spec_impact_category
#=======================================

STORABLE CLASS /config/spec_impact_category IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_IMPACT_CATEGORIES {

		SQL_TABLE = "config_spec_impact_category_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_FLAGS {

			SQL_COLUMN = "flags";
		}

		INT PIN_FLD_OPCODE {

			SQL_COLUMN = "opcode";
		}

		STRING PIN_FLD_TYPE_STR {

			SQL_COLUMN = "type_str";
		}

	}

}


#=======================================
#  Storable Class /config/spec_rates
#=======================================

STORABLE CLASS /config/spec_rates IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_RATES {

		SQL_TABLE = "config_spec_rates_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_FLAGS {

			SQL_COLUMN = "flags";
		}

		INT PIN_FLD_OPCODE {

			SQL_COLUMN = "opcode";
		}

		STRING PIN_FLD_TYPE_STR {

			SQL_COLUMN = "type_str";
		}

	}

}


#=======================================
#  Storable Class /config/sub_bal_contributor
#=======================================

STORABLE CLASS /config/sub_bal_contributor IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENT_MAP {

		SQL_TABLE = "cfg_sub_bal_contrib_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_EVENTS {

			SQL_TABLE = "cfg_evt_contrib_flds_t";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_EVENT_TYPE {

				SQL_COLUMN = "event_type";
			}

			STRING PIN_FLD_RETRIEVE_EDR_FIELD {

				SQL_COLUMN = "retrv_edr_fld";
			}

			STRING PIN_FLD_RETRIEVE_FIELD {

				SQL_COLUMN = "retrv_fld";
			}

			STRING PIN_FLD_UPDATE_EDR_FIELD {

				SQL_COLUMN = "upd_edr_fld";
			}

			STRING PIN_FLD_UPDATE_FIELD {

				SQL_COLUMN = "upd_fld";
			}

		}

		INT PIN_FLD_RESOURCE_ID {

			SQL_COLUMN = "res_id";
		}

	}

}


#=======================================
#  Storable Class /config/subscriber_preferences_map
#=======================================

STORABLE CLASS /config/subscriber_preferences_map IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_SUBSCRIBER_PREFERENCES {

		SQL_TABLE = "config_pref_map_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DEFAULT {

			SQL_COLUMN = "default_value";
		}

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "name";
		}

		INT PIN_FLD_STRING_ID {

			SQL_COLUMN = "string_id";
		}

		INT PIN_FLD_SUBSCRIBER_PREFERENCE_ID {

			SQL_COLUMN = "preference_id";
		}

		ENUM PIN_FLD_TYPE {

			SQL_COLUMN = "type";
		}

		ARRAY PIN_FLD_VALUES {

			SQL_TABLE = "preference_values_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_VALUE {

				SQL_COLUMN = "value";
			}

		}

	}

}


#=======================================
#  Storable Class /config/suppression
#=======================================

STORABLE CLASS /config/suppression IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CUSTOMER_SEGMENTS {

		SQL_TABLE = "config_suppression_t";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_MAX_SUPPRESSED_CYCLES {

			SQL_COLUMN = "max_suppressed_bill_cycles";
		}

		DECIMAL PIN_FLD_MIN_BILL_AMOUNT {

			SQL_COLUMN = "min_bill_amount";
		}

	}

}


#=======================================
#  Storable Class /config/suspense_edr_fld_map
#=======================================

STORABLE CLASS /config/suspense_edr_fld_map IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_EVENTS {

		SQL_TABLE = "cfg_susp_edr_nme_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		ARRAY PIN_FLD_EVENT_MAP {

			SQL_TABLE = "cfg_susp_edr_fld_t";

			#===================
			#  Fields 
			#===================

			POID PIN_FLD_BRAND_OBJ {

				SQL_COLUMN = "brand_obj";
			}

			TIMESTAMP PIN_FLD_VALID_FROM {

				SQL_COLUMN = "valid_from";
			}

			TIMESTAMP PIN_FLD_VALID_TO {

				SQL_COLUMN = "valid_to";
			}

			STRING PIN_FLD_VALUE {

				SQL_COLUMN = "fld_value";
			}

		}

		STRING PIN_FLD_FIELD_NAME {

			SQL_COLUMN = "fld_name";
		}

	}

}


#=======================================
#  Storable Class /config/suspense_params
#=======================================

STORABLE CLASS /config/suspense_params IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PARAMS {

		SQL_TABLE = "cfg_susp_params_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			SQL_COLUMN = "param_description";
		}

		STRING PIN_FLD_PARAM_NAME {

			SQL_COLUMN = "param_name";
		}

		STRING PIN_FLD_PARAM_VALUE {

			SQL_COLUMN = "param_value";
		}

	}

}


#=======================================
#  Storable Class /config/suspense_reason_code
#=======================================

STORABLE CLASS /config/suspense_reason_code IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_SUSPENSE_REASONS {

		SQL_TABLE = "cfg_susp_reason_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_SUSPENSE_REASON {

			SQL_COLUMN = "suspense_reason";
		}

		ENUM PIN_FLD_SUSPENSE_SUBREASON {

			SQL_COLUMN = "suspense_subreason";
		}

	}

}


#=======================================
#  Storable Class /config/tax_supplier
#=======================================

STORABLE CLASS /config/tax_supplier IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_TAX_SUPPLIERS {

		SQL_TABLE = "config_taxs_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_ADDRESS {

			SQL_COLUMN = "address";
		}

		INT PIN_FLD_DEFAULT_FLAG {

			SQL_COLUMN = "default_flag";
		}

		STRING PIN_FLD_DESCR {

			SQL_COLUMN = "descr";
		}

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "name";
		}

		STRING PIN_FLD_NEXUSINFO {

			SQL_COLUMN = "nexusinfo";
		}

		ENUM PIN_FLD_REGULATED_FLAG {

			SQL_COLUMN = "regulated_flag";
		}

		ARRAY PIN_FLD_VATINFO {

			SQL_TABLE = "config_vat_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_CANON_COUNTRY {

				SQL_COLUMN = "canon_country";
			}

			STRING PIN_FLD_VAT_CERT {

				SQL_COLUMN = "vat_cert";
			}

		}

	}

}


#=======================================
#  Storable Class /config/telco
#=======================================

STORABLE CLASS /config/telco IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PROD_PROVISIONING_TAGS {

		SQL_TABLE = "config_telco_t";

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_DATE_CHANGE_IMPACT {

			SQL_COLUMN = "date_change_impact";
		}

		STRING PIN_FLD_DESCR {

			SQL_COLUMN = "descr";
		}

		ARRAY PIN_FLD_EXT_RA {

			SQL_TABLE = "config_telco_ext_ra_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_LABEL {

				SQL_COLUMN = "label";
			}

			INT PIN_FLD_LOCALE_DESC_ID {

				SQL_COLUMN = "locale_desc_id";
			}

			STRING PIN_FLD_NAME {

				SQL_COLUMN = "name";
			}

			ENUM PIN_FLD_NEED_PROVISIONING {

				SQL_COLUMN = "need_provisioning";
			}

			INT PIN_FLD_STRING_ID {

				SQL_COLUMN = "string_id";
			}

		}

		STRING PIN_FLD_PROVISIONING_TAG {

			SQL_COLUMN = "provisioning_tag";
		}

		ARRAY PIN_FLD_SERVICE_EXTENSIONS {

			SQL_TABLE = "config_telco_serv_extn_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_NAME {

				SQL_COLUMN = "name";
			}

			STRING PIN_FLD_VALUE {

				SQL_COLUMN = "value";
			}

		}

		ARRAY PIN_FLD_TELCO_FEATURES {

			SQL_TABLE = "config_telco_features_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_NAME {

				SQL_COLUMN = "name";
			}

		}

	}

}


#=======================================
#  Storable Class /config/telco/broadband
#=======================================

STORABLE CLASS /config/telco/broadband IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/telco/gsm
#=======================================

STORABLE CLASS /config/telco/gsm IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/telco/gsm/data
#=======================================

STORABLE CLASS /config/telco/gsm/data IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/telco/gsm/fax
#=======================================

STORABLE CLASS /config/telco/gsm/fax IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/telco/gsm/sms
#=======================================

STORABLE CLASS /config/telco/gsm/sms IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/telco/gsm/telephony
#=======================================

STORABLE CLASS /config/telco/gsm/telephony IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/telco/provisioning
#=======================================

STORABLE CLASS /config/telco/provisioning IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_DEVICES {

		SQL_TABLE = "cfg_tlc_prov_dev_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_ACTION {

			SQL_COLUMN = "action";
		}

		POID PIN_FLD_OBJECT {

			SQL_COLUMN = "object";
		}

		ARRAY PIN_FLD_PROVISIONING_INFO {

			SQL_TABLE = "cfg_tlc_prov_dev_prov_info_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_ACTION {

				SQL_COLUMN = "action";
			}

			POID PIN_FLD_OBJECT {

				SQL_COLUMN = "object";
			}

			STRING PIN_FLD_TYPE_STR {

				SQL_COLUMN = "type_str";
			}

		}

		ARRAY PIN_FLD_SERVICES {

			SQL_TABLE = "cfg_tlc_prov_dev_serv_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_ACTION {

				SQL_COLUMN = "action";
			}

			POID PIN_FLD_OBJECT {

				SQL_COLUMN = "object";
			}

			STRING PIN_FLD_TYPE_STR {

				SQL_COLUMN = "type_str";
			}

		}

		ENUM PIN_FLD_STATUS {

			SQL_COLUMN = "status";
		}

		STRING PIN_FLD_TYPE_STR {

			SQL_COLUMN = "type_str";
		}

	}

	ARRAY PIN_FLD_SERVICES {

		SQL_TABLE = "cfg_tlc_prov_serv_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_ACTION {

			SQL_COLUMN = "action";
		}

		ARRAY PIN_FLD_DEVICES {

			SQL_TABLE = "cfg_tlc_prov_serv_dev_t";

			#===================
			#  Fields 
			#===================

			STRING PIN_FLD_ACTION {

				SQL_COLUMN = "action";
			}

			POID PIN_FLD_OBJECT {

				SQL_COLUMN = "object";
			}

			STRING PIN_FLD_TYPE_STR {

				SQL_COLUMN = "type_str";
			}

		}

		POID PIN_FLD_OBJECT {

			SQL_COLUMN = "object";
		}

		STRING PIN_FLD_TYPE_STR {

			SQL_COLUMN = "type_str";
		}

	}

}


#=======================================
#  Storable Class /config/telco/provisioning/fieldlist
#=======================================

STORABLE CLASS /config/telco/provisioning/fieldlist IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_OBJ_ELEM {

		SQL_TABLE = "cfg_tlc_prov_flist_obj_elem_t";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_ELEMENT_ID {

			SQL_COLUMN = "element_id";
		}

		ENUM PIN_FLD_FIELD_NUM {

			SQL_COLUMN = "field_num";
		}

		INT PIN_FLD_FIELD_TYPE {

			SQL_COLUMN = "field_type";
		}

		STRING PIN_FLD_NAME {

			SQL_COLUMN = "name";
		}

		POID PIN_FLD_OBJECT {

			SQL_COLUMN = "object";
		}

		STRING PIN_FLD_VALUE {

			SQL_COLUMN = "value";
		}

	}

}


#=======================================
#  Storable Class /config/telco/service_order_state
#=======================================

STORABLE CLASS /config/telco/service_order_state IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_SERVICE_ORDER_STATES {

		SQL_TABLE = "cfg_tlc_svc_order_stts_t";

		#===================
		#  Fields 
		#===================

		INT PIN_FLD_FLAGS {

			SQL_COLUMN = "flags";
		}

		ARRAY PIN_FLD_NEXT_STATES {

			SQL_TABLE = "cfg_tlc_svc_order_nxt_stts_t";

			#===================
			#  Fields 
			#===================

			INT PIN_FLD_FLAGS {

				SQL_COLUMN = "flags";
			}

			INT PIN_FLD_OPCODE {

				SQL_COLUMN = "opcode";
			}

			INT PIN_FLD_STATE_ID {

				SQL_COLUMN = "state_id";
			}

		}

		INT PIN_FLD_OPCODE {

			SQL_COLUMN = "opcode";
		}

		INT PIN_FLD_STATE_ID {

			SQL_COLUMN = "state_id";
		}

		ENUM PIN_FLD_STATE_TYPE {

			SQL_COLUMN = "state_type";
		}

	}

}


#=======================================
#  Storable Class /config/telco/service_order_state/gsm
#=======================================

STORABLE CLASS /config/telco/service_order_state/gsm IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/telco/service_order_state/gsm/data
#=======================================

STORABLE CLASS /config/telco/service_order_state/gsm/data IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/telco/service_order_state/gsm/fax
#=======================================

STORABLE CLASS /config/telco/service_order_state/gsm/fax IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/telco/service_order_state/gsm/sms
#=======================================

STORABLE CLASS /config/telco/service_order_state/gsm/sms IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/telco/service_order_state/gsm/telephony
#=======================================

STORABLE CLASS /config/telco/service_order_state/gsm/telephony IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/template
#=======================================

STORABLE CLASS /config/template IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_PAIR {

		SQL_TABLE = "config_template_key_value_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_PAIR_KEY {

			SQL_COLUMN = "pair_key";
		}

		STRING PIN_FLD_PAIR_VALUE {

			SQL_COLUMN = "pair_value";
		}

	}

	SUBSTRUCT PIN_FLD_TEMPLATE_INFO {

		SQL_TABLE = "config_template_info_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		BUF PIN_FLD_ISCRIPT_BUF {

			SQL_TABLE = "config_template_iscript";
			SQL_COLUMN = "template_iscript";
			SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";
		}

	}

}


#=======================================
#  Storable Class /config/template/balance_group
#=======================================

STORABLE CLASS /config/template/balance_group IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/template/billinfo
#=======================================

STORABLE CLASS /config/template/billinfo IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/template/group
#=======================================

STORABLE CLASS /config/template/group IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/template/group/sharing
#=======================================

STORABLE CLASS /config/template/group/sharing IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/template/ordered_balgrp
#=======================================

STORABLE CLASS /config/template/ordered_balgrp IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/template/profile
#=======================================

STORABLE CLASS /config/template/profile IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/template/purchased_discount
#=======================================

STORABLE CLASS /config/template/purchased_discount IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/template/purchased_product
#=======================================

STORABLE CLASS /config/template/purchased_product IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/template/service
#=======================================

STORABLE CLASS /config/template/service IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/transition_type
#=======================================

STORABLE CLASS /config/transition_type IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_TRANSITIONS {

		SQL_TABLE = "config_transition_types_t";

		#===================
		#  Fields 
		#===================

		ENUM PIN_FLD_TYPE {

			SQL_COLUMN = "transition_type_id";
		}

		STRING PIN_FLD_TYPE_STR {

			SQL_COLUMN = "transition_type_str";
		}

	}

}


#=======================================
#  Storable Class /config/usage_map
#=======================================

STORABLE CLASS /config/usage_map IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_USAGE_MAP {

		SQL_TABLE = "config_usage_map_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_EVENT_TYPE {

			SQL_COLUMN = "event_type";
		}

		DECIMAL PIN_FLD_INCR_QUANTITY {

			SQL_COLUMN = "incr_quantity";
		}

		ENUM PIN_FLD_INCR_UNIT {

			SQL_COLUMN = "incr_unit";
		}

		DECIMAL PIN_FLD_MIN_QUANTITY {

			SQL_COLUMN = "min_quantity";
		}

		ENUM PIN_FLD_MIN_UNIT {

			SQL_COLUMN = "min_unit";
		}

		STRING PIN_FLD_RATE_PLAN_NAME {

			SQL_COLUMN = "rate_plan_name";
		}

		ENUM PIN_FLD_ROUNDING_MODE {

			SQL_COLUMN = "rounding_mode";
		}

		STRING PIN_FLD_RUM_NAME {

			SQL_COLUMN = "rum_name";
		}

		ENUM PIN_FLD_TIMEZONE_MODE {

			SQL_COLUMN = "timezone_mode";
		}

		ENUM PIN_FLD_TOD_MODE {

			SQL_COLUMN = "tod_mode";
		}

	}

}


#=======================================
#  Storable Class /config/usage_map/system
#=======================================

STORABLE CLASS /config/usage_map/system IMPLEMENTATION ORACLE7 {

}


#=======================================
#  Storable Class /config/verify
#=======================================

STORABLE CLASS /config/verify IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_CHECKS {

		SQL_TABLE = "config_verify_checks_t";
		SQL_STORAGE = "tablespace pin00 storage (initial 100k next 100k maxextents unlimited pctincrease 0 ) ";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_DESCR {

			SQL_COLUMN = "descr";
		}

		INT PIN_FLD_FLAGS {

			SQL_COLUMN = "flags";
		}

		ENUM PIN_FLD_TYPE {

			SQL_COLUMN = "type";
		}

	}

}


#=======================================
#  Storable Class /config/voucher
#=======================================

STORABLE CLASS /config/voucher IMPLEMENTATION ORACLE7 {


	#===================
	#  Fields 
	#===================

	ARRAY PIN_FLD_VOUCHERS_INFO {

		SQL_TABLE = "config_voucher_t";

		#===================
		#  Fields 
		#===================

		STRING PIN_FLD_BATCH_PART_NO {

			SQL_COLUMN = "batch_part_no";
		}

		ARRAY PIN_FLD_PACKAGE_INFO {

			SQL_TABLE = "config_voucher_pack_info_t";

			#===================
			#  Fields 
			#===================

			DECIMAL PIN_FLD_BATCH_QUANTITY {

				SQL_COLUMN = "batch_qty";
			}

			STRING PIN_FLD_PACK_PART_NO {

				SQL_COLUMN = "pack_part_no";
			}

			DECIMAL PIN_FLD_PACK_QUANTITY {

				SQL_COLUMN = "pack_qty";
			}

		}

	}

}

